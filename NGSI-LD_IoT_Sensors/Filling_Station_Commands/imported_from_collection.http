#!/usr/bin/env dothttp

// This example shows how a real IoT Agent would send an Ultralight command to a **Filling Station** to unload the barn. The
// **Filling Station** has already supplied an endpoint `/iot/filling001` where it is listening for commands.
// 
// The response returns the command and the result of the action.
// 
// Once the command is sent, some time will pass and the level of the filling station will change. The changes of state are
// actively reported to the IoT Broker when they occur, and the updated state of the **FillingStation** can be seen on the
// device monitor page.
// 
// The body of the request consists of the `id` of the device (`urn:ngsi-ld:Device:filling001`) as held in the Context
// Broker and the name of the command (`remove`) to invoke on the device.

@name("Remove hay from the barn")
POST "https://{{ultralight}}/iot/filling001"
data('urn:ngsi-ld:Device:filling001@remove')


// This example shows how a real IoT Agent would send a command to a **Smart Door** to open the door.
// The **Smart Door** has already supplied an endpoint `/iot/door001` where it is listening for commands.
// 
// The body of the request consists of the `id` of the device (`urn:ngsi-ld:Door:001`)
// as held in the Context Broker and the name of the command (`open`) to invoke on the device.
// 
// The response returns the command and the result of the action.
// 
// The state of the **Smart Door** can be seen on the device monitor page. Customers may now enter and
// the **motion sensor** may pick up movement and send measurements to the IoT Broker.
// 
// The Northbound HTTP requests generated by the **motion sensor** can also be viewed on the device monitor page.

@name("Add hay to the barn")
POST "https://{{ultralight}}/iot/door001"
data('urn:ngsi-ld:Door:001@open')



