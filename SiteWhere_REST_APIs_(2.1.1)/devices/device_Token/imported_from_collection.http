#!/usr/bin/env dothttp

@name("Get device by token")
GET "https://{{baseUrl}}/devices/:deviceToken"
"Authorization": ""
? "includeAssignment"= "true"
? "includeDeviceType"= "true"
? "includeNested"= "false"


@name("Update an existing device")
PUT "https://{{baseUrl}}/devices/:deviceToken"
"Authorization": ""
"Content-Type": "application/json"
json({
    "comments": "<string>",
    "deviceElementMappings": [
        {
            "deviceElementSchemaPath": "<string>",
            "deviceToken": "<string>"
        },
        {
            "deviceElementSchemaPath": "<string>",
            "deviceToken": "<string>"
        }
    ],
    "deviceTypeToken": "<string>",
    "metadata": "<object>",
    "parentDeviceToken": "<string>",
    "removeParentHardwareId": "<boolean>",
    "status": "<string>",
    "token": "<string>"
})


@name("Delete device based on unique hardware id")
DELETE "https://{{baseUrl}}/devices/:deviceToken"
"Authorization": ""


@name("Add multiple events for device")
POST "https://{{baseUrl}}/devices/:deviceToken/batch"
"Authorization": ""
"Content-Type": "application/json"
json({
    "alerts": [
        {
            "alternateId": "<string>",
            "eventDate": "<dateTime>",
            "eventType": "<string>",
            "level": "<string>",
            "message": "<string>",
            "metadata": "<object>",
            "source": "<string>",
            "type": "<string>",
            "updateState": "<boolean>"
        },
        {
            "alternateId": "<string>",
            "eventDate": "<dateTime>",
            "eventType": "<string>",
            "level": "<string>",
            "message": "<string>",
            "metadata": "<object>",
            "source": "<string>",
            "type": "<string>",
            "updateState": "<boolean>"
        }
    ],
    "deviceToken": "<string>",
    "locations": [
        {
            "alternateId": "<string>",
            "elevation": "<double>",
            "eventDate": "<dateTime>",
            "eventType": "<string>",
            "latitude": "<double>",
            "longitude": "<double>",
            "metadata": "<object>",
            "updateState": "<boolean>"
        },
        {
            "alternateId": "<string>",
            "elevation": "<double>",
            "eventDate": "<dateTime>",
            "eventType": "<string>",
            "latitude": "<double>",
            "longitude": "<double>",
            "metadata": "<object>",
            "updateState": "<boolean>"
        }
    ],
    "measurements": [
        {
            "alternateId": "<string>",
            "eventDate": "<dateTime>",
            "eventType": "<string>",
            "metadata": "<object>",
            "name": "<string>",
            "updateState": "<boolean>",
            "value": "<double>"
        },
        {
            "alternateId": "<string>",
            "eventDate": "<dateTime>",
            "eventType": "<string>",
            "metadata": "<object>",
            "name": "<string>",
            "updateState": "<boolean>",
            "value": "<double>"
        }
    ]
})


@name("Get label for device")
GET "https://{{baseUrl}}/devices/:deviceToken/label/:generatorId"
"Authorization": ""



