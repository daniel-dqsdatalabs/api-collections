#!/usr/bin/env dothttp

// Gets a list of all OLTs names, IPs, telnet ports, SNMP ports and unique IDs.

@name("Get OLTs list")
GET "https://{{subdomain}}.smartolt.com/api/system/get_olts"
"X-Token": "{{api_key}}"



// Gets a list of OLT cards by OLT ID, as defined in SmartOLT OLT cards section. <br>
// Each OLT card consists of:
// <ul>
// <li>slot</li>
// <li>type</li>
// <li>real type</li>
// <li>number of ports</li>
// <li>software version</li>
// <li>status</li>
// <li>role</li>
// <li>date & time when the info was last updated</li>
// </ul>

@name("Get OLT cards details")
GET "https://{{subdomain}}.smartolt.com/api/system/get_olt_cards_details/{{olt_id}}"
"X-Token": "{{api_key}}"


// Gets a list of OLT PON ports by OLT ID, as defined in SmartOLT OLT PON ports section. <br>
// Each OLT PON port consists of:
// <ul>
// <li>slot</li>
// <li>port</li>
// <li>type</li>
// <li>admin state</li>
// <li>status</li>
// <li>total ONUs</li>
// <li>online ONUs</li>
// <li>average signal</li>
// <li>description</li>
// <li>min range</li>
// <li>max range</li>
// <li>TX Power</li>
// </ul>

@name("Get OLT PON ports details")
GET "https://{{subdomain}}.smartolt.com/api/system/get_olt_pon_ports_details/{{olt_id}}"
"X-Token": "{{api_key}}"


// Gets a list of OLT uplink ports by OLT ID, as defined in SmartOLT OLT uplink ports section. <br>
// Each OLT uplink port consists of:
// <ul>
// <li>name</li>
// <li>description</li>
// <li>type</li>
// <li>admin state</li>
// <li>status</li>
// <li>negotiation</li>
// <li>MTU</li>
// <li>wavelength</li>
// <li>temperature</li>
// <li>PVID untag</li>
// <li>mode</li>
// <li>tagged VLANs</li>
// </ul>

@name("Get OLT uplink ports details")
GET "https://{{subdomain}}.smartolt.com/api/system/get_olt_uplink_ports_details/{{olt_id}}"
"X-Token": "{{api_key}}"


// Gets a list of all ONU types as defined in SmartOLT ONU Types section. <br>
// Each ONU type consists of:
// <ul>
// <li>unique ID</li>
// <li>name</li>
// <li>PON type (it can be "gpon" or "epon")</li>
// <li>capability (it can be "Bridging" or "Bridging/Routing")</li>
// <li>number of ethernet ports</li>
// <li>number of WiFi ports</li>
// <li>number of VoIP ports</li>
// <li>CATV</li>
// <li>if it allows custom ONU profiles (1 - it allows, 0 - it doesn't allow)</li>
// </ul>

@name("Get ONU types list")
GET "https://{{subdomain}}.smartolt.com/api/system/get_onu_types"
"X-Token": "{{api_key}}"



// Gets a list of ONU types by PON type (it can be "gpon" or "epon"), as defined in SmartOLT ONU Types section. <br>
// Each ONU type consists of:
// <ul>
// <li>unique ID</li>
// <li>name</li>
// <li>PON type (it can be "gpon" or "epon")</li>
// <li>capability (it can be "Bridging" or "Bridging/Routing")</li>
// <li>number of ethernet ports</li>
// <li>number of WiFi ports</li>
// <li>number of VoIP ports</li>
// <li>CATV</li>
// <li>if it allows custom ONU profiles (1 - it allows, 0 - it doesn't allow)</li>
// </ul>

@name("Get ONU types list by PON type")
GET "https://{{subdomain}}.smartolt.com/api/system/get_onu_types_by_pon_type/{{pon_type}}"
"X-Token": "{{api_key}}"



// Gets a list of all zones as defined in SmartOLT Zones section. <br>
// Each zone consists of:
// <ul>
// <li>unique ID</li>
// <li>name</li>
// </ul>

@name("Get zones list")
GET "https://{{subdomain}}.smartolt.com/api/system/get_zones"
"X-Token": "{{api_key}}"


// Gets a list of all unconfigured ONUs on all OLTs. <br>
// Each unconfigured ONU consists of:
// <ul>
// <li>PON type (it can be "gpon" or "epon")</li>
// <li>board</li>
// <li>port</li>
// <li>onu</li>
// <li>sn (in case of gpon ONU is the SN, in case of epon ONU is the MAC)</li>
// <li>ONU type name</li>
// <li>ONU type unique ID</li>
// <li>OLT unique ID</li>
// <li>if ONU is disabled (1 - is disabled, 0 - is enabled)</li>
// <li>A list of possible actions for this ONU: view, resync_config, authorize, move_here</li>
// </ul>

@name("Get all unconfigured ONUs")
GET "https://{{subdomain}}.smartolt.com/api/onu/unconfigured_onus"
"X-Token": "{{api_key}}"
? "sn"= "AD0"
? "onu_type"= "F6"


// Gets a list of all unconfigured ONUs for a specified OLT unique ID. <br>
// Each unconfigured ONU consists of:
// <ul>
// <li>PON type (it can be "gpon" or "epon")</li>
// <li>board</li>
// <li>port</li>
// <li>onu</li>
// <li>sn (in case of gpon ONU is the SN, in case of epon ONU is the MAC)</li>
// <li>ONU type name</li>
// <li>ONU type unique ID</li>
// <li>OLT unique ID</li>
// <li>if ONU is disabled (1 - is disabled, 0 - is enabled)</li>
// <li>A list of possible actions for this ONU: view, resync_config, authorize, move_here</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no OLT ID was provided</li>
// <li>no OLT was found for the provided OLT ID</li>
// </ul>

@name("Get unconfigured ONUs by OLT unique ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/unconfigured_onus_for_olt/{{olt_id}}"
"X-Token": "{{api_key}}"
? "sn"= "AD0"
? "onu_type"= "F6"


// Gets all the ONUs statuses for a specified OLT ID, board, PON port or zone. If no OLT ID, board, PON port or zone is specified, then all the ONUs statuses on all OLTs will be returned. <br>
// ONU statuses returned can be:
// <ul>
// <li>Online</li>
// <li>Power fail</li>
// <li>LOS</li>
// <li>Offline</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no OLT was found for the provided OLT ID</li>
// <li>no OLT ID was provided with board or PON port</li>
// <li>no OLT ID or no board was provided with PON port</li>
// <li>no Zone was found for the provided zone name</li>
// </ul>

@name("Get all ONUs statuses")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onus_statuses"
"X-Token": "{{api_key}}"
? "olt_id"= "1"
? "board"= "2"
? "port"= "3"
? "zone"= "City Centre"


// Gets all the ONUs administrative statuses for a specified OLT ID, board, PON port or zone. If no OLT ID, board, PON port or zone is specified, then all the ONUs statuses on all OLTs will be returned. <br>
// ONU administrative statuses returned can be:
// <ul>
// <li>Enabled</li>
// <li>Disabled</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no OLT was found for the provided OLT ID</li>
// <li>no OLT ID was provided with board or PON port</li>
// <li>no OLT ID or no board was provided with PON port</li>
// <li>no Zone was found for the provided zone name</li>
// </ul>

@name("Get all ONUs administrative statuses")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onus_administrative_statuses"
"X-Token": "{{api_key}}"
? "olt_id"= "1"
? "board"= "2"
? "port"= "3"
? "zone"= "City Centre"


// Gets all the ONUs CATV statuses for a specified OLT ID, board, PON port or zone. If no OLT ID, board, PON port or zone is specified, then all the ONUs statuses on all OLTs will be returned. <br>
// ONU CATV statuses returned can be:
// <ul>
// <li>Enabled</li>
// <li>Disabled</li>
// <li>CATV not supported by ONU-Type</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no OLT was found for the provided OLT ID</li>
// <li>no OLT ID was provided with board or PON port</li>
// <li>no OLT ID or no board was provided with PON port</li>
// <li>no Zone was found for the provided zone name</li>
// </ul>

@name("Get all ONUs CATV statuses")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onus_catv_statuses"
"X-Token": "{{api_key}}"
? "olt_id"= "1"
? "board"= "2"
? "port"= "3"
? "zone"= "City Centre"


// Gets all the ONUs signals for a specified OLT ID, board, PON port or zone. If no OLT ID, board, PON port or zone is specified, then all the ONUs signals on all OLTs will be returned. <br>
// The response consists of:
// <ul>
// <li>ONU signal: 'Critical', 'Warning', 'Very good'</li>
// <li>ONU signal 1310 value</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no OLT was found for the provided OLT ID</li>
// <li>no OLT ID was provided with board or PON port</li>
// <li>no OLT ID or no board was provided with PON port</li>
// <li>no Zone was found for the provided zone name</li>
// </ul>

@name("Get all ONUs signals")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onus_signals"
"X-Token": "{{api_key}}"
? "olt_id"= "1"
? "board"= "2"
? "port"= "3"
? "zone"= "City Centre"


// Gets all the ONUs details for a specified OLT ID, board, PON port or zone. If no OLT ID, board, PON port or zone is specified, then all the ONUs details on all OLTs will be returned. <br>
// The "Get all ONUs details" method is equivalent to an export of the entire database of ONU details and therefore it is not recommended to be used repeatedly, as the contained information does not change so often. <br>
// Maximum recommended calls for "Get all ONUs details": 3 per hour (calls are blocked after the limit is reached). <br>
// The response consists of:
// <ul>
// <li>ONU name</li>
// <li>ONU SN</li>
// <li>ONU board, port, onu etc</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no OLT was found for the provided OLT ID</li>
// <li>no OLT ID was provided with board or PON port</li>
// <li>no OLT ID or no board was provided with PON port</li>
// <li>no Zone was found for the provided zone name</li>
// </ul>

@name("Get all ONUs details")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_all_onus_details"
"X-Token": "{{api_key}}"
? "olt_id"= "1"
? "board"= "2"
? "port"= "3"
? "zone"= "City Centre"


// Gets the ONU status for a specified ONU unique external ID. <br>
// ONU status returned can be:
// <ul>
// <li>Online</li>
// <li>Power fail</li>
// <li>LOS</li>
// <li>Offline</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT wasn't able to process the command</li>
// <li>ONU is saved for later authorization and doesn't have a status yet</li>
// </ul>

@name("Get ONU status by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_status/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// Gets the ONU administrative status for a specified ONU unique external ID. <br>
// ONU status returned can be:
// <ul>
// <li>Enabled</li>
// <li>Disabled</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT wasn't able to process the command</li>
// <li>ONU is saved for later authorization and doesn't have a status yet</li>
// </ul>

@name("Get ONU administrative status by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_administrative_status/{{onu_external_id}}"
"X-Token": "{{api_key}}"


// Gets the ONU CATV status for a specified ONU unique external ID. <br>
// ONU status returned can be:
// <ul>
// <li>Enabled</li>
// <li>Disabled</li>
// <li>CATV not supported by ONU-Type</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT wasn't able to process the command</li>
// <li>ONU is saved for later authorization and doesn't have a status yet</li>
// </ul>

@name("Get ONU CATV status by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_catv_status/{{onu_external_id}}"
"X-Token": "{{api_key}}"


// Gets the ONU signal for a specified ONU unique external ID. <br>
// The response consists of:
// <ul>
// <li>ONU signal: 'Critical', 'Warning', 'Very good'</li>
// <li>ONU signal value: 1490 signal / 1310 signal</li>
// <li>ONU signal 1310 value</li>
// <li>ONU signal 1490 value</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT wasn't able to process the command</li>
// <li>ONU is saved for later authorization and doesn't have signal yet</li>
// </ul>

@name("Get ONU signal by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_signal/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// Get ONU details for a specified ONU unique external ID. <br>
// The response consists of:
// <ul>
// <li>ONU name</li>
// <li>ONU SN</li>
// <li>ONU board, port, onu etc</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// </ul>

@name("Get ONU details by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_details/{{onu_external_id}}"
"X-Token": "{{api_key}}"


// Get ONUs details for a specified SN. <br>
// The response consists of:
// <ul>
// <li>ONU name</li>
// <li>ONU SN</li>
// <li>ONU board, port, onu etc</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no SN was provided</li>
// </ul>

@name("Get ONUs details by SN")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onus_details_by_sn/onu_sn"
"X-Token": "{{api_key}}"


// Gets the ONU full status info for a specified ONU unique external ID. <br>
// ONU full status info contains info about:
// <ul>
// <li>Current status</li>
// <li>Status history</li>
// <li>Optical Tx, Rx signals</li>
// <li>Ethernet interfaces</li>
// <li>WAN status</li>
// <li>MAC table</li>
// <li>Other ONU info</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT wasn't able to process the command</li>
// <li>ONU is saved for later authorization and doesn't have status info yet</li>
// </ul>

@name("Get ONU full status info by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_full_status_info/{{onu_external_id}}"
"X-Token": "{{api_key}}"


// Gets the ONU running config from the OLT for a specified ONU unique external ID. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT wasn't able to process the command</li>
// <li>ONU is saved for later authorization and doesn't have status info yet</li>
// </ul>

@name("Get ONU running config by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_running_config/{{onu_external_id}}"
"X-Token": "{{api_key}}"


// Gets the ONU signal graph for a specified ONU unique external ID. <br>
// The graph_type can be:
// <ul>
// <li>hourly</li>
// <li>daily</li>
// <li>weekly</li>
// <li>monthly</li>
// <li>yearly</li>
// </ul>
// The response consists of:
// <ul>
// <li>Graph png image</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>ONU doesn't have signal graph yet</li>
// </ul>
// 
// You can feed the response directly to an img tag in the src attribute with a Content-type header of "image/png".
// Example:
// <p>
// PHP
// <code>
// header("Content-type: image/png");
// echo $response_graph;
// </code>
// </p>
// <p>
// HTML
// <code>
// img src="link_to_your_method_where_you_call_the_api" alt="hourly signal not yet generated"
// </code>
// </p>

@name("Get ONU signal graph by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_signal_graph/{{onu_external_id}}/{{graph_type}}"
"X-Token": "{{api_key}}"



// Gets the ONU traffic graph for a specified ONU unique external ID. <br>
// The graph_type can be:
// <ul>
// <li>hourly</li>
// <li>daily</li>
// <li>weekly</li>
// <li>monthly</li>
// <li>yearly</li>
// </ul>
// The response consists of:
// <ul>
// <li>Graph png image</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>ONU doesn't have traffic graph yet</li>
// </ul>
// 
// You can feed the response directly to an img tag in the src attribute with a Content-type header of "image/png".
// Example:
// <p>
// PHP
// <code>
// header("Content-type: image/png");
// echo $response_graph;
// </code>
// </p>
// <p>
// HTML
// <code>
// img src="link_to_your_method_where_you_call_the_api" alt="hourly traffic not yet generated"
// </code>
// </p>

@name("Get ONU traffic graph by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_traffic_graph/{{onu_external_id}}/{{graph_type}}"
"X-Token": "{{api_key}}"



// Get ONU speed profiles for a specified ONU unique external ID. <br>
// The response consists of:
// <ul>
// <li>ONU upload speed profile name</li>
// <li>ONU download speed profile name</li>
// </ul>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// </ul>

@name("Get ONU speed profiles by ONU unique external ID")
GET "https://{{subdomain}}.smartolt.com/api/onu/get_onu_speed_profiles/{{onu_external_id}}"
"X-Token": "{{api_key}}"


// <h2>Save OLTs config</h2> 
// The request returns succesfully if the OLTs config was saved successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Save OLTs config")
POST "https://{{subdomain}}.smartolt.com/api/system/save_config"
"X-Token": "{{api_key}}"



// <h2>Authorize ONU</h2> 
// Authorizes an ONU on the provided OLT. If board or port are left empty then the ONU is saved for later authorization. The ONU type name must be one defined in SmartOLT ONU Types section. <br>
// The request returns succesfully if the ONU was authorized successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no OLT ID was provided</li>
// <li>no OLT was found for the provided OLT ID</li>
// <li>no ONU PON type or a wrong ONU PON type was provided</li>
// <li>no ONU SN/MAC was provided</li>
// <li>the SN/MAC is in the wrong format</li>
// <li>no VLAN-ID was provided</li>
// <li>no ONU type was provided</li>
// <li>no ONU type was found for the provided ONU type name</li>
// <li>no Zone was provided</li>
// <li>the Zone is in the wrong format</li>
// <li>the ODB (Splitter) is in the wrong format</li>
// <li>no Name was provided</li>
// <li>the Name is in the wrong format</li>
// <li>the Address or Comment is in the wrong format</li>
// <li>no ONU mode or a wrong ONU mode was provided</li>
// <li>the Custom profile is in the wrong format</li>
// <li>the ONU external ID is in the wrong format</li>
// <li>the ONU external ID is already existing</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Authorize ONU")
POST "https://{{subdomain}}.smartolt.com/api/onu/authorize_onu"
"X-Token": "{{api_key}}"
files(
	("olt_id", "1"),
	("pon_type", "gpon"),
	("board", "2"),
	("port", "3"),
	("sn", "ZTEGC7E230E4"),
	("onu_type", "ZTE-F660V6.0"),
	("custom_profile", ""),
	("onu_mode", "Routing"),
	("cvlan", "101"),
	("svlan", "102"),
	("tag_transform_mode", "translate"),
	("use_other_all_tls_vlan", "1"),
	("vlan", "100"),
	("zone", "City Centre"),
	("odb", "Splitter325"),
	("name", "John Doe"),
	("address_or_comment", "Avenue 9"),
	("onu_external_id", "test"),
	("upload_speed_profile_name", "50M"),
	("download_speed_profile_name", "100M")
)


// <h2>Move ONU for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU was moved successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no OLT ID was provided</li>
// <li>no OLT was found for the provided OLT ID</li>
// <li>no board was provided</li>
// <li>the provided board does not exist on the provided OLT</li>
// <li>no port was provided</li>
// <li>the provided port does not exist on the provided OLT board</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Move ONU by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/move/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("olt_id", "1"),
	("board", "1"),
	("port", "2")
)


// <h2>Update ONU SN/MAC for a specified ONU unique external ID</h2> 
// The request returns succesfully if the new ONU SN/MAC was saved successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no new SN/MAC was provided</li>
// <li>the SN/MAC is in the wrong format</li>
// <li>the SN/MAC is already assigned to another ONU</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU SN/MAC by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_sn/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("new_sn", "ZTEGC7E230E7")
)


// <h2>Update ONU type for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU type was changed successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no new ONU type was provided</li>
// <li>no ONU type was found with the given ONU type name</li>
// <li>the ONU type PON type is not compatible with the ONU</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU type by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/change_onu_type/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("onu_type", "ZTE-F660V6.0")
)


// <h2>Update ONU location details for a specified ONU unique external ID</h2> 
// At least one parameter must be provided. Send only the parameters that you want to be updated. The zone names must be the ones defined in SmartOLT Zones section. The ODB names must be the ones defined in SmartOLT ODBs section. <br>
// The request returns succesfully if the ONU location details were updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no parameters were provided</li>
// <li>the Zone is in the wrong format</li>
// <li>the ODB (Splitter) is in the wrong format</li>
// <li>the Name is in the wrong format</li>
// <li>the Address or Comment is in the wrong format</li>
// <li>the Latitude is in the wrong format</li>
// <li>the Longitude is in the wrong format</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU location details by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_location_details/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("zone", "City Centre"),
	("odb", "Splitter325"),
	("name", "John Doe"),
	("address_or_comment", "Avenue 9"),
	("latitude", "52.5113340328893"),
	("longitude", "13.401282438647513")
)


// <h2>Update ONU unique external ID</h2> 
// The request returns succesfully if the ONU unique external ID was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no new external ID was provided</li>
// <li>the new external ID is in the wrong format</li>
// <li>the new external ID is already assigned to another ONU</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_unique_external_id/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("onu_external_id", "test")
)


// <h2>Update ONU unique external ID by board, port, ONU number</h2> 
// The request returns succesfully if the ONU unique external ID was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no OLT ID, board, port or ONU number was provided</li>
// <li>no ONU was found for the provided OLT ID, board, port or ONU number</li>
// <li>no new external ID was provided</li>
// <li>the new external ID is in the wrong format</li>
// <li>the new external ID is already assigned to another ONU</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU unique external ID by board, port, ONU number")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_unique_external_id_by_board_port_onu"
"X-Token": "{{api_key}}"
files(
	("olt_id", "1"),
	("board", "3"),
	("port", "3"),
	("onu_number", "2"),
	("onu_external_id", "test")
)


// <h2>Update ONU unique external ID by SN</h2> 
// The request returns succesfully if the ONU unique external ID was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no SN was provided</li>
// <li>no ONU was found for the provided SN</li>
// <li>no new external ID was provided</li>
// <li>the new external ID is in the wrong format</li>
// <li>the new external ID is already assigned to another ONU</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU unique external ID by SN")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_unique_external_id_by_sn"
"X-Token": "{{api_key}}"
files(
	("olt_id", "1"),
	("sn", "ZTEGC7E230E4"),
	("onu_external_id", "test")
)


// <h2>Update ONU attached VLANs for a specified ONU unique external ID</h2> 
// At least one VLAN must be provided. The request returns succesfully if the ONU attached VLANs were updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no VLAN was provided</li>
// <li>the VLAN lists are in the wrong format</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU attached VLANs by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_attached_vlans/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("add_vlans", "10,20"),
	("remove_vlans", "33")
)


// <h2>Update ONU main VLAN-ID for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU main VLAN-ID was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no VLAN-ID was provided</li>
// <li>the VLAN-ID is not in the ONU attached VLANs list</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU main VLAN-ID by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_main_vlan/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("vlan", "10")
)


// <h2>Update ONU mode for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no ONU mode was provided</li>
// <li>wrong ONU mode was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU mode by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_onu_mode/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("onu_mode", "Routing")
)


// <h2>Set ONU Mgmt IP mode to Inactive for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU Mgmt IP mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU Mgmt IP mode to Inactive by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_mgmt_ip_inactive/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Set ONU Mgmt IP mode to Static IP for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU Mgmt IP mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no VLAN-ID, IPv4 address, subnet mask, gateway, DNS1 was provided</li>
// <li>wrong VLAN-ID, IPv4 address, subnet mask, gateway, DNS1, DNS2 was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU Mgmt IP mode to Static IP by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_mgmt_ip_static_ip/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("vlan", "100"),
	("cvlan", "101"),
	("svlan", "102"),
	("tag_transform_mode", "translate"),
	("ipv4_address", "1.2.3.4"),
	("subnet_mask", "1.2.2.2"),
	("gateway", "1.2.2.2"),
	("dns1", "8.8.8.8"),
	("dns2", "8.8.4.4")
)


// <h2>Set ONU Mgmt IP mode to DHCP for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU Mgmt IP mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no VLAN-ID was provided</li>
// <li>wrong VLAN-ID was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU Mgmt IP mode to DHCP by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_mgmt_ip_dhcp/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("vlan", "100"),
	("cvlan", "101"),
	("svlan", "102"),
	("tag_transform_mode", "translate")
)


// <h2>Set ONU VoIP mode to Disabled for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU VoIP mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU VoIP mode to Disabled by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_voip_disabled/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Set ONU VoIP mode to Enabled for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU VoIP mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU VoIP mode to Enabled by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_voip_enabled/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("voip_attach_to", "WAN")
)


// <h2>Enable ONU VoIP port for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU VoIP port was enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no VoIP port, phone number, password was provided</li>
// <li>wrong VoIP port, phone number, password was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable ONU VoIP port by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/enable_onu_voip_port/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("voip_port", "pots_0/1"),
	("voip_profile_name", "sip_profile"),
	("phone_number", "123654789"),
	("sip_userid", "123654789"),
	("password", "pass")
)


// <h2>Disable ONU VoIP port for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU VoIP port was disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no VoIP port was provided</li>
// <li>wrong VoIP port was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable ONU VoIP port by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/disable_onu_voip_port/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("voip_port", "pots_0/1")
)


// <h2>Set ONU WAN mode to Setup via ONU webpage for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WAN mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WAN mode to Setup via ONU webpage by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_wan_mode_setup_via_onu_webpage/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Set ONU WAN mode to DHCP for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WAN mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WAN mode to DHCP by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_wan_mode_dhcp/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Set ONU WAN mode to Static IP for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WAN mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no IPv4 address, subnet mask, gateway, DNS1 was provided</li>
// <li>wrong IPv4 address, subnet mask, gateway, DNS1, DNS2 was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WAN mode to Static IP by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_wan_mode_static_ip/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("ipv4_address", "1.2.3.4"),
	("subnet_mask", "1.2.2.2"),
	("gateway", "1.2.2.2"),
	("dns1", "8.8.8.8"),
	("dns2", "8.8.4.4")
)


// <h2>Set ONU WAN mode to PPPoE for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WAN mode was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no username, password was provided</li>
// <li>wrong username, password was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WAN mode to PPPoE by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_onu_wan_mode_pppoe/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("username", "user"),
	("password", "pass")
)


// <h2>Update ONU max-mac-learn for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU max-mac-learn was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>Max-mac-learn feature was not enabled for this OLT</li>
// <li>no ONU max-mac-learn was provided</li>
// <li>wrong ONU max-mac-learn was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU max-mac-learn by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_max_mac_learn/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("enable_max_mac_learn", "1"),
	("max_mac_learn", "5")
)


// <h2>Enable ONU IP DHCP-Snooping for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU IP DHCP-Snooping was enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>IP DHCP-Snooping feature was not enabled for this OLT</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable ONU IP DHCP-Snooping by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/enable_ip_dhcp_snooping/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Disable ONU IP DHCP-Snooping for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU IP DHCP-Snooping was disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>IP DHCP-Snooping feature was not enabled for this OLT</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable ONU IP DHCP-Snooping by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/disable_ip_dhcp_snooping/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Enable ONU IP source-guard for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU IP source-guard was enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>IP source-guard feature was not enabled for this OLT</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable ONU IP source-guard by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/enable_ip_source_guard/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Disable ONU IP source-guard for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU IP source-guard was disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>IP source-guard feature was not enabled for this OLT</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable ONU IP source-guard by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/disable_ip_source_guard/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Enable ONU allow remote access to WAN IP for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU allow remote access to WAN IP was enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>Allow remote access to WAN IP feature is not supported for this ONU/OLT</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable ONU allow remote access to WAN IP by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/enable_allow_remote_access_to_wan_ip/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Disable ONU allow remote access to WAN IP for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU allow remote access to WAN IP was disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>Allow remote access to WAN IP feature is not supported for this ONU/OLT</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable ONU allow remote access to WAN IP by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/disable_allow_remote_access_to_wan_ip/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Update ONU upload and download speed profiles for a specified ONU unique external ID</h2> 
// At least one speed profile name must be provided. The profile names must be the ones defined in SmartOLT Speed Profiles section. <br>
// The request returns succesfully if the profile names on the ONU were updated or the profiles names provided are the same as the ones already saved on the ONU. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no speed profile names were provided</li>
// <li>no upload speed profile was found with the name provided</li>
// <li>no download speed profile was found with the name provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU speed profiles by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_onu_speed_profiles/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("upload_speed_profile_name", "50M"),
	("download_speed_profile_name", "100M")
)


// <h2>Update multiple ONUs upload and download speed profiles for a specified list of ONU unique external IDs</h2> 
// At least one speed profile name must be provided. The profile names must be the ones defined in SmartOLT Speed Profiles section. <br>
// The request returns succesfully if the profile names on the ONUs were updated or the profiles names provided are the same as the ones already saved on the ONUs. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external IDs were provided</li>
// <li>more than the maximum allowed number of ONUs were provided</li>
// <li>no speed profile names were provided</li>
// <li>no upload speed profile was found with the name provided</li>
// <li>no download speed profile was found with the name provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update multiple ONUs speed profiles by ONU unique external IDs")
POST "https://{{subdomain}}.smartolt.com/api/onu/bulk_update_speed_profiles"
"X-Token": "{{api_key}}"
files(
	("onus_external_ids", "test,test1"),
	("upload_speed_profile_name", "50M"),
	("download_speed_profile_name", "100M")
)


// <h2>Update ONU service port for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU service port was updated successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no service port was provided</li>
// <li>wrong service port was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Update ONU service port by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/update_service_port/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("service_port", "3"),
	("cvlan", "101"),
	("svlan", "102"),
	("tag_transform_mode", "translate"),
	("use_other_all_tls_vlan", "1"),
	("vlan", "100"),
	("upload_speed_profile_name", "50M"),
	("download_speed_profile_name", "100M")
)


// <h2>Set ONU ethernet port mode to LAN for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU ethernet port mode was set to LAN successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no ethernet port was provided</li>
// <li>wrong ethernet port was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU ethernet port mode to LAN by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_ethernet_port_lan/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("ethernet_port", "eth_0/1"),
	("dhcp", "No control")
)


// <h2>Set ONU ethernet port mode to IPTV for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU ethernet port mode was set to IPTV successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no ethernet port was provided</li>
// <li>wrong ethernet port was provided</li>
// <li>IPTV is not enabled on the ONU</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU ethernet port mode to IPTV by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_ethernet_port_iptv/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("ethernet_port", "eth_0/1"),
	("dhcp", "No control")
)


// <h2>Set ONU ethernet port mode to Access for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU ethernet port mode was set to Access successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no ethernet port was provided</li>
// <li>wrong ethernet port was provided</li>
// <li>no VLAN-ID was provided</li>
// <li>the VLAN-ID is not in the ONU attached VLANs list</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU ethernet port mode to Access by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_ethernet_port_access/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("ethernet_port", "eth_0/1"),
	("vlan", "10"),
	("dhcp", "No control")
)


// <h2>Set ONU ethernet port mode to Hybrid for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU ethernet port mode was set to Hybrid successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no ethernet port was provided</li>
// <li>wrong ethernet port was provided</li>
// <li>no VLAN-ID was provided</li>
// <li>the VLAN-ID is not in the ONU attached VLANs list</li>
// <li>no Allowed VLANs were provided</li>
// <li>the Allowed VLANs list is in the wrong format</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU ethernet port mode to Hybrid by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_ethernet_port_hybrid/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("ethernet_port", "eth_0/1"),
	("vlan", "10"),
	("allowed_vlans", "20,33"),
	("dhcp", "No control")
)


// <h2>Set ONU ethernet port mode to Trunk for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU ethernet port mode was set to Trunk successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no ethernet port was provided</li>
// <li>wrong ethernet port was provided</li>
// <li>no Allowed VLANs were provided</li>
// <li>the Allowed VLANs list is in the wrong format</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU ethernet port mode to Trunk by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_ethernet_port_trunk/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("ethernet_port", "eth_0/1"),
	("allowed_vlans", "20,33"),
	("dhcp", "No control")
)


// <h2>Set ONU ethernet port mode to Transparent for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU ethernet port mode was set to Transparent successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no ethernet port was provided</li>
// <li>wrong ethernet port was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU ethernet port mode to Transparent by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_ethernet_port_transparent/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("ethernet_port", "eth_0/1"),
	("dhcp", "No control")
)


// <h2>Shutdown ONU ethernet port for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU ethernet port was shutdown successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no ethernet port was provided</li>
// <li>wrong ethernet port was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Shutdown ONU ethernet port by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/shutdown_ethernet_port/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("ethernet_port", "eth_0/1")
)


// <h2>Set ONU WiFi port mode to LAN for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WiFi port mode was set to LAN successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no WiFi port was provided</li>
// <li>wrong WiFi port was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WiFi port mode to LAN by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_wifi_port_lan/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("wifi_port", "wifi_0/1"),
	("dhcp", "No control"),
	("ssid", "test"),
	("password", "testpass"),
	("authentication_mode", "WPA2")
)


// <h2>Set ONU WiFi port mode to IPTV for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WiFi port mode was set to IPTV successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no WiFi port was provided</li>
// <li>wrong WiFi port was provided</li>
// <li>IPTV is not enabled on the ONU</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WiFi port mode to IPTV by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_wifi_port_iptv/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("wifi_port", "wifi_0/1"),
	("dhcp", "No control"),
	("ssid", "test"),
	("password", "testpass"),
	("authentication_mode", "WPA2")
)


// <h2>Set ONU WiFi port mode to Access for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WiFi port mode was set to Access successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no WiFi port was provided</li>
// <li>wrong WiFi port was provided</li>
// <li>no VLAN-ID was provided</li>
// <li>the VLAN-ID is not in the ONU attached VLANs list</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WiFi port mode to Access by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_wifi_port_access/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("wifi_port", "wifi_0/1"),
	("vlan", "10"),
	("dhcp", "No control"),
	("ssid", "test"),
	("password", "testpass"),
	("authentication_mode", "WPA2")
)


// <h2>Set ONU WiFi port mode to Hybrid for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WiFi port mode was set to Hybrid successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no WiFi port was provided</li>
// <li>wrong WiFi port was provided</li>
// <li>no VLAN-ID was provided</li>
// <li>the VLAN-ID is not in the ONU attached VLANs list</li>
// <li>no Allowed VLANs were provided</li>
// <li>the Allowed VLANs list is in the wrong format</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WiFi port mode to Hybrid by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_wifi_port_hybrid/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("wifi_port", "wifi_0/1"),
	("vlan", "10"),
	("allowed_vlans", "20,33"),
	("dhcp", "No control"),
	("ssid", "test"),
	("password", "testpass"),
	("authentication_mode", "WPA2")
)


// <h2>Set ONU WiFi port mode to Trunk for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WiFi port mode was set to Trunk successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no WiFi port was provided</li>
// <li>wrong WiFi port was provided</li>
// <li>no Allowed VLANs were provided</li>
// <li>the Allowed VLANs list is in the wrong format</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WiFi port mode to Trunk by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_wifi_port_trunk/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("wifi_port", "wifi_0/1"),
	("allowed_vlans", "20,33"),
	("dhcp", "No control"),
	("ssid", "test"),
	("password", "testpass"),
	("authentication_mode", "WPA2")
)


// <h2>Set ONU WiFi port mode to Transparent for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WiFi port mode was set to Transparent successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no WiFi port was provided</li>
// <li>wrong WiFi port was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Set ONU WiFi port mode to Transparent by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/set_wifi_port_transparent/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("wifi_port", "wifi_0/1"),
	("dhcp", "No control"),
	("ssid", "test"),
	("password", "testpass"),
	("authentication_mode", "WPA2")
)


// <h2>Shutdown ONU WiFi port for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU WiFi port was shutdown successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>no WiFi port was provided</li>
// <li>wrong WiFi port was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Shutdown ONU WiFi port by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/shutdown_wifi_port/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("wifi_port", "wifi_0/1")
)


// <h2>Enable ONU IPTV for a specified ONU unique external ID</h2> 
// The request returns succesfully if ONU IPTV was enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>IPTV module not enabled on OLT</li>
// <li>no IPTV VLAN-ID was provided</li>
// <li>no IPTV upload speed profile was provided</li>
// <li>no IPTV download speed profile was provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable ONU IPTV by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/enable_iptv/{{onu_external_id}}"
"X-Token": "{{api_key}}"
files(
	("vlan", "100"),
	("cvlan", "101"),
	("svlan", "102"),
	("tag_transform_mode", "translate"),
	("upload_speed_profile_name", "50M"),
	("download_speed_profile_name", "100M"),
	("allowed_macs", ""),
	("filtered_macs", "")
)


// <h2>Disable ONU IPTV for a specified ONU unique external ID</h2> 
// The request returns succesfully if ONU IPTV was disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>IPTV module not enabled on OLT</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable ONU IPTV by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/disable_iptv/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Enable ONU CATV for a specified ONU unique external ID</h2> 
// The request returns succesfully if ONU CATV was enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>CATV not supported by ONU-Type</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable ONU CATV by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/enable_catv/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Enable multiple ONUs CATV by ONU unique external IDs</h2> 
// The request returns succesfully if ONUs CATV were enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external IDs were provided</li>
// <li>more than the maximum allowed number of ONUs were provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable multiple ONUs CATV by ONU unique external IDs")
POST "https://{{subdomain}}.smartolt.com/api/onu/bulk_enable_catv"
"X-Token": "{{api_key}}"
files(
	("onus_external_ids", "test,test1")
)


// <h2>Disable ONU CATV for a specified ONU unique external ID</h2> 
// The request returns succesfully if ONU CATV was disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>CATV not supported by ONU-Type</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable ONU CATV by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/disable_catv/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Disable multiple ONUs CATV by ONU unique external IDs</h2> 
// The request returns succesfully if ONUs CATV were disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external IDs were provided</li>
// <li>more than the maximum allowed number of ONUs were provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable multiple ONUs CATV by ONU unique external IDs")
POST "https://{{subdomain}}.smartolt.com/api/onu/bulk_disable_catv"
"X-Token": "{{api_key}}"
files(
	("onus_external_ids", "test,test1")
)


// <h2>Reboot ONU for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU reboot command was sent successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Reboot ONU by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/reboot/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Resync ONU config for a specified ONU unique external ID</h2> 
// The request returns succesfully if the ONU config was resynced successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Resync ONU config by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/resync_config/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Restore ONU factory defaults for a specified ONU unique external ID</h2> 
// The request returns succesfully if the restore ONU factory defaults command was sent successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Restore ONU factory defaults by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/restore_factory_defaults/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Disable ONU for a specified ONU unique external ID</h2> 
// The request returns succesfully if ONU was disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable ONU by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/disable/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Disable multiple ONUs by ONU unique external IDs</h2> 
// The request returns succesfully if ONUs were disabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external IDs were provided</li>
// <li>more than the maximum allowed number of ONUs were provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Disable multiple ONUs by ONU unique external IDs")
POST "https://{{subdomain}}.smartolt.com/api/onu/bulk_disable"
"X-Token": "{{api_key}}"
files(
	("onus_external_ids", "test,test1")
)


// <h2>Enable ONU for a specified ONU unique external ID</h2> 
// The request returns succesfully if ONU was enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable ONU by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/enable/{{onu_external_id}}"
"X-Token": "{{api_key}}"



// <h2>Enable multiple ONUs by ONU unique external IDs</h2> 
// The request returns succesfully if ONUs were enabled successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external IDs were provided</li>
// <li>more than the maximum allowed number of ONUs were provided</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Enable multiple ONUs by ONU unique external IDs")
POST "https://{{subdomain}}.smartolt.com/api/onu/bulk_enable"
"X-Token": "{{api_key}}"
files(
	("onus_external_ids", "test,test1")
)


// <h2>Delete ONU for a specified ONU unique external ID</h2> 
// The request returns succesfully if ONU was deleted successfully. <br>
// It returns a 400 error code when:
// <ul>
// <li>no ONU external ID was provided</li>
// <li>no ONU was found for the provided ONU external ID</li>
// <li>OLT was unable to process the command</li>
// </ul>

@name("Delete ONU by ONU unique external ID")
POST "https://{{subdomain}}.smartolt.com/api/onu/delete/{{onu_external_id}}"
"X-Token": "{{api_key}}"




