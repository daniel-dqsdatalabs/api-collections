#!/usr/bin/env dothttp

// This will check user login details and return "auth_user" and "auth_token" uppon successful validation.
// This will be used for making API requests as registered user.
// 
// You should save this to your application at safe place for further user.

@name("/login")
POST "https://yourdomain.com/wp-json/supportcandy/v1/login"
? "username"= "YOUR_USERNAME"
? "password"= "YOUR_PASSWORD"
? "secret_key"= "YOUR_SECRET_KEY"



// Returns guest ticket form fields.

@name("/guestTicketFormFields")
POST "https://yourdomain.com/wp-json/supportcandy/v1/guestTicketFormFields"
? "secret_key"= "YOUR_SECRET_KEY"



// Returns ticket form fields for regustered user. This will not have Name and Email field.

@name("/ticketFormFields")
POST "https://yourdomain.com/wp-json/supportcandy/v1/ticketFormFields"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"



// Returns list of agentonly custom fields.

@name("/agentonlyFields")
POST "https://yourdomain.com/wp-json/supportcandy/v1/agentonlyFields"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"



// Return list of ticket statuses.

@name("/statuses")
GET "https://yourdomain.com/wp-json/supportcandy/v1/statuses"


// Return status information for given status id.
// 
// e.g.
// https://yourdomain.com/wp-json/supportcandy/v1/statuses/3

@name("/statuses/{id}")
GET "https://yourdomain.com/wp-json/supportcandy/v1/statuses/{id}"


// Return list of ticket categories.

@name("/categories")
GET "https://yourdomain.com/wp-json/supportcandy/v1/categories"


// Returns information of given category id.
// 
// e.g.
// https://yourdomain.com/wp-json/supportcandy/v1/categories/15

@name("/categories/{id}")
GET "https://yourdomain.com/wp-json/supportcandy/v1/categories/{id}"


// Returns list of ticket priorities.

@name("/priorities")
GET "https://yourdomain.com/wp-json/supportcandy/v1/priorities"


// Returns information of given priority id.
// 
// e.g.
// https://yourdomain.com/wp-json/supportcandy/v1/priorities/7

@name("/priorities/{id}")
GET "https://yourdomain.com/wp-json/supportcandy/v1/priorities/{id}"


// Return list of all registered supportcandy agents.

@name("/agents")
POST "https://yourdomain.com/wp-json/supportcandy/v1/agents"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"



// Returns information of given agent id.
// 
// e.g.
// https://yourdomain.com/wp-json/supportcandy/v1/agents/35?auth_user=AUTH_USER&auth_token=AUTH_TOKEN

@name("/agents/{id}")
POST "https://yourdomain.com/wp-json/supportcandy/v1/agents/{id}"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"



// Return list of ticket default and custom filters.

@name("/filters")
POST "https://yourdomain.com/wp-json/supportcandy/v1/filters"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"



// Show  all tickets.
// 
// It can be show result on current page, number of tickets, orderby , order and filter key.

@name("/tickets")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
? "current_page"= "PAGE_NUMBER"
? "number_of_tickets"= "NUMBER_OF_TICKETS_PER_PAGE"
? "orderby"= "ORDERBY_OF_TICKETS"
? "order"= "ORDER_OF_TICKETS"
? "filter_key"= "FILTER_SLUG OR CUSTOM_FILTER_ID"
? "search"= "FILTER_STRING"



// Returns information of given ticket id.
// 
// e.g.
// https://yourdomain.com/wp-json/supportcandy/v1/tickets/5?auth_user=AUTH_USER&auth_token=AUTH_TOKEN

@name("/tickets/{id}")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/{id}"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"



// Returns information of given ticket id threads.
// 
// You can change current page, number of threads per page and order of threads to appeared.
// 
// e.g. 
// https://yourdomain.com/wp-json/supportcandy/v1/tickets/5/threads?auth_user=AUTH_USER&auth_token=AUTH_TOKEN&current_page=PAGE_NUMBER&no_of_threads=NUMBER_OF_TICKETS_PER_PAGE&order=THREAD_ORDER

@name("/tickets/{id}/threads")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/{id}/threads"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
? "current_page"= "PAGE_NUMBER"
? "no_of_threads"= "NUMBER_OF_THREADS_PER_PAGE"
? "order"= "THREAD_ORDER"



// Return the current history id of ticktes threads.

@name("/threads/historyId")
POST "https://yourdomain.com/wp-json/supportcandy/v1/threads/historyId"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"



// Return the all tickets threads history.It will give the information of ticket all threads.

@name("/threads/history")
POST "https://yourdomain.com/wp-json/supportcandy/v1/threads/history"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
? "historyId"= "HISTORY_ID"
? "current_page"= "PAGE_NUMBER"
? "no_of_threads"= "NUMBER_OF_TICKET_THREADS"



// Create registerd user ticket as per given information.The data  should be in json and in key value pair.
// 
// e.g fields_data : {"ticket_subject" :"I am subject field"} in this form.

@name("/tickets/addRegisteredUserTicket")
POST "https://yourdomain.com/wpsc/wp-json/supportcandy/v1/tickets/addRegisteredUserTicket"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
? 'fields_data'= '{"FIELD1_SLUG":"FIELD1_VALUE","FIELD2_SLUG":"FIELD2_VALUE"}  '



// Create guest user ticket as per given information.The data  should be in json and in key value pair.It will required name and email of user.
// 
// e.g fields_data : {"ticket_subject" :"I am subject field"} in this form.

@name("/tickets/addGuestTicket")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/addGuestTicket"
? "secret_key"= "YOUR_SECRET_KEY"
? 'fields_data'= '{"FIELD1_SLUG":"FIELD1_VALUE","FIELD2_SLUG":"FIELD2_VALUE"}  '



// Add ticket reply to given ticket id.
// 

@name("/tickets/{id}/addReply")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/{id}/addReply"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
? "reply_body"= "Adding reply"
? 'attachments'= '{"attachments":["ATTACHMENT_ID"]}'



// Add private note to given ticket id.
// 

@name("/tickets/{id}/addNote")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/{id}/addNote"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
? "note_body"= "Adding note"
? 'attachments'= '{"attachments":["ATTACHMENTS_ID"]}'



// Here agents can update ticket fields of given ticket id.
// 
// e.g.
// {"ticket_status" : "5"}
// 
// it will update ticket status of given ticket id.

@name("/tickets/{id}/updateFields")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/{id}/updateFields"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
? 'fields_data'= '{"FIELD1_SLUG":"FIELD1_VALUE","FIELD2_SLUG":"FIELD2_VALUE"}'



// Return the guest ticket attachmets ids.

@name("/tickets/attachGuestFile")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/attachGuestFile"
"Content-Type": "application/x-www-form-urlencoded"
? "secret_key"= "YOUR_SECRET_KEY"
files(
	("file", "None")
)


// Return all registered user attachments ids that are attached. 
// 

@name("/tickets/attachRegisteredUserFile")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/attachRegisteredUserFile"
"Content-Type": "application/x-www-form-urlencoded"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
files(
	("file", "None")
)


// Return given field slug values.
// 
// e.g. field_slug is ticket_status then it will return the ticket statuses of ticket.

@name("/tickets/autocompleteSuggestions")
POST "https://yourdomain.com/wp-json/supportcandy/v1/tickets/autocompleteSuggestions"
"Content-Type": "application/x-www-form-urlencoded"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
? "field_slug"= "FIELD_SLUG"
? "search"= "SEARCH_TERM"
files(
	("file", "None")
)


// Delete the given ticket id.
// 
// 
// e.g. 
// https://yourdomain.com/wp-json/supportcandy/v1/deleteTickets/25?auth_user=AUTH_USER&auth_token=AUTH_TOKEN
// 
// it will delete ticket id 25, if it is present and current user has permission to delele this ticket. 

@name("/deleteTickets/{id}")
POST "https://yourdomain.com/wp-json/supportcandy/v1/deleteTickets/{id}"
"Content-Type": "application/x-www-form-urlencoded"
? "auth_user"= "AUTH_USER"
? "auth_token"= "AUTH_TOKEN"
files(
	("file", "None")
)



