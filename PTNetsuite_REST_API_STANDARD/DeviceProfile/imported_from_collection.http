#!/usr/bin/env dothttp

// This API returns all the existing device profile.
// 
// This API supports advanced filtering: the url accepts a set of parameters to filter over the list.
// 
// The available filters are:
// 
// | Key              | Value                 | Description               | 
// | ---------------- | --------------------- | ------------------------- |
// | macVersion       | {{maxtxpower}}        | Indicate the LoRaWAN version supported by this device profile.
// | supports32biFCnt | {{supports32bitfcnt}} | Used to indicate if the frame counter supports 32 bit.
// | supportsClassB   | {{supportsclassb}}    | Flag used to indicate if this device support the class B. If True this profile manage class B.
// | supportsClassC   | {{supportsclassc}}    | Flag used to indicate if this device support the class C. If True this profile manage class C.
// 
// Filtering is supported as described in `Common` section under Filtering.
// 
// Paging is supported as described in `Common` section under Paging.
//  
// Details:
//    * No body in the request.
//    * The possible responses are listed in the section on the right.

@name("Device Profile List")
GET "{{protocol}}://{{host}}/api/v2/device-profiles"
"Authorization": "Bearer {{token}}"


// This API returns all the possible values that a property associated to the device profile may have.
// 
// The response is an object that containssssssss the property name and all the possible values associated to it.
// 
// For example there is a property called `supportClassB` that is a boolean flag that indicate if the device supports or not the class B feature. 
// 
// Details:
//    * No body in the request
//    * The possible responses are listed in the section on the right

@name("Device Profile Properties")
GET "{{protocol}}://{{host}}/api/v2/device-profile/properties"
"Authorization": "Bearer {{token}}"


// This API returns the device profile associated with the given `dpid`, the unique id associated to each profile.
// 
// The response will provide an object that containsssssss the single Device Profile details.
// 
// Details:
//    * The device profile to obtain is identified in the url by `{{dpid}}`
//    * No body in the request
//    * The possible responses are listed in the section on the right

@name("Device Profile Single")
GET "{{protocol}}://{{host}}/api/v2/device-profile/{{dpid}}"
"Authorization": "Bearer {{token}}"



