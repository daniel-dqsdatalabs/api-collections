#!/usr/bin/env dothttp

@name("Get All Volumes")
GET "https://{{host_url}}/api/{{api_version}}/volumes"


@name("Get Volumes Paginated by Token")
GET "https://{{host_url}}/api/{{api_version}}/volumes"
? "limit"= "{{page_size}}"
? "continuation_token"= "'{{continuation_token}}'"


@name("Get Volumes Paginated by Offset")
GET "https://{{host_url}}/api/{{api_version}}/volumes"
? "limit"= "{{page_size}}"
? "offset"= "{{page_offset}}"
? "sort"= "name"
? "filter"= "not (contains(name, '@'))"


// Returns the list of virtual volumes, typically created by the Pure Storage VMware vRealize Orchestrator

@name("Get VMware Virtual Volumes (VVols)")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "contains(name, 'vvol-')"


// Returns the list of VMware virtual volumes (typically created by the Pure Storage VMware vRealize Orchestrator), filtered for 2 specific arrays.
// 
// Note: Use the Get VMware Virtual Volumes (VVols) query first to automatically assign the 2 ararys

@name("Get VVol Volumes Filtered by Array")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "contains(name, 'vvol-') and arrays[any].name=('{{selected_array_name}}', '{{selected_array2_name}}')"


// Returns the list of Kubernetes persistent volumes created by Pure Service Orchestrator (starting with 'k8s-')

@name("Get Kubernetes Volumes")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "contains(name, 'k8s-')"


@name("Get All Cloned Volumes")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "source"


@name("Get All Non-Cloned Volumes")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "not(source)"


@name("Get Volumes By Array Name")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "arrays[any].name='{{selected_array_name}}'"


@name("Get Volumes By Array Id")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "arrays.id='{{selected_array2_id}}'"
? "limit"= "{{page_size}}"
? "continuation_token"= "'{{continuation_token}}'"
? "sort"= "name"


@name("Get Volumes By Array Id Copy")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "arrays.id='0343e126-44e6-4277-8a56-6d16bb517cb6'"
? "limit"= "10"
? "continuation_token"= "'MTUwZmFhYWMtNTZlMi01NjEwLTYwNzgtMGFjZGEzZDllNzcy'"
? "sort"= "name"


@name("Get Volumes By Multiple Array Id")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volumes"
? "filter"= "arrays.id=('{{selected_array2_id}}', '{{selected_array_id}}')"
? "sort"= "name-"
? "limit"= "{{page_size}}"
? "continuation_token"= "'{{continuation_token}}'"


@name("Get All Volume Snapshots")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volume-snapshots"


@name("Get Filtered Volume Snapshots")
GET "https://api.pure1.purestorage.com/api/{{api_version}}/volume-snapshots"
? "filter"= "on.name='{{selected_array_name}}'"



