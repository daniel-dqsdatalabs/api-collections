#!/usr/bin/env dothttp

@name("getSiteWxlanTunnels")
GET "https://{{host}}/api/v1/sites/:site_id/wxtunnels"


@name("getSiteWxlanTunnelDetails")
GET "https://{{host}}/api/v1/sites/:site_id/wxtunnels/:wxtunnel_id"


//  #### Body Parameter
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
//  name|string|The name of the tunnel
//  peers|list|list of remote peers’ IP or hostname
//  is_static|boolean|whether it’s static/unmanaged (i.e. no control session), default is False. As the session configurations are not compatible, cannot be toggled.
//  secret|string|secret, ‘’ if no auth is used
//  use_udp|boolean|whether to use UDP instead of IP (proto=115, which is default of L2TPv3). Default is false
//  udp_port|int|udp port if use_udp=true
//  hello_interval|float|in seconds, used as heartbeat to detect if a tunnel is alive. AP will try another peer after missing N hellos specified by hello_retries. between 1 and 300, default is 60 seconds
//  hello_retries|int|between 2 and 30, default is 7
//  mtu|int|0 to enable PMTU, 552-1500 to start PMTU with a lower MTU, default is 0
//  router_id|string|optional, overwrite the router-id in SCCRQ control message, default is “0” or null, can also be an IPv4 address
//  hostname|string|optional, overwrite the hostname in SCCRQ control message, default is “” or null, %H and %M can be used, which will be replace with corresponding values. %H: name of the ap if provided (and will be stripped so it can be used for hostname) and fallbacks to MAC, %M: MAC (e.g. 5c5b350e0060)
//  for_mgmt|boolean|default is false, determined during creation time and cannot be toggled. A management tunnel cannot be used by wxlan rule or by wlan
//  sessions|list|sessions to be established with the tunnel. Has to be >= 1 in order for this tunnel to be useful. For management tunnel, it can only have 1
//  remote_id|string|remote-id of the session, has to be unique in the same tunnel
//  ethertype|string|ethernet / vlan, default is ethernet
//  use_ap_as_session_ids|boolean|whether to use AP (last 4 bytes of MAC currently) as session ids, default is false.
//  ap_session_id|string|if use_ap_as_session_ids=true, only apmac is supported right now. This is the name WLAN should use for wxtunnel_remote_id
//  remote_session_id|int|1-4294967295
//  local_session_id|int|1-4294967295
//  pseudo_8021ad_enabled|boolean|optional, default is False. Enables the pseudo 802.1ad QinQ mode where the AP device drops the outer vlan tag (QinQ). This mode is useful when tunneling Mist AP’s to some aggregation routers.
//  comment|string|optional, user-specified string for display purpose
//  dmvpn|object|Dynamic Multipoint VPN configurations
//  enabled|boolean|whether DMVPN is enabled (default is false)
//  host_routes|list|optional; list of IPv4 DMVPN peer host ip-addresses to which traffic is forwarded
//  holding_time|int|optional; the holding time for NHRP ‘registration requests’ and ‘resolution replies’ sent from the Mist AP (in seconds); default 600
//  ipsec|object|IPSec-related configurations; requires DMVPN be enabled
//  enabled|boolean|whether ipsec is enabled (default is false); requires DMVPN be enabled
//  psk|boolean|ipsec pre-shared key

@name("createSiteWxlanTunnel")
POST "https://{{host}}/api/v1/sites/:site_id/wxtunnels"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"
json({
    "name": "HQ",
    "peers": [
        "63.3.2.4"
    ],
    "use_udp": true,
    "udp_port": 1701,
    "mtu": 0,
    "for_mgmt": false,
    "hello_interval": 60,
    "hello_retries": 3,
    "is_static": false,
    "secret": "secret used for tunnel",
    "router_id": "0",
    "hostname": "",
    "sessions": [
        {
            "remote_id": "vpn1",
            "ethertype": "ethernet",
            "comment": "something about this session"
        }
    ]
})


@name("editSiteWxlanTunnel")
PUT "https://{{host}}/api/v1/sites/:site_id/wxtunnels/:wxtunnel_id"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"
json({
    "name": "HQ"
})


@name("deleteSiteWxlanTunnel")
DELETE "https://{{host}}/api/v1/sites/:site_id/wxtunnels/:wxtunnel_id"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"



