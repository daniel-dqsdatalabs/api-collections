#!/usr/bin/env dothttp

// #### Response Definition
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
//  mac|string|device mac
//  model|string|device model
//  type|string|device type, ap / ble
//  serial|string|serial
//  version|string|firmware version
//  last_seen|long|last seen timestamp
//  ip|string|IP address
//  ext_ip|string|External / Public IP
//  status|string|connected / disconnected / restarting / upgrading
//  uptime|long|how long, in seconds, has the device been up (or rebooted)
//  num_clients|int|how many wireless clients are currently connected
//  tx_bps|float|rate of transmitting traffic to the clients, bits/seconds, last known
//  rx_bps|float|rate of receiving traffic from the clients, bits/seconds, last known
//  tx_bytes|float|amount of transmitting traffic to the clients, since reboot
//  rx_bytes|float|amount of receiving traffic from the clients, since reboot
//  tx_pkts|float|amount of transmitting traffic to the clients, since reboot
//  rx_pkts|float|amount of receiving traffic from the clients, since reboot
//  locating|boolean|whether the device is in locating mode (LED blinking)
//  ip_config|object|IP config, see Device Config
//  ip_stat|object|current IP information, see Device Config
//  module_stat|array|device chassis stats, member index == array index (e.g. member 0 is at index 0)
//  module_stat.vc_role|string|device chassis stack role (e.g. master/backup)
//  ips|object|all IPs the devices has, internal interface name -> CIDR mapping
//  radio_config|object|a map of radio config, see Device Config
//  led|object|device LED control, see Device Config
//  env_stat|object|device environment, including CPU temperature, Ambient temperature, Humidity, Attitude, and Pressure
// 
//  #### Radio Config/Status Definition
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------:
//  radio_stat|object|a map of radio stats, key can be band_24 / band_5
// band_24|object|radio stat of 2.4G radio
// band_5|object|radio stat of 5G radio
// mac|string|radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
// channel|int|current channel the radio is running on
// bandwidth|int|current channel bandwidth, 20 / 40 / 80
// power|int|transmit power (in dBm)
// dynamic_chaining_enabled|boolean|Use dynamic chaining for downlink
// tx_chain|int|number of chains to use for tx. This is only used when dynamic chaining is not enabled
// rx_chain|int|number of chains to use for rx. This is only used when dynamic chaining is not enabled
// 
// #### Radio Config/Status Definition
// **Parameter**|**Type**|**Description** 
// :-------------: |:-------------: |:-------------:
// radio_stat|object|a map of radio stats, key can be band_24 / band_5
// band_24|object|radio stat of 2.4G radio
// band_5|object|radio stat of 5G radio
// mac|string|radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
// channel|int|current channel the radio is running on
// bandwidth|int|current channel bandwidth, 20 / 40 / 80
// power|int|transmit power (in dBm)
// dynamic_chaining_enabled|boolean|Use dynamic chaining for downlink
// tx_chain|int|number of chains to use for tx. This is only used when dynamic chaining is not enabled
// rx_chain|int|number of chains to use for rx. This is only used when dynamic chaining is not enabled
// 
// #### Port Status Definition
// port_stat: different type/model of devices may have different number of ports
// 
// 
// **Parameter**|**Type**|**Description** 
// :-------------: |:-------------: |:-------------:
// port_stat|objects|ports status
// eth0|object|port status of eth0 (eth0+PoE)
// eth1|object|port status of eth1
// module|object|port status of module port
// up|boolean|whether the port is up, default is false (down)
// speed|int|10 / 100 / 1000 / 2500, Mbps (mega bits per second)
// full_duplex|boolean|true / false
// 
// #### L2TP Definition
// **Parameter**|**Type**|**Description** 
// :-------------: |:-------------: |:-------------:
// l2tp_stat|objects|l2tp tunnel status (key is the wxtunnel_id)
// wxtunnel_id|string|WxlanTunnel ID
// state|string|idle / wait-ctrl-reply / wait-ctrl-conn / established / established_with_sessions
// uptime|int|uptime
// sessions|list|list of sessions
// remote_id|string|WxlanTunnel Remote ID (user-configured)
// remote_sid|int|remote sessions id (dynamically unless Tunnel is said to be static)
// local_sid|int|remote sessions id (dynamically unless Tunnel is said to be static)
// 
// #### LLDP Definition
// **Parameter**|**Type**|**Description** 
// :-------------: |:-------------: |:-------------:
// lldp_stat|objects|LLDP Stat (neighbor information, power negotiations)
// system_name|string|name of the switch, e.g. “TC2-OWL-Stack-01”
// system_desc|string|description provided by switch, e.g. “HP J9729A 2920-48G-POE+ Switch”
// port_desc|string|port description, e.g. “2/20”, “Port 2 on Switch0”
// mgmt_address|string|switch’s management address (if advertised), can be IPv4, IPv6, or MAC
// lldp_med_supported|boolean|whether it support LLDP-MED
// power_request_count|int|number of negotiations, if it keeps increasing, we don’t have a stable power
// power_allocated|int|in mW, provided/allocated by PSE
// power_requested|int|in mW, the current power requested by PD
// power_draw|int|in mW, total power needed by PD
// power_src|string|DC Input / PoE 802.3at / PoE 802.3af / LLDP / ? (unknown)
// power_budget|int|in mW, surplus if positie or deficit if negative
// 
// #### BLE Definition 
// **Parameter**|**Type**|**Description** 
// :-------------: |:-------------: |:-------------:
// ble_stat|objects|BLE stats
// tx_pkts|float|TxBytes
// tx_bytes|float|TxCommands
// tx_resets|float|resets due to tx hung
// rx_pkts|float|RxEvents
// rx_bytes|float|RxBytes
// ibeacon_enabled|boolean|Whether iBeacon is Enabled
// ibeacon_uuid|string|UUID value for iBeacon
// ibeacon_major|int|Major number for iBeacon
// ibeacon_minor|int|Minor number for iBeacon
// eddystone_uid_enabled|boolean|Whether Eddystone-UID beacon is enabled
// eddystone_uid_namespace|string|Eddystone-UID namespace
// eddystone_uid_instance|string|Eddystone-UID instance for the device
// eddystone_uid_freq_msec|int|Frequency (msec) of data emmit by Eddystone-UID beacon
// eddystone_url_enabled|boolean|Whether Eddystone-URL beacon is enabled
// eddystone_url_url|string|URL pointed by Eddystone-URL beacon
// eddystone_url_freq_msec|int|Frequency (msec) of data emmit by Eddystone-UID beacon
// 
// #### Firmware Update Status Definition
// **Parameter**|**Type**|**Description** 
// :-------------: |:-------------: |:-------------:
// fwupdate|object|last firmware update status
// timestamp|float|timestamp
// status|string|starting / inprogress / success / error
// status_id|int|the internal status id
// progress|int|progress of upgrading expressed in percentage
// 
// #### Mesh Status Definition
// **Parameter**|**Type**|**Description** 
// :-------------: |:-------------: |:-------------:
// mesh_downlinks|object|mesh downlinks established

@name("getSiteDevicesStats")
GET "https://{{host}}/api/v1/sites/:site_id/stats/devices"


@name("getSiteDeviceStatsDetails")
GET "https://{{host}}/api/v1/sites/:site_id/stats/devices/:device_id"



