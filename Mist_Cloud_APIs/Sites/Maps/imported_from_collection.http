#!/usr/bin/env dothttp

@name("getSiteMaps")
GET "https://{{host}}/api/v1/sites/:site_id/maps"


@name("getSiteMapDetails")
GET "https://{{host}}/api/v1/sites/:site_id/maps/:map_id"


// Create a MAP
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// name|string|The name of the map
// type|string|"image / google, default is image"
// ppm|float|"when type=image, pixels per meter"
// width|int|"when type=image, width of the image map"
// height|int|"when type=image, height of the image map"
// url|string|"when type=image, the url"
// thumbnail_url|string|"when type=image, the url for the thumbnail image / preview"
// view|string|when type=google. roadmap / satellite / hybrid / terrain
// origin_x|int|"the user-annotated x origin, pixels"
// origin_y|int|"the user-annotated y origin, pixels"
// orientation|int|"orientation of the map, 0 means up is north, 90 means up is west. default is 0"
// latlng_tl|latlng|"when type=google, latitude / longitude of the top-left corner"
// latlng_br|latlng|"when type=google, latitude / longitude of the bottom-right corner"
// wayfinding|object|properties related to wayfinding
// wayfinding_path|object|a JSON blob for wayfinding (using Dijkstra's algorithm)
// wall\_path|object|a JSON blob for wall definition (same format as wayfinding_path)
// sitesurvey\_path|list|a list of JSON blob for site survey path (same format as wayfinding_path)
// locked|boolean|whether this map is considered locked down
// flags|list|name/val pair objects for location engine to use

@name("createSiteMap")
POST "https://{{host}}/api/v1/sites/:site_id/maps"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"
json({
    "name": "Mist Office",
    "type": "image",
    "ppm": 40.94,
    "width": 1250,
    "height": 1500,
    "origin_x": 35,
    "origin_y": 60,
    "orientation": 30,
    "locked": false,
    "wayfinding_path": {
        "coordinate": "actual",
        "nodes": [
            {
                "name": "N1",
                "position": {
                    "x": 746,
                    "y": 104
                },
                "edges": {
                    "N2": "1"
                }
            },
            {
                "name": "N2",
                "position": {
                    "x": 740,
                    "y": 318
                },
                "edges": {
                    "N1": "1"
                }
            }
        ]
    },
    "wall_path": {
        "coordinate": "actual",
        "nodes": [
            {
                "name": "N1",
                "position": {
                    "x": 746,
                    "y": 104
                },
                "edges": {
                    "N2": "1"
                }
            },
            {
                "name": "N2",
                "position": {
                    "x": 740,
                    "y": 318
                },
                "edges": {
                    "N1": "1"
                }
            }
        ]
    },
    "sitesurvey_path": [
        {
            "coordinate": "actual",
            "nodes": [
                {
                    "name": "W0",
                    "position": {
                        "x": 372,
                        "y": 192
                    },
                    "edges": {
                        "W1": 1
                    }
                },
                {
                    "name": "W1",
                    "position": {
                        "x": 485,
                        "y": 205
                    },
                    "edges": {
                        "W2": 1
                    }
                },
                {
                    "name": "W2",
                    "position": {
                        "x": 400,
                        "y": 295
                    },
                    "edges": {
                        "W0": 1
                    }
                }
            ],
            "name": "Default",
            "id": "cbdb7f0b-3be0-4872-88f9-58790b509c23-j68kows8"
        }
    ],
    "flags": {
        "assetHoldTime": 5,
        "storeTime": 10
    },
    "url": "https://url/to/image.png",
    "thumbnail_url": "https://url/to/image.png"
})


@name("updateSiteMap")
PUT "https://{{host}}/api/v1/sites/:site_id/maps/:map_id"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"
json({
    "name": "Mist Office"
})


@name("deleteSiteMap")
DELETE "https://{{host}}/api/v1/sites/:site_id/maps/:map_id"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"


// Import Micello Info
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// vendor_name|string|the vendor ‘micello’
// account_key|string|the account key that has access to the map
// map_id|string|micello map id
// default_level_id|int|micello floor/level id
// 
//  #### Device Import CSV File Format
// ```
// Vendor AP name,Mist AP Mac
// US Office AP-2 - 5c:5b:35:00:00:02,5c5b35000002
// ```

@name("importSiteMap")
POST "https://{{host}}/api/v1/sites/:site_id/maps/import"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"
files(
	("json", "{
    "vendor_name": "ekahau",
    "import_all_floorplans": true  // optional
    "import_height": true, // optional
    "import_orientation": false // optional
}"),
	("file", "None"),
	("csv", "None")
)


// Add image map is a multipart POST which has an file (Image) and an optional json parameter
// 
// #### Request
// 
// ```
// "json": a JSON string describing your upload
// "file": a binary file
// ```

@name("addSiteMapImage")
POST "https://{{host}}/api/v1/sites/:site_id/maps/:map_id/image"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"



@name("deleteSiteMapImage")
DELETE "https://{{host}}/api/v1/sites/:site_id/maps/:map_id/image"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"


// This works like an PUT where the image will be replaced. If transform is provided, all the locations of the objects on the map (AP, Zone, Vbeacon, Beacon) will be transformed as well (relative to the new Map)
// 
// 
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
//  transform|object|The name of the map, optional
//  x|float|where the (0, 0) of the new image is relative to the original map, default is 0
//  y|float|where the (0, 0) of the new image is relative to the original map, default is 0
//  scale|float|whether to scale the replacing image, default is 1
//  rotation|int|whether to rotate the replacing image, default is 0, in degrees

@name("replaceSiteMapImage")
POST "https://{{host}}/api/v1/sites/:site_id/maps/:map_id/replace"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"
files(
	("file", "None"),
	("json", "{
    "transform": {
        "x": 200,
        "y": 150,
        "scale": 1,
        "rotate": 0
    }
}")
)


// This imports the vendor map meta data into the Map JSON. This is required by the SDK and App in order to access/render the vendor Map properly.
// 
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// vendor_name|string|the vendor ‘micello’
// account_key|string|the account key that has access to the map
// map_id|string|micello map id
// default_level_id|int|micello floor/level id

@name("importSiteMicelloInfo")
POST "https://{{host}}/api/v1/sites/:site_id/maps/:map_id/wayfinding/import"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"
json({
    "vendor_name": "micello",
    "account_key": "adasdf",
    "map_id": "c660f81dd250c",
    "default_level_id": 5
})


// This imports the vendor map meta data into the Map JSON. This is required by the SDK and App in order to access/render the vendor Map properly.
// 
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
//  vendor_name|string|the vendor ‘jibestream’
//  venue_id|int|the venue or organization id
//  map_id|string|the jibestream map id
//  ppm|float|pixel per meter, same as the map JSON value.
//  client_id|int|the client id
//  client_secret|string|the client secret
//  customer_id|string|the jibestream customer record id
//  endpoint\_url_url|string|the map contents endpoint host
//  mmpp|float|millimeter per pixel

@name("importSiteJibestreamInfo")
POST "https://{{host}}/api/v1/sites/:site_id/maps/:map_id/wayfinding/import"
"Accept": "application/json"
"X-CSRFToken": "{{csrftoken}}"
"Content-Type": "application/json"
json({
    "vendor_name": "jibestream",
    "venue_id": 123,
    "map_id": "123",
    "ppm": 4.479186910505666,
    "client_id": "199d6770-0f6f-407a-9bd5-fc33c7840194",
    "client_secret": "/9Nog3yDzcYj0bY91XJZQLCt+m9DXaIVhx+Ghk3ddd",
    "customer_id": 123,
    "endpoint_url": "https://api.jibestream.com",
    "mmpp": 223.2548049411735
})



