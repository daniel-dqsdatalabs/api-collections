#!/usr/bin/env dothttp

@name("Retrieve the properties and relationships of an object of type purchaseInvoice for Dynamics 365 Business Central.")
GET "https://{{baseUrl}}/companies({{company_id}})/purchaseInvoices({{purchaseInvoice_id}})"
? "$expand"= "<string>,<string>"
? "$select"= "<string>,<string>"


@name("Deletes an object of type purchaseInvoice in Dynamics 365 Business Central")
DELETE "https://{{baseUrl}}/companies({{company_id}})/purchaseInvoices({{purchaseInvoice_id}})"


@name("Updates an object of type purchaseInvoice in Dynamics 365 Business Central")
PATCH "https://{{baseUrl}}/companies({{company_id}})/purchaseInvoices({{purchaseInvoice_id}})"
"Content-Type": "<string>"
"If-Match": "<string>"
"Content-Type": "application/json"
data('{
    "id": "<uuid>",
    "number": "<string>",
    "invoiceDate": "<dateTime>",
    "dueDate": "<dateTime>",
    "vendorInvoiceNumber": "<string>",
    "vendorId": "<uuid>",
    "vendorNumber": "<string>",
    "vendorName": "<string>",
    "payToName": "<string>",
    "payToContact": "<string>",
    "payToVendorId": "<uuid>",
    "payToVendorNumber": "<string>",
    "shipToName": "<string>",
    "shipToContact": "<string>",
    "buyFromAddress": {
        "street": "<string>",
        "city": "<string>",
        "state": "<string>",
        "countryLetterCode": "<string>",
        "postalCode": "<string>",
        "customerFinancialDetails": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "picture": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "defaultDimensions": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "currency": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "paymentTerm": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "shipmentMethod": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "paymentMethod": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        }
    },
    "payToAddress": {
        "street": "<string>",
        "city": "<string>",
        "state": "<string>",
        "countryLetterCode": "<string>",
        "postalCode": "<string>",
        "customerFinancialDetails": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "picture": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "defaultDimensions": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "currency": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "paymentTerm": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "shipmentMethod": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "paymentMethod": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        }
    },
    "shipToAddress": {
        "street": "<string>",
        "city": "<string>",
        "state": "<string>",
        "countryLetterCode": "<string>",
        "postalCode": "<string>",
        "customerFinancialDetails": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "picture": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "defaultDimensions": [
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            },
            {
                "value": "<Error: Too many levels of nesting to fake this schema>"
            }
        ],
        "currency": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "paymentTerm": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "shipmentMethod": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        },
        "paymentMethod": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
        }
    },
    "currencyId": "<uuid>",
    "currencyCode": "<string>",
    "pricesIncludeTax": "<boolean>",
    "discountAmount": "<decimal>",
    "discountAppliedBeforeTax": "<boolean>",
    "totalAmountExcludingTax": "<decimal>",
    "totalTaxAmount": "<decimal>",
    "totalAmountIncludingTax": "<decimal>",
    "status": "<string>",
    "lastModifiedDateTime": "<dateTime>"
}')


@name("Performs the post action for purchaseInvoices entity")
POST "https://{{baseUrl}}/companies({{company_id}})/purchaseInvoices({{purchaseInvoice_id}})/Microsoft.NAV.post"


@name("Returns a list of pdfDocument")
GET "https://{{baseUrl}}/companies({{company_id}})/purchaseInvoices({{purchaseInvoice_id}})/pdfDocument"
? "$top"= "<integer>"
? "$skip"= "<integer>"
? "$limit"= "<integer>"
? "$filter"= "<string>"
? "$select"= "<string>,<string>"


@name("Retrieve the properties and relationships of an object of type pdfDocument for Dynamics 365 Business Central.")
GET "https://{{baseUrl}}/companies({{company_id}})/purchaseInvoices({{purchaseInvoice_id}})/pdfDocument({{pdfDocument_id}})"
? "$select"= "<string>,<string>"



