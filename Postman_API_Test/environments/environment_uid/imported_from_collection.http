#!/usr/bin/env dothttp

// Access the contents of an environment that is accessible to you using its unique id (`uid`).
// 
// > Requires <a href="#authentication">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.

@name("Single Environment")
GET "https://{{baseUrl}}/environments/:environment_uid"


// This endpoint replaces an existing environment.
// 
// A sample body is added to the request that conforms to the following JSON schema:
// 
// ```json
// {
// 	"type": "object",
// 	"properties": {
// 		"environment": {
// 			"type": "object",
// 			"properties": {
// 				"name": {
// 					"type": "string",
// 					"maxLength": 254,
// 					"minLength": 1
// 				},
// 				"values": {
// 					"type": "array",
// 					"maxItems": 100,
// 					"additionalItems": false,
// 					"items": {
// 						"type": "object",
// 						"properties": {
// 							"key": {
// 								"type": "string",
// 								"maxLength": 254,
// 								"minLength": 1
// 							},
// 							"value": {
// 								"type": "string",
// 								"maxLength": 254,
// 								"minLength": 1
// 							},
// 							"type": {
// 								"type": "string"
// 							},
// 							"enabled": {
// 								"type": "boolean"
// 							}
// 						},
// 						"required": [
// 							"key",
// 							"value"
// 						]
// 					}
// 				}
// 			}
// 		}
// 	},
// 	"required": [
// 		"environment"
// 	]
// }
// ```
// 
// On successful updation of the environment, the API returns the environment name and `id`.
// 
// > Requires <a href="#authentication">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.

@name("Update Environment")
PUT "https://{{baseUrl}}/environments/:environment_uid"
"Content-Type": "application/json"
data('{
    "environment": {
        "name": "New Name",
        "values": [
            {
                "key": "name",
                "value": "Bruce Wayne"
            },
            {
                "key": "occupation",
                "value": "Vigilante"
            }
        ]
    }
}')


// This endpoint allows you to delete a single environment based on an environment's unique `uid`.
// 
// > Requires <a href="#authentication">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.

@name("Delete Environment")
DELETE "https://{{baseUrl}}/environments/:environment_uid"



