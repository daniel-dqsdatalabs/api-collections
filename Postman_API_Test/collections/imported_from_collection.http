#!/usr/bin/env dothttp

// The `/collections` endpoint returns a list of all [collections](https://www.getpostman.com/docs/collections) that are accessible by you. The list includes your own collections and the collections that you have subscribed to.
// 
// The response contains an array of collection information containing the `name`, `id`, `owner` and `uid` of each collection.
// 
// > Requires <a href="#authentication">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.

@name("All Collections")
GET "https://{{baseUrl}}/collections"


// This endpoint allows you to create collections using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).
// 
// On successful creation of the collection, the response returns the collection `name`, `id` and the `uid`.
// 
// You can also specify the context of a workspace to create a collection in directly by passing the `workspace` as a query param.
// 
// > Requires <a href="#authentication">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.

@name("Create Collection")
POST "https://{{baseUrl}}/collections"
"Content-Type": "application/json"
json({
    "collection": {
        "info": {
            "description": "This is just a sample collection.",
            "name": "Sample Collection {{$randomInt}}",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
        },
        "item": [
            {
                "item": [
                    {
                        "name": "Sample POST Request",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\"data\": \"123\"}"
                            },
                            "description": "This is a sample POST Request",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "https://postman-echo.com/post"
                        }
                    }
                ],
                "name": "This is a folder"
            },
            {
                "name": "Sample GET Request",
                "request": {
                    "description": "This is a sample GET Request",
                    "method": "GET",
                    "url": "https://postman-echo/get"
                }
            }
        ]
    }
})


// This endpoint allows you to create a fork from an existing collection.
// 
// On successful creation of the collection, the response returns the collection `name`, `id`, `uid` along with `fork` information.
// 
// You can also specify the context of a workspace to fork a collection in by passing the `workspace` as a query param.
// 
// > Requires <a href="#authentication">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.

@name("Create a Fork")
POST "https://{{baseUrl}}/collections/fork/:collection_uid"
"Content-Type": "application/json"
? "workspace"= "{{workspace_id}}"
json({
    "name": "Fork name"
})


// This endpoint allows you to merge a forked collection back to its destination collection.
// 
// On successful creation of the collection, the response returns the collection `name`, `id` and `uid`.
// 
// You need to specify the fork UID (as `source`) and destination collection UID (as `destination`) in the request body.
// 
// Optionally, you can also specify the merge strategy as either `deleteSource` or `updateSourceWithDestination`. Following is an explanation of the merge strategies
// 
// | Merge Strategy | Behaviour |
// | --- | --- |
// | deleteSource | Forked collection is deleted after merging |
// | updateSourceWithDestination | Forked collection is up to date with changes in destination collection |
// 
// If the collections cannot be merged (due to conflicts), appropriate error messages will be returned.
// 
// 
// > Requires <a href="#authentication">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.

@name("Merge a Fork")
POST "https://{{baseUrl}}/collections/merge"
"Content-Type": "application/json"
json({
    "destination": "{{destination_collection_uid}}",
    "source": "{{source_collection_uid}}",
    "strategy": "deleteSource"
})



