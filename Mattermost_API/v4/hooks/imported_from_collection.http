#!/usr/bin/env dothttp

// Get a page of a list of incoming webhooks. Optionally filter for a specific team using query parameters.
// ##### Permissions
// `manage_webhooks` for the system or `manage_webhooks` for the specific team.

@name("List incoming webhooks")
GET "https://{{baseURL}}/hooks/incoming"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
? "page"= "0"
? "per_page"= "60"
? "team_id"= "{{team_id}}"



// Create an incoming webhook for a channel.
// ##### Permissions
// `manage_webhooks` for the channel the webhook is in.

@name("Create an incoming webhook")
POST "https://{{baseURL}}/hooks/incoming"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
data('Incoming webhook to be created')


// Get an incoming webhook given the hook id.
// ##### Permissions
// `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.

@name("Get an incoming webhook")
GET "https://{{baseURL}}/hooks/incoming/{{hook_id}}"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"



// Update an incoming webhook given the hook id.
// ##### Permissions
// `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.

@name("Update an incoming webhook")
PUT "https://{{baseURL}}/hooks/incoming/{{hook_id}}"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
data('Incoming webhook to be updated')


// Get a page of a list of outgoing webhooks. Optionally filter for a specific team or channel using query parameters.
// ##### Permissions
// `manage_webhooks` for the system or `manage_webhooks` for the specific team/channel.

@name("List outgoing webhooks")
GET "https://{{baseURL}}/hooks/outgoing"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
? "page"= "0"
? "per_page"= "60"
? "team_id"= "{{team_id}}"
? "channel_id"= "{{channel_id}}"



// Create an outgoing webhook for a team.
// ##### Permissions
// `manage_webhooks` for the team the webhook is in.

@name("Create an outgoing webhook")
POST "https://{{baseURL}}/hooks/outgoing"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
data('Outgoing webhook to be created')


// Get an outgoing webhook given the hook id.
// ##### Permissions
// `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.

@name("Get an outgoing webhook")
GET "https://{{baseURL}}/hooks/outgoing/{{hook_id}}"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"



// Update an outgoing webhook given the hook id.
// ##### Permissions
// `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.

@name("Update an outgoing webhook")
PUT "https://{{baseURL}}/hooks/outgoing/{{hook_id}}"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
data('Outgoing webhook to be updated')


// Delete an outgoing webhook given the hook id.
// ##### Permissions
// `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.

@name("Delete an outgoing webhook")
DELETE "https://{{baseURL}}/hooks/outgoing/{{hook_id}}"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"



// Regenerate the token for the outgoing webhook.
// ##### Permissions
// `manage_webhooks` for system or `manage_webhooks` for the specific team or `manage_webhooks` for the channel.

@name("Regenerate the token for the outgoing webhook.")
POST "https://{{baseURL}}/hooks/outgoing/{{hook_id}}/regen_token"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"




