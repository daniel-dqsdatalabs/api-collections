#!/usr/bin/env dothttp

// Get SAML metadata from the server. SAML must be configured properly.
// ##### Permissions
// No permission required.

@name("Get metadata")
GET "https://{{baseURL}}/saml/metadata"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"



// Upload the IDP certificate to be used with your SAML configuration. This will also set the filename for the IdpCertificateFile setting in your `config.json`.
// ##### Permissions
// Must have `manage_system` permission.

@name("Upload IDP certificate")
POST "https://{{baseURL}}/saml/certificate/idp"
"Authorization": "Bearer {{token}}"
"Content-Type": "multipart/form-data"
files(
	("certificate", "{{certificate}}")
)


// Delete the current IDP certificate being used with your SAML configuration. This will also disable SAML on your system as this certificate is required for SAML.
// ##### Permissions
// Must have `manage_system` permission.

@name("Remove IDP certificate")
DELETE "https://{{baseURL}}/saml/certificate/idp"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"



// Upload the public certificate to be used for encryption with your SAML configuration. This will also set the filename for the PublicCertificateFile setting in your `config.json`.
// ##### Permissions
// Must have `manage_system` permission.

@name("Upload public certificate")
POST "https://{{baseURL}}/saml/certificate/public"
"Authorization": "Bearer {{token}}"
"Content-Type": "multipart/form-data"
files(
	("certificate", "{{certificate}}")
)


// Delete the current public certificate being used with your SAML configuration. This will also disable encryption for SAML on your system as this certificate is required for that.
// ##### Permissions
// Must have `manage_system` permission.

@name("Remove public certificate")
DELETE "https://{{baseURL}}/saml/certificate/public"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"



// Upload the private key to be used for encryption with your SAML configuration. This will also set the filename for the PrivateKeyFile setting in your `config.json`.
// ##### Permissions
// Must have `manage_system` permission.

@name("Upload private key")
POST "https://{{baseURL}}/saml/certificate/private"
"Authorization": "Bearer {{token}}"
"Content-Type": "multipart/form-data"
files(
	("certificate", "{{certificate}}")
)


// Delete the current private key being used with your SAML configuration. This will also disable encryption for SAML on your system as this key is required for that.
// ##### Permissions
// Must have `manage_system` permission.

@name("Remove private key")
DELETE "https://{{baseURL}}/saml/certificate/private"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"



// Get the status of the uploaded certificates and keys in use by your SAML configuration.
// ##### Permissions
// Must have `manage_system` permission.

@name("Get certificate status")
GET "https://{{baseURL}}/saml/certificate/status"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"




