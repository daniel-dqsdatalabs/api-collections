#!/usr/bin/env dothttp

// Get authenticator providers Returns a list of authenticator providers.

@name("Authenticator providers [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/authenticator-providers"
"Content-Type": "application/x-www-form-urlencoded"


// Get client authenticator providers Returns a list of client authenticator providers.

@name("Client authenticator providers [SAT] ")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/client-authenticator-providers"
"Content-Type": "application/x-www-form-urlencoded"


// Get form action providers Returns a list of form action providers.

@name("Form action authenticator providers [SAT] ")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/form-action-providers"
"Content-Type": "application/x-www-form-urlencoded"


// Get form providers Returns a list of form providers.

@name("Form authenticator providers [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/form-providers"
"Content-Type": "application/x-www-form-urlencoded"


// Get configuration descriptions for all clients

@name("Get configuration descriptions for all clients [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/per-client-config-description"
"Content-Type": "application/x-www-form-urlencoded"


// Get authenticator provider’s configuration description (e.g. client-jwt)

@name("Client authenticator providers description [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/config-description/{{providerId}}"
"Content-Type": "application/x-www-form-urlencoded"


// Get authenticator configuration

@name("Authenticator configuration [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/config/{{configurationId}}"
"Content-Type": "application/x-www-form-urlencoded"


// Get Single Execution

@name("Get authentication execution [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/executions/{{executionId}}"
"Content-Type": "application/x-www-form-urlencoded"


// Update Execution

@name("Update authentication execution [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/executions/{{executionId}}"
"Content-Type": "application/json"
json({
    "id": "23e192b0-2811-4441-9f66-99bd1c4687f6",
    "authenticator": "auth-cookie",
    "authenticatorFlow": false,
    "requirement": "ALTERNATIVE",
    "priority": 10,
    "parentFlow": "bf2ffb04-39eb-4de9-b302-29f8d2735cbb",
    "enabled": true,
    "alternative": true,
    "required": false,
    "conditional": false,
    "disabled": false
})


// Lower execution’s priority

@name("Lower authentication execution priority [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/executions/{{executionId}}/lower-priority"
"Content-Type": "application/json"


// Raise execution’s priority

@name("Raise authentication execution priority [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/executions/{{executionId}}/raise-priority"
"Content-Type": "application/json"


// Create a new authentication flow

@name("Create a new authentication flow [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows"
"Content-Type": "application/json"
json({
    "alias": "browser-for-fun",
    "description": "browser based authentication",
    "providerId": "basic-flow",
    "topLevel": true,
    "builtIn": true,
    "authenticationExecutions": [
        {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
        },
        {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
        },
        {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
        },
        {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
        }
    ]
})


// Copy existing authentication flow under a new name The new name is given as 'newName' attribute of the passed JSON object

@name("Copy existing authentication flow [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows/{{LowerCaseAliasFlow}}/copy"
"Content-Type": "application/json"
json({
    "newName": "newName"
})


// Get authentication flows Returns a list of authentication flows.

@name("Get authentication flows [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows"
"Content-Type": "application/json"


// Get authentication executions for a flow

@name("Get authentication executions for a flow [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows/{{LowerCaseAliasFlow}}/executions"
"Content-Type": "application/json"


// Get authentication flow for id

@name("Get authentication executions for a flow [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows/{{flowId}}"
"Content-Type": "application/json"


// Update an authentication flow

@name("Update an authentication flow [SAT]")
PUT "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows/{{flowId}}"
"Content-Type": "application/json"
json({
    "alias": "browser",
    "description": "browser based authentication - still getting error, but updates me",
    "providerId": "basic-flow",
    "topLevel": true,
    "builtIn": true
})


// Delete an authentication flow
// *** Replace the deleteFlowId variable with the flow id you want to delete
// Be aware that an original flow cannot be deleted

@name("Delete an authentication flow [SAT]")
DELETE "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows/{{deleteFlowId}}"
"Content-Type": "application/json"


// Update authentication executions of a flow

@name("Update authentication executions of a flow [SAT]")
PUT "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows/{{LowerCaseAliasFlow}}/executions"
"Content-Type": "application/json"
json({
    "id": "23e192b0-2811-4441-9f66-99bd1c4687f6",
    "requirement": "ALTERNATIVE",
    "displayName": "Cookie",
    "requirementChoices": [
        "REQUIRED",
        "ALTERNATIVE",
        "DISABLED"
    ],
    "configurable": false,
    "providerId": "auth-cookie",
    "level": 0,
    "index": 0
})


// Add new authentication execution to a flow
// *** works only with a copied Flow!! 

@name("Add new authentication executions to a flow [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows/{{LowerCaseAliasFlow}}/executions/execution"
"Content-Type": "application/json"
json({
    "provider": "reset-password"
})


// Register a new required actions

@name("Register a new required actions [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/register-required-action"
"Content-Type": "application/json"
json({
    "providerId": "reset-password",
    "name": "new-reset-password"
})


// Get required actions Returns a list of required actions.

@name("Get required actions [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/required-actions"
"Content-Type": "application/json"


// Get unregistered required actions Returns a list of unregistered required actions.

@name("Get unregistered required actions [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/unregistered-required-actions"
"Content-Type": "application/json"


// Lower required action’s priority

@name("Lower required action’s priority [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/required-actions/{{aliasRequiredAction}}/lower-priority"
"Content-Type": "application/json"


// Raise required action’s priority

@name("Raise required action’s priority [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/required-actions/{{aliasRequiredAction}}/raise-priority"
"Content-Type": "application/json"


// Update required action

@name("Update required action [SAT]")
PUT "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/required-actions/{{aliasRequiredAction}}"
"Content-Type": "application/json"
json({
    "alias": "UPDATE_PASSWORD",
    "name": "Update Password +",
    "providerId": "UPDATE_PASSWORD",
    "enabled": true,
    "defaultAction": false,
    "priority": 30,
    "config": {}
})


// Delete required action

@name("Delete required action [SAT]")
DELETE "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/required-actions/{{aliasRequiredAction}}"
"Content-Type": "application/json"


// Get required action for alias

@name("Get required actions for alias [SAT]")
GET "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/required-actions/{{aliasRequiredAction}}"
"Content-Type": "application/json"


// Add new flow with new execution to existing flow

@name("Add new flow with new execution to existing flow [SAT]")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/flows/{{LowerCaseAliasFlow}}/executions/flow"
"Content-Type": "application/json"
json({
    "provider": "reset-password",
    "alias": "bff",
    "type": "generic",
    "description": "new flow bff"
})


// Delete execution

@name("Delete authentication execution [SAT]")
DELETE "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/executions/{{executionId}}"
"Content-Type": "application/x-www-form-urlencoded"


// Update authenticator configuration

@name("Update authenticator configuration [SAT]")
PUT "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/config/{{configurationId}}"
"Content-Type": "application/json"
json({
    "config": {
        "update.profile.on.first.login": "on"
    }
})


// Add new authentication execution

@name("Add authenticator configuration [SAT] Copy")
POST "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/config/{{configurationId}}"
"Content-Type": "application/json"
json({
    "config": {
        "update.profile.on.first.login": "on"
    }
})


// Delete authenticator configuration

@name("Delete authenticator configuration [SAT] ")
DELETE "https://{{keycloak_url}}/admin/realms/{{realm}}/authentication/config/{{configurationId}}"
"Content-Type": "application/json"



