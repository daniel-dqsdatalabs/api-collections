#!/usr/bin/env dothttp

@name("Pesquisa de produtos")
GET "https://leomadeiras.myvtex.com/api/catalog_system/pub/products/search/corredica"
"x-vtex-api-appkey": "{{vtex-ApiKey}}"
"x-vtex-api-apptoken": "{{vtex-ApiToken}}"


// Nao precisa de credenciais para acessar a api

@name("Consulta do autocomplete usado no site")
GET "https://leomadeiras.myvtex.com/buscaautocomplete"
? "productNameContains"= "corredica"


// Documentacao dos filtros
// https://developers.vtex.com/reference/search-3#productsearchfilteredandordered
// 
// APi ProductSearch Filtered and Ordered
// 
// Filters
// Filter by full text - ft={searchWord}
// Ex: ft=television
// 
// Filter by category - fq=C:/{a}/{b}
// {a} and {b} are categoryIds
// Ex: fq=C:/1000041/1000049/
// 
// Filter by specification - fq=specificationFilter_{a}:{b}
// {a} is the specificationId, {b} = specification value
// Ex: To filter products where the color is Blue, find the specificationId for color, supose it's 123 then it will be like this fq=specificationFilter_123:Blue
// 
// Filter by price range - fq=P:[{a} TO {b}]
// {a} is the minimum price "from" and {b} is the highest price "to"
// Ex: fq=P:[0 TO 20] will search products between 0.00 and 20.00.
// 
// Filter by collection - fq=productClusterIds:{{productClusterId}}
// where productClusterId also know as collectionId
// More information about collections: https://help.vtex.com/en/tutorial/creating-a-product-collection
// 
// Filter by product Id - fq=productId:{{productId}}
// 
// Filter by sku Id - fq=skuId:{{skuId}}
// 
// Filter by referenceId - fq=alternateIds_RefId:{{referenceId}}
// 
// Filter by ean13 - fq=alternateIds_Ean:{{ean13}}
// 
// Filter by availability at a specific sales channel - fq=isAvailablePerSalesChannel_{{sc}}:{{bool}}
// {{sc}} is the desired sales channel
// {{bool}} is true ou false, 1 or 0.
// Ex: seaching available products for the sales channel 4 fq=isAvailablePerSalesChannel_4:1
// 
// Filter by available at a specific seller - fq=sellerIds:{{sellerId}}
// 
// Sorting
// Price
// O=OrderByPriceDESC
// O=OrderByPriceASC
// 
// Top Selling Products
// O=OrderByTopSaleDESC
// 
// Best Reviews
// O=OrderByReviewRateDESC
// 
// Name
// O=OrderByNameASC
// O=OrderByNameDESC
// 
// Release Date
// O=OrderByReleaseDateDESC
// 
// Best Discounts
// O=OrderByBestDiscountDESC
// 
// Score
// O=OrderByScoreDESC

@name("Pesquisa de produtos com filtros e ordenacao")
GET "https://leomadeiras.myvtex.com/api/catalog_system/pub/products/search"
"x-vtex-api-appkey": "{{vtex-ApiKey}}"
"x-vtex-api-apptoken": "{{vtex-ApiToken}}"
? "O"= "OrderByPriceASC"


@name("Lista de categorias")
GET "https://leomadeiras.myvtex.com/api/catalog/pvt/category"
"x-vtex-api-appkey": "{{vtex-ApiKey}}"
"x-vtex-api-apptoken": "{{vtex-ApiToken}}"


@name("Consulta de produtos por Marca")
GET "https://leomadeiras.myvtex.com/api/catalog_system/pvt/products/GetProductAndSkuIds"
"x-vtex-api-appkey": "{{vtex-ApiKey}}"
"x-vtex-api-apptoken": "{{vtex-ApiToken}}"
"Content-Type": "application/json"
"Accept": "application/json"
? "brandId"= "3"


@name("Consulta de produtos por categoria")
GET "https://leomadeiras.myvtex.com/api/catalog_system/pvt/products/GetProductAndSkuIds"
"x-vtex-api-appkey": "{{vtex-ApiKey}}"
"x-vtex-api-apptoken": "{{vtex-ApiToken}}"
"Content-Type": "application/json"
"Accept": "application/json"
? "categoryId"= "2"



