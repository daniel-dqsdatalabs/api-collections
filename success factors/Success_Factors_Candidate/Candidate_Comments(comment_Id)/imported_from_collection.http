#!/usr/bin/env dothttp

@name("Get entity from CandidateComments by key")
GET "https://{{baseUrl}}/CandidateComments({{commentId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$select"= "refType,migratedCommentatorUserName"
? "$expand"= "candidate,*"


@name("Update entity in CandidateComments")
PUT "https://{{baseUrl}}/CandidateComments({{commentId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "d": {
        "associatedCommentId": "Lorem aliqua proident",
        "associatedId": "dolor et elit",
        "candidateId": "eiusmod minim elit quis aliqua",
        "commentId": "eiusmod Excepteur",
        "commentator": "eu esse ex",
        "content": "exercitation ",
        "hasAssociatedComment": "non aliquip",
        "migratedCommentatorUserName": "ex quis Lorem",
        "refType": "eu commodo",
        "candidate": {
            "address": "ut dolor ullamco veniam",
            "address2": "conse",
            "agreeToPrivacyStatement": "exercitation sit",
            "anonymized": "do sint irure",
            "anonymizedDateTime": "/Date(1492098664000)/",
            "candidateId": "minim",
            "candidateLocale": "ut esse in minim",
            "cellPhone": "sunt labore",
            "city": "quis sit",
            "contactEmail": "nostrud tempor dolore exercitati",
            "country": "sunt",
            "creationDateTime": "/Date(1492098664000)/",
            "currentTitle": "dolore in tempor sit",
            "dataPrivacyId": "deserunt in cillum",
            "dateofAvailability": "/Date(1492098664000)/",
            "externalCandidate": true,
            "firstName": "et id",
            "homePhone": "fugiat labore an",
            "lastLoginDateTime": "/Date(1492098664000)/",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "lastName": "pariatur sunt e",
            "middleName": "ea reprehenderit mollit ullamco E",
            "partnerMemberId": "irure pariatur Duis officia",
            "partnerSource": "labore dolor ex",
            "password": "minim est dolor cupidatat Lorem",
            "primaryEmail": "dolor",
            "privacyAcceptDateTime": "/Date(1492098664000)/",
            "publicIntranet": false,
            "shareProfile": "veniam quis",
            "usersSysId": "sint ullamco quis do",
            "visibilityOption": false,
            "zip": "elit irure dolor",
            "candidateProfileExtension": {
                "candidateId": "eiusmod adipisicing ex incididunt aliquip",
                "createdBy": "aute voluptate",
                "createdDateTime": "/Date(1492098664000)/",
                "lastModifiedBy": "amet",
                "lastModifiedDateTime": "/Date(1492098664000)/",
                "mdfSystemRecordStatus": "et in in"
            },
            "certificates": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "education": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "insideWorkExperience": {
                "results": [
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    },
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    }
                ]
            },
            "languages": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "outsideWorkExperience": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "tags": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPool": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPoolcorp": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            }
        }
    }
}')



