#!/usr/bin/env dothttp

@name("Get entities from CandidateBackground_Education")
GET "https://{{baseUrl}}/CandidateBackground_Education"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$top"= "20"
? "$skip"= "26126779"
? "$search"= "exercitation mollit reprehenderit ad"
? "$filter"= "exercitation mollit reprehenderit ad"
? "$count"= "true"
? "$orderby"= "schoolAddress desc,lastModifiedDateTime"
? "$select"= "endDate,degreeDate"
? "$expand"= "candidate,*"


@name("Add new entity to CandidateBackground_Education")
POST "https://{{baseUrl}}/CandidateBackground_Education"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "backgroundElementId": "incididunt magna",
    "bgOrderPos": "quis sed mollit pariatur dolore",
    "candidateId": "sit esse",
    "degree": "ex aute",
    "degreeDate": "/Date(1492098664000)/",
    "endDate": "/Date(1492098664000)/",
    "lastModifiedDateTime": "/Date(1492098664000)/",
    "major": "officia id nostrud aliquip",
    "presentStudent": -60762425,
    "school": "fugiat",
    "schoolAddress": "occaecat amet nisi",
    "schoolCity": "adipisicing minim eni",
    "schoolCountry": "ex sit pariatur consequat",
    "schoolPhone": "sed ut velit quis",
    "schoolState": "cupidatat dolore velit pariatur",
    "schoolType": "qui labore",
    "schoolZip": "aliquip sint",
    "startDate": "/Date(1492098664000)/",
    "candidate": {
        "address": "ex irure",
        "address2": "qui dolor quis",
        "agreeToPrivacyStatement": "voluptate do dolor ipsum",
        "anonymized": "et l",
        "anonymizedDateTime": "/Date(1492098664000)/",
        "candidateId": "consequat enim fugiat",
        "candidateLocale": "sed",
        "cellPhone": "reprehenderit ut ea irure commodo",
        "city": "est cil",
        "contactEmail": "Ut irure cillum",
        "country": "esse id eiusmod",
        "creationDateTime": "/Date(1492098664000)/",
        "currentTitle": "ut Lorem cillum",
        "dataPrivacyId": "laboris",
        "dateofAvailability": "/Date(1492098664000)/",
        "externalCandidate": false,
        "firstName": "tempor",
        "homePhone": "ut nostrud culpa Ut in",
        "lastLoginDateTime": "/Date(1492098664000)/",
        "lastModifiedDateTime": "/Date(1492098664000)/",
        "lastName": "amet ",
        "middleName": "veniam ipsum dolor",
        "partnerMemberId": "tempor Duis sint in",
        "partnerSource": "est dolor ut pariatur",
        "password": "ea ad",
        "primaryEmail": "dolore nisi",
        "privacyAcceptDateTime": "/Date(1492098664000)/",
        "publicIntranet": false,
        "shareProfile": "deserunt amet esse quis",
        "usersSysId": "voluptate laborum",
        "visibilityOption": false,
        "zip": "dolor officia",
        "candidateProfileExtension": {
            "candidateId": "consequat ut incididunt eiusmod Ut",
            "createdBy": "sunt ea",
            "createdDateTime": "/Date(1492098664000)/",
            "lastModifiedBy": "pariatur ut",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "mdfSystemRecordStatus": "esse ad nulla nostrud ex"
        },
        "certificates": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "education": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "insideWorkExperience": {
            "results": [
                {
                    "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                },
                {
                    "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                }
            ]
        },
        "languages": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "outsideWorkExperience": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "tags": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "talentPool": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "talentPoolcorp": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        }
    }
}')



