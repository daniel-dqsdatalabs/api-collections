#!/usr/bin/env dothttp

@name("Get entities from CandidateBackground_Certificates")
GET "https://{{baseUrl}}/CandidateBackground_Certificates"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$top"= "20"
? "$skip"= "26126779"
? "$search"= "exercitation mollit reprehenderit ad"
? "$filter"= "exercitation mollit reprehenderit ad"
? "$count"= "true"
? "$orderby"= "bgOrderPos,endDate"
? "$select"= "licenseName,licenseNumber"
? "$expand"= "candidate,*"


@name("Add new entity to CandidateBackground_Certificates")
POST "https://{{baseUrl}}/CandidateBackground_Certificates"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "backgroundElementId": "qui e",
    "bgOrderPos": "reprehenderit",
    "candidateId": "irure exercitation",
    "description": "minim veniam ex",
    "endDate": "/Date(1492098664000)/",
    "institution": "cillum adipisicing velit aliqua irure",
    "lastModifiedDateTime": "/Date(1492098664000)/",
    "licenseCountry": "irure nostrud deserunt",
    "licenseName": "eu",
    "licenseNumber": "aliquip e",
    "licenseState": "pariatur irure ad",
    "licenseType": "cupidatat minim",
    "name": "adipisicing in nulla irure pariatur",
    "startDate": "/Date(1492098664000)/",
    "candidate": {
        "address": "laborum cupidatat",
        "address2": "Excepteur nisi aliquip irure dolore",
        "agreeToPrivacyStatement": "fugiat sed aliqua velit",
        "anonymized": "Ut non",
        "anonymizedDateTime": "/Date(1492098664000)/",
        "candidateId": "commodo ex",
        "candidateLocale": "pariatur",
        "cellPhone": "sint ",
        "city": "dolore esse enim",
        "contactEmail": "fugiat consequat",
        "country": "minim su",
        "creationDateTime": "/Date(1492098664000)/",
        "currentTitle": "quis in aute",
        "dataPrivacyId": "deserunt consectetur",
        "dateofAvailability": "/Date(1492098664000)/",
        "externalCandidate": false,
        "firstName": "labore enim amet dolor sunt",
        "homePhone": "esse veniam sunt in",
        "lastLoginDateTime": "/Date(1492098664000)/",
        "lastModifiedDateTime": "/Date(1492098664000)/",
        "lastName": "minim",
        "middleName": "in est aliqua cillum consequat",
        "partnerMemberId": "ipsum mollit amet deserunt",
        "partnerSource": "sint Excepteur ex",
        "password": "nulla enim labore",
        "primaryEmail": "occaecat magna",
        "privacyAcceptDateTime": "/Date(1492098664000)/",
        "publicIntranet": true,
        "shareProfile": "labore non Excepteur quis",
        "usersSysId": "adipisicing voluptate proident",
        "visibilityOption": false,
        "zip": "tempor sit sunt minim reprehenderit",
        "candidateProfileExtension": {
            "candidateId": "eiusmod aute amet",
            "createdBy": "reprehenderit commodo",
            "createdDateTime": "/Date(1492098664000)/",
            "lastModifiedBy": "dolore laboris culpa commodo minim",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "mdfSystemRecordStatus": "fugiat dolore proident aute"
        },
        "certificates": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "education": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "insideWorkExperience": {
            "results": [
                {
                    "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                },
                {
                    "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                }
            ]
        },
        "languages": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "outsideWorkExperience": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "tags": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "talentPool": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        },
        "talentPoolcorp": {
            "results": [
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            ]
        }
    }
}')



