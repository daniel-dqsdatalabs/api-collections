#!/usr/bin/env dothttp

@name("Get entity from CandidateBackground_OutsideWorkExperience by key")
GET "https://{{baseUrl}}/CandidateBackground_OutsideWorkExperience({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$select"= "presentEmployer,endDate"
? "$expand"= "candidate,*"


@name("Update entity in CandidateBackground_OutsideWorkExperience")
PUT "https://{{baseUrl}}/CandidateBackground_OutsideWorkExperience({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "d": {
        "backgroundElementId": "ut",
        "bgOrderPos": "deserunt",
        "businessType": "aliquip sunt Lorem elit",
        "candidateId": "elit proident do",
        "employer": "amet cillum",
        "employerAddress": "deserunt exercitation",
        "employerCity": "quis anim",
        "employerContact": "in sint consequat la",
        "employerCountry": "sunt sed minim commodo",
        "employerEmail": "sed ut qui veniam",
        "employerPhone": "velit eiusmod cillum mollit ut",
        "employerState": "in aute tempor id",
        "employerZip": "laboris proid",
        "endDate": "/Date(1492098664000)/",
        "lastModifiedDateTime": "/Date(1492098664000)/",
        "presentEmployer": "sit cillum qui ea",
        "startDate": "/Date(1492098664000)/",
        "startTitle": "sed do cillum",
        "candidate": {
            "address": "qui incididunt sit cillum elit",
            "address2": "elit Excepteur",
            "agreeToPrivacyStatement": "nostrud nulla voluptate",
            "anonymized": "ex sed Duis commodo",
            "anonymizedDateTime": "/Date(1492098664000)/",
            "candidateId": "proident non eu",
            "candidateLocale": "aliquip dolore ullamco commodo",
            "cellPhone": "dolor ",
            "city": "ea",
            "contactEmail": "nisi",
            "country": "aliquip nostrud nulla Duis consectetur",
            "creationDateTime": "/Date(1492098664000)/",
            "currentTitle": "irure cillum incididunt Excepteur nostrud",
            "dataPrivacyId": "labo",
            "dateofAvailability": "/Date(1492098664000)/",
            "externalCandidate": true,
            "firstName": "amet consectetur labore",
            "homePhone": "tempor amet",
            "lastLoginDateTime": "/Date(1492098664000)/",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "lastName": "qui dolore Ut",
            "middleName": "in sint",
            "partnerMemberId": "Duis volup",
            "partnerSource": "ut eiusmod",
            "password": "occaecat mollit aliqua",
            "primaryEmail": "pariatur in et",
            "privacyAcceptDateTime": "/Date(1492098664000)/",
            "publicIntranet": true,
            "shareProfile": "reprehende",
            "usersSysId": "Ut sit in",
            "visibilityOption": true,
            "zip": "sit",
            "candidateProfileExtension": {
                "candidateId": "consectetur adipisicing officia",
                "createdBy": "ut elit aliquip",
                "createdDateTime": "/Date(1492098664000)/",
                "lastModifiedBy": "nost",
                "lastModifiedDateTime": "/Date(1492098664000)/",
                "mdfSystemRecordStatus": "dolor commodo"
            },
            "certificates": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "education": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "insideWorkExperience": {
                "results": [
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    },
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    }
                ]
            },
            "languages": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "outsideWorkExperience": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "tags": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPool": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPoolcorp": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            }
        }
    }
}')



