#!/usr/bin/env dothttp

@name("Get entity from CandidateBackground_TalentPoolcorp by key")
GET "https://{{baseUrl}}/CandidateBackground_TalentPoolcorp({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$select"= "talentPoolStatus,bgOrderPos"
? "$expand"= "candidate,*"


@name("Update entity in CandidateBackground_TalentPoolcorp")
PUT "https://{{baseUrl}}/CandidateBackground_TalentPoolcorp({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "d": {
        "backgroundElementId": "labore quis",
        "bgOrderPos": "laborum dolor sint cillum",
        "candidateId": "sunt aliqu",
        "lastModifiedDateTime": "/Date(1492098664000)/",
        "startDate": "/Date(1492098664000)/",
        "talentPoolComments": "dolore",
        "talentPoolStatus": "deserunt ",
        "talentPoolitemCorp": "magna aliquip",
        "candidate": {
            "address": "tempor minim sint Ut",
            "address2": "aute pariatur consectetur elit",
            "agreeToPrivacyStatement": "laborum aliquip",
            "anonymized": "non consequat eu",
            "anonymizedDateTime": "/Date(1492098664000)/",
            "candidateId": "Ut labo",
            "candidateLocale": "quis ea Duis",
            "cellPhone": "tempor consectetur",
            "city": "magna Ut dolor",
            "contactEmail": "fugiat nisi",
            "country": "sed aute sit nisi",
            "creationDateTime": "/Date(1492098664000)/",
            "currentTitle": "commodo ut",
            "dataPrivacyId": "a",
            "dateofAvailability": "/Date(1492098664000)/",
            "externalCandidate": true,
            "firstName": "non aliqua reprehenderit",
            "homePhone": "in reprehenderit",
            "lastLoginDateTime": "/Date(1492098664000)/",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "lastName": "ut id fugiat dolore",
            "middleName": "Excepteur amet nisi officia",
            "partnerMemberId": "ad ut ci",
            "partnerSource": "ullamco commodo",
            "password": "ullamco eiusmod",
            "primaryEmail": "consequat ",
            "privacyAcceptDateTime": "/Date(1492098664000)/",
            "publicIntranet": false,
            "shareProfile": "ipsum esse",
            "usersSysId": "veniam amet",
            "visibilityOption": false,
            "zip": "sint laboris dolore",
            "candidateProfileExtension": {
                "candidateId": "nisi magna",
                "createdBy": "deserunt do culpa",
                "createdDateTime": "/Date(1492098664000)/",
                "lastModifiedBy": "id commodo ex",
                "lastModifiedDateTime": "/Date(1492098664000)/",
                "mdfSystemRecordStatus": "nostrud deserunt"
            },
            "certificates": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "education": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "insideWorkExperience": {
                "results": [
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    },
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    }
                ]
            },
            "languages": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "outsideWorkExperience": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "tags": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPool": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPoolcorp": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            }
        }
    }
}')



