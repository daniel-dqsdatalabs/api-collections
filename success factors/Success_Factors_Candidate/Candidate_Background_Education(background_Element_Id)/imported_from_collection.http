#!/usr/bin/env dothttp

@name("Get entity from CandidateBackground_Education by key")
GET "https://{{baseUrl}}/CandidateBackground_Education({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$select"= "endDate,degreeDate"
? "$expand"= "candidate,*"


@name("Update entity in CandidateBackground_Education")
PUT "https://{{baseUrl}}/CandidateBackground_Education({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "d": {
        "backgroundElementId": "dolor",
        "bgOrderPos": "ut magna",
        "candidateId": "dolore amet",
        "degree": "ullamco aliquip mollit",
        "degreeDate": "/Date(1492098664000)/",
        "endDate": "/Date(1492098664000)/",
        "lastModifiedDateTime": "/Date(1492098664000)/",
        "major": "ex esse Excepteur dolore",
        "presentStudent": 98428828,
        "school": "voluptate la",
        "schoolAddress": "non laboris dolore eu",
        "schoolCity": "cillum anim elit",
        "schoolCountry": "dolor veniam do sed nulla",
        "schoolPhone": "ad minim velit mollit ea",
        "schoolState": "mollit Duis",
        "schoolType": "ame",
        "schoolZip": "ea eiusmod id Duis dolor",
        "startDate": "/Date(1492098664000)/",
        "candidate": {
            "address": "irure",
            "address2": "",
            "agreeToPrivacyStatement": "sint id",
            "anonymized": "velit Lorem",
            "anonymizedDateTime": "/Date(1492098664000)/",
            "candidateId": "in sit qui ipsum",
            "candidateLocale": "amet pariatur sit",
            "cellPhone": "sed sint in aliqua mollit",
            "city": "d",
            "contactEmail": "ut anim consectetur Duis nisi",
            "country": "enim occaecat cillum velit",
            "creationDateTime": "/Date(1492098664000)/",
            "currentTitle": "consectetur",
            "dataPrivacyId": "deserunt adipisicing",
            "dateofAvailability": "/Date(1492098664000)/",
            "externalCandidate": false,
            "firstName": "anim enim",
            "homePhone": "Ut labore laboris in",
            "lastLoginDateTime": "/Date(1492098664000)/",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "lastName": "irure est",
            "middleName": "",
            "partnerMemberId": "eiusmod id est ulla",
            "partnerSource": "ea ex quis tempor",
            "password": "culpa aliqua exercitati",
            "primaryEmail": "irure id laboris",
            "privacyAcceptDateTime": "/Date(1492098664000)/",
            "publicIntranet": false,
            "shareProfile": "et",
            "usersSysId": "dolor sint eiusmod dolore sit",
            "visibilityOption": false,
            "zip": "Duis ",
            "candidateProfileExtension": {
                "candidateId": "do irure Excepteur",
                "createdBy": "esse quis",
                "createdDateTime": "/Date(1492098664000)/",
                "lastModifiedBy": "nisi veniam",
                "lastModifiedDateTime": "/Date(1492098664000)/",
                "mdfSystemRecordStatus": "in"
            },
            "certificates": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "education": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "insideWorkExperience": {
                "results": [
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    },
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    }
                ]
            },
            "languages": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "outsideWorkExperience": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "tags": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPool": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPoolcorp": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            }
        }
    }
}')



