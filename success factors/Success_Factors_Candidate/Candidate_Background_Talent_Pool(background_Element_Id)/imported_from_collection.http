#!/usr/bin/env dothttp

@name("Get entity from CandidateBackground_TalentPool by key")
GET "https://{{baseUrl}}/CandidateBackground_TalentPool({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$select"= "talentPoolComments,talentPoolStatus"
? "$expand"= "candidate,*"


@name("Update entity in CandidateBackground_TalentPool")
PUT "https://{{baseUrl}}/CandidateBackground_TalentPool({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "d": {
        "backgroundElementId": "et velit esse Excepteur",
        "bgOrderPos": "adipisicing in veniam",
        "candidateId": "officia",
        "lastModifiedDateTime": "/Date(1492098664000)/",
        "startDate": "/Date(1492098664000)/",
        "talentPoolComments": "sint aliqua culpa eiusmod ex",
        "talentPoolStatus": "et",
        "talentPoolitem": "dolor Duis ut",
        "candidate": {
            "address": "culpa",
            "address2": "Excepteur id est",
            "agreeToPrivacyStatement": "dolore",
            "anonymized": "ullamco sint minim sunt",
            "anonymizedDateTime": "/Date(1492098664000)/",
            "candidateId": "anim exercitation in eu",
            "candidateLocale": "quis",
            "cellPhone": "Ut dolor officia",
            "city": "qui veniam",
            "contactEmail": "reprehenderit aliquip cupidatat laboris Ut",
            "country": "do",
            "creationDateTime": "/Date(1492098664000)/",
            "currentTitle": "commodo",
            "dataPrivacyId": "Ut cupidatat ad dolor voluptate",
            "dateofAvailability": "/Date(1492098664000)/",
            "externalCandidate": false,
            "firstName": "dolore",
            "homePhone": "laborum irure enim",
            "lastLoginDateTime": "/Date(1492098664000)/",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "lastName": "veniam dolore",
            "middleName": "nisi adipisicing",
            "partnerMemberId": "esse est dolor",
            "partnerSource": "dolore sed qui in",
            "password": "proident",
            "primaryEmail": "a",
            "privacyAcceptDateTime": "/Date(1492098664000)/",
            "publicIntranet": true,
            "shareProfile": "sunt tempor ipsum",
            "usersSysId": "reprehenderit nisi",
            "visibilityOption": false,
            "zip": "ipsum labore id dolore",
            "candidateProfileExtension": {
                "candidateId": "ipsum laborum incididunt dolore ad",
                "createdBy": "enim",
                "createdDateTime": "/Date(1492098664000)/",
                "lastModifiedBy": "ea dolor sed dolore ut",
                "lastModifiedDateTime": "/Date(1492098664000)/",
                "mdfSystemRecordStatus": "nisi proident dolor"
            },
            "certificates": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "education": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "insideWorkExperience": {
                "results": [
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    },
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    }
                ]
            },
            "languages": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "outsideWorkExperience": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "tags": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPool": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPoolcorp": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            }
        }
    }
}')



