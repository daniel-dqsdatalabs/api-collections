#!/usr/bin/env dothttp

@name("Get entity from CandidateBackground_Certificates by key")
GET "https://{{baseUrl}}/CandidateBackground_Certificates({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$select"= "licenseName,licenseNumber"
? "$expand"= "candidate,*"


@name("Update entity in CandidateBackground_Certificates")
PUT "https://{{baseUrl}}/CandidateBackground_Certificates({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "d": {
        "backgroundElementId": "minim",
        "bgOrderPos": "magna sunt deserunt elit reprehenderit",
        "candidateId": "irure aliquip in",
        "description": "consectetur non Ut sed",
        "endDate": "/Date(1492098664000)/",
        "institution": "velit adipisicing sint",
        "lastModifiedDateTime": "/Date(1492098664000)/",
        "licenseCountry": "ut eu voluptate",
        "licenseName": "incididunt ipsum",
        "licenseNumber": "proident qui in id",
        "licenseState": "in",
        "licenseType": "cupidatat magna officia in deserunt",
        "name": "irure Duis",
        "startDate": "/Date(1492098664000)/",
        "candidate": {
            "address": "proident cupidata",
            "address2": "proident reprehend",
            "agreeToPrivacyStatement": "labore aliquip nulla in",
            "anonymized": "laboris minim cupidatat",
            "anonymizedDateTime": "/Date(1492098664000)/",
            "candidateId": "occaecat a",
            "candidateLocale": "ipsum repre",
            "cellPhone": "Duis sed culpa esse",
            "city": "tempor qui",
            "contactEmail": "anim irure aute deserunt",
            "country": "voluptate laborum dolor consequat consectetur",
            "creationDateTime": "/Date(1492098664000)/",
            "currentTitle": "ex dolor de",
            "dataPrivacyId": "eu",
            "dateofAvailability": "/Date(1492098664000)/",
            "externalCandidate": false,
            "firstName": "officia in consectetur",
            "homePhone": "mollit aute ea",
            "lastLoginDateTime": "/Date(1492098664000)/",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "lastName": "dolore",
            "middleName": "mollit ipsum incididunt dolor adipi",
            "partnerMemberId": "sit ex eu eiusmod",
            "partnerSource": "ipsum incididunt",
            "password": "esse ad consequat pariatur",
            "primaryEmail": "Lorem reprehenderit",
            "privacyAcceptDateTime": "/Date(1492098664000)/",
            "publicIntranet": false,
            "shareProfile": "laboris do ad qui",
            "usersSysId": "eiusmod dolor",
            "visibilityOption": false,
            "zip": "Duis ut",
            "candidateProfileExtension": {
                "candidateId": "dolor quis",
                "createdBy": "amet est consequat ut",
                "createdDateTime": "/Date(1492098664000)/",
                "lastModifiedBy": "exercitation occaecat aute velit",
                "lastModifiedDateTime": "/Date(1492098664000)/",
                "mdfSystemRecordStatus": "ad nisi"
            },
            "certificates": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "education": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "insideWorkExperience": {
                "results": [
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    },
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    }
                ]
            },
            "languages": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "outsideWorkExperience": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "tags": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPool": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPoolcorp": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            }
        }
    }
}')



