#!/usr/bin/env dothttp

@name("Get entity from CandidateBackground_InsideWorkExperience by key")
GET "https://{{baseUrl}}/CandidateBackground_InsideWorkExperience({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
? "$select"= "endDate,bgOrderPos"
? "$expand"= "candidate,*"


@name("Update entity in CandidateBackground_InsideWorkExperience")
PUT "https://{{baseUrl}}/CandidateBackground_InsideWorkExperience({{backgroundElementId}})"
basicauth("<Basic Auth Username>", "<Basic Auth Password>")
"Content-Type": "application/json"
data('{
    "d": {
        "backgroundElementId": "Excepteur sint in do",
        "bgOrderPos": "enim ullamco laborum occaecat",
        "candidateId": "ut ea in",
        "department": "fugiat",
        "endDate": "/Date(1492098664000)/",
        "lastModifiedDateTime": "/Date(1492098664000)/",
        "startDate": "/Date(1492098664000)/",
        "title": "qui amet nisi laborum occaecat",
        "candidate": {
            "address": "aute do",
            "address2": "in ut",
            "agreeToPrivacyStatement": "ea dolore commodo cillum culpa",
            "anonymized": "ullamco labore",
            "anonymizedDateTime": "/Date(1492098664000)/",
            "candidateId": "nostrud",
            "candidateLocale": "cillum anim laboris veniam eu",
            "cellPhone": "ipsum deserunt qui ",
            "city": "consequat ",
            "contactEmail": "qui in exercitation nisi reprehenderit",
            "country": "est voluptate velit",
            "creationDateTime": "/Date(1492098664000)/",
            "currentTitle": "magna pariatur",
            "dataPrivacyId": "qui ipsum cupidatat cillum",
            "dateofAvailability": "/Date(1492098664000)/",
            "externalCandidate": false,
            "firstName": "in fugiat in sed",
            "homePhone": "sit magna ut Ut",
            "lastLoginDateTime": "/Date(1492098664000)/",
            "lastModifiedDateTime": "/Date(1492098664000)/",
            "lastName": "minim quis elit ad",
            "middleName": "ad",
            "partnerMemberId": "dolor cillum fugiat adipisicing",
            "partnerSource": "est",
            "password": "non adipisicing occaecat cillum pariatur",
            "primaryEmail": "qui Lorem ut",
            "privacyAcceptDateTime": "/Date(1492098664000)/",
            "publicIntranet": true,
            "shareProfile": "adipisicing in elit sed",
            "usersSysId": "ipsum",
            "visibilityOption": true,
            "zip": "sit id consectetur dolore",
            "candidateProfileExtension": {
                "candidateId": "Excepteur esse Duis",
                "createdBy": "consectetur quis reprehenderit occaecat",
                "createdDateTime": "/Date(1492098664000)/",
                "lastModifiedBy": "exercitation aute deser",
                "lastModifiedDateTime": "/Date(1492098664000)/",
                "mdfSystemRecordStatus": "Ut enim voluptate in"
            },
            "certificates": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "education": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "insideWorkExperience": {
                "results": [
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    },
                    {
                        "value": "<Circular reference to #/components/schemas/SFOData.CandidateBackground_InsideWorkExperience detected>"
                    }
                ]
            },
            "languages": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "outsideWorkExperience": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "tags": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPool": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            },
            "talentPoolcorp": {
                "results": [
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                ]
            }
        }
    }
}')



