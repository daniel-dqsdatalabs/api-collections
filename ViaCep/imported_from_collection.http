#!/usr/bin/env dothttp

// Consulta Códigos de Endereçamento Postal (CEP) do Brasil, path variables com retorno JSON

@name("viacep.com.br/ws/:cep/json/")
GET "https://viacep.com.br/ws/:cep/json/"


// Consulta Códigos de Endereçamento Postal (CEP) do Brasil com retorno JSON

@name("viacep.com.br/ws/01001000/json/")
GET "https://viacep.com.br/ws/01001000/json/"



// Consulta Códigos de Endereçamento Postal (CEP) do Brasil, path variables com retorno XML

@name("viacep.com.br/ws/:cep/xml/")
GET "http://viacep.com.br/ws/:cep/xml/"


// Consulta Códigos de Endereçamento Postal (CEP) do Brasil com retorno XML

@name("viacep.com.br/ws/01001000/xml/")
GET "https://viacep.com.br/ws/01001000/xml/"


// Quando consultado um CEP de formato inválido, por exemplo: "950100100" (9 dígitos), "95010A10" (alfanumérico), "95010 10" (espaço), o código de retorno da consulta será um 400 (Bad Request). Antes de acessar o webservice, valide o formato do CEP e certifique-se que o mesmo possua {8} dígitos.

@name("BadRequestSample")
GET "https://viacep.com.br/ws/0100100/json/"


// Quando consultado um CEP de formato válido, porém inexistente, por exemplo: "99999999", o retorno conterá um valor de "erro" igual a "true". Isso significa que o CEP consultado não foi encontrado na base de dados.

@name("NotFindSample")
GET "https://viacep.com.br/ws/99999999/json/"



