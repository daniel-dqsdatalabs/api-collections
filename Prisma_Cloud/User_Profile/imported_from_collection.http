#!/usr/bin/env dothttp

// Returns the current user's personal profile information.

@name("Profile")
GET "https://{{api-endpoint}}/user/me"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"


// Updates the current user's personal profile information.

@name("Update Profile")
PUT "https://{{api-endpoint}}/user/me"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"
json({
    "firstName": "",
    "lastName": "",
    "timeZone": ""
})


// Get a list of all the users belonging to the same tenant.

@name("List Users")
GET "https://{{api-endpoint}}/user"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"


// Adds a new administrative user.

@name("Add New User Profile")
PUT "https://{{api-endpoint}}/user"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"
json({
    "email": "",
    "firstName": "",
    "lastName": "",
    "timeZone": "",
    "roleId": ""
})


// Returns a list of emails for all non-deleted users in the system.

@name("List Usernames")
GET "https://{{api-endpoint}}/user/name"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"


// Returns a list of permission groups to which users can belong.

@name("List User Role Types")
GET "https://{{api-endpoint}}/user/role/type"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"


// Return the user profile for the specified email ID.

@name("Get User Profile")
GET "https://{{api-endpoint}}/user/{{user}}"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"


// Updates an administrative user's profile.

@name("Update User Profile")
PUT "https://{{api-endpoint}}/user/{{user}}"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"
json({
    "email": "",
    "firstName": "",
    "lastName": "",
    "timeZone": "",
    "roleId": ""
})


// Deletes an administrative user's profile.

@name("Delete User Profile")
DELETE "https://{{api-endpoint}}/user/{{user}}"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"



// Enables/disables a user.

@name("Update User Status")
PATCH "https://{{api-endpoint}}/user/{{id}}/status/{{enabled}}"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"



// Returns a list of whitelisted domains.

@name("List Email Domains")
GET "https://{{api-endpoint}}/user/domain"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"


// Returns a list of users who can login via both SAML provider and username/password flows.

@name("List SSO Bypass Allowed Users")
GET "https://{{api-endpoint}}/user/saml/bypass"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"


// Expects a list of user emails in request body. These users will then be allowed to login via both SAML provider and username/password flows.

@name("Update SSO Bypass Allowed Users")
PUT "https://{{api-endpoint}}/user/saml/bypass"
"accept": "application/json; charset=UTF-8"
"content-type": "application/json"
"x-redlock-auth": "{{token}}"
json([
    "jon.snow@example.com",
    "daenerys@example.com"
])



