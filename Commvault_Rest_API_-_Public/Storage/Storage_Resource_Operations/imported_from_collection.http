#!/usr/bin/env dothttp

// <h2> Description </h2>
// This operation returns a list of MediaAgents.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_mediaagent.htm)

@name("MediaAgent")
GET "https://{{ServerUrl}}/MediaAgent"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2> Description </h2>
// This operation returns a list of MediaAgents.

@name("V2 MediaAgents")
GET "https://{{ServerUrl}}/v2/MediaAgents"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2> Description </h2>
// This operation returns & operates power management status for a cloud media agent.

@name("MediaAgent Power Management")
GET "https://{{ServerUrl}}/MediaAgent/{{MediaAgentId}}/CloudVMPowerManagement"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2> Description </h2>
// This operation returns all File Types and Extensions Available

@name("GetFileTypesAndExtensions")
POST "https://{{ServerUrl}}/GetFileTypesAndExtensions"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"



// <h2> Description </h2>
// This operation updates the properties of a given Media Agent

@name("Update Media Agent Properties")
PUT "https://{{ServerUrl}}/V2/MediaAgents/{{MediaAgentId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
  "mediaAgentInfo": {
    "mediaAgent": {
      "mediaAgentId": {{MediaAgentId}}
    },
    "mediaAgentProps": {
      "markMAOfflineForMaintenance": true
    }
  }
}')


// <h2> Description </h2>
// This operation enables a tape library.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_enable_tape_library.htm)

@name("Enable Tape Library")
POST "https://{{ServerUrl}}/TapeLibraryProperties"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "tapeProperties": {
        "attribute": -1,
        "status": 1,
        "libraryEntity": {
            "libraryId": 334
        }
    }
})


// <h2> Description </h2>
// This operation detects tape libraries.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_detect_tape_library.htm)

@name("Detect Tape Library")
POST "https://{{ServerUrl}}/Library"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
? "Action"= "detect"
json({
    "autoDetect": true,
    "hdr": {
        "tag": 0
    },
    "mediaAgentIdList": []
})


// <h2> Description </h2>
// This operation returns details associated with a library.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_library_details.htm)

@name("Library Details")
GET "https://{{ServerUrl}}/Library/{{LibraryId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2> Description </h2>
// This operation marks a tape library offline for maintenance.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_mark_offline_tape_library.htm)

@name("Mark Tape Library Offline For Maintenance")
POST "https://{{ServerUrl}}/TapeLibraryProperties"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "tapeProperties": {
        "attribute": 522,
        "status": -1,
        "libraryEntity": {
            "libraryId": 184
        }
    }
})


// <h2> Description </h2>
// This operation configures tape libraries.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_configure_tape_library.htm)

@name("Configure Tape Library")
POST "https://{{ServerUrl}}/Library"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
? "Action"= "configureTape"
json({
    "driveList": [
        {
            "iconId": 6,
            "driveId": 0,
            "objectAddress": 188815710176,
            "description": "",
            "driveName": ""
        }
    ],
    "hdr": {
        "tag": 0
    }
})


// <h2> Description </h2>
// This operation returns a list of libraries.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_library.htm)

@name("Library")
GET "https://{{ServerUrl}}/Library"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2> Description </h2>
// This operation unmarks a tape library offline for maintenance.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_mark_offline_tape_library.htm)

@name("UnMark Tape Library Offline For Maintenance")
POST "https://{{ServerUrl}}/TapeLibraryProperties"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "tapeProperties": {
        "attribute": 0,
        "status": -1,
        "libraryEntity": {
            "libraryId": 184
        }
    }
})


// <h2> Description </h2>
// This operation returns a list of storage pools.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_storagepool.htm)

@name("Storage Pool")
GET "https://{{ServerUrl}}/StoragePool"
"Accept": "application/xml"
"Authtoken": "{{TOKEN}}"


// <h2> Description </h2>
// This operation resets tape libraries.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_reset_tape_library.htm)

@name("Reset Tape Library")
POST "https://{{ServerUrl}}/LibraryOperations "
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "LibraryId": 184,
    "libraryOperationType": 22
})


// <h2>Description</h2>
// This operation enables or disables Ransomware protection on a given media agent.

@name("Enable / Disable Ransomware Protection")
POST "https://{{ServerUrl}}/Client/{{clientId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "clientProperties": {
        "clientProps": {
            "dlpPropertise": {
                "dlpEnableAutomaticDecryption": true,
                "enableDLP": true
            }
        }
    }
})


// <h2> Description </h2>
// This operation locks or unlocks media management (MM) configuration.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_lock_mm_configuration.htm)

@name("Lock / Unlock MM Configuration")
POST "https://{{ServerUrl}}/LockMMConfiguration"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "configLockUnlock": {
        "lockType": 1
    }
})


// <h2> Description </h2>
// This operation creates a disk library.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_disk_library.htm)

@name("Library")
POST "https://{{ServerUrl}}/Library"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "isConfigRequired": 1,
    "library": {
        "libraryName": "library001",
        "opType": 1,
        "mediaAgentId": 2,
        "password": "",
        "loginName": "",
        "mountPath": "c:\\library001"
    }
})


// <h2> Description </h2>
// This operation creates a cloud library.
// 
// [_More Details_](https://documentation.commvault.com/commvault/v11/article?p=115425_1.htm)

@name("Cloud Library")
POST "https://{{ServerUrl}}/Library"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "isConfigRequired": 1,
    "library": {
        "libraryName": "library001",
        "opType": 1,
        "isCloud": 1,
        "mediaAgentName": "MA1",
        "serverType": 3,
        "password": "",
        "loginName": "blob.core.windows.net@1//__CVCRED__",
        "mountPath": "MP1",
        "baseFolder": "",
        "savedCredential": {
            "credentialName": "credential1"
        }
    }
})


// <h2>Description</h2>
// 
// This operation deletes a library.

@name("Delete Library")
POST "https://{{ServerUrl}}/Library"
"Authtoken": "{{TOKEN}}"
"Accept": "application/json"
"Content-Type": "application/json"
json({
    "isDeconfigLibrary": 1,
    "library": {
        "opType": 2,
        "libraryName": "Test"
    }
})


// <h2> Description </h2>
// This operation disables a tape library.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_enable_tape_library.htm)

@name("Disable Tape Library")
POST "https://{{ServerUrl}}/TapeLibraryProperties"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "tapeProperties": {
        "attribute": -1,
        "status": 0,
        "libraryEntity": {
            "libraryId": 334
        }
    }
})


// <h2> Description </h2>
// This operation returns the list of MediaAgents accessing a library.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_mediaagent_for_library.htm)

@name("MediaAgent for Library")
GET "https://{{ServerUrl}}/MediaAgentForLibrary"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"
? "LibraryId"= "5"


// <h2> Description </h2>
// This operation returns the details for the given storage pool.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_storagepool_details.htm)

@name("Storage Pool Details")
GET "https://{{ServerUrl}}/StoragePool/13"
"Accept": "application/xml"
"Authtoken": "{{TOKEN}}"


// <h2> Description </h2>
// This operation returns the list of all controllers for a mount path.

@name("DeviceController")
GET "https://{{ServerUrl}}/DriveController"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
? "mountPathId"= "{{mountPathId}}"


// <h2> Description </h2>
// This operation Adds a controller for a mount path.
// 
// <h2>Request Parameters</h2>
// <table class="tableintopic" border="0" cellspacing="0" cellpadding="2">
// <tbody>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">Name</p>
// </td>
// <td>
// <p class="tabletext">Description</p>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">accessType</p>
// </td>
// <td>
// <p class="tabletext">Device Controller Access Type.</p>
// <p class="tabletext">Valid values are:</p>
// <ul class="listbullet">
// <li class="listbullet">14, Read/Write</li>
// <li class="listbullet">12, Read</li>
// </ul>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">opType</p>
// </td>
// <td>
// <p class="tabletext">Operation Type.</p>
// <p class="tabletext">Valid values are:</p>
// <ul class="listbullet">
// <li class="listbullet">1,Add</li>
// <li class="listbullet">2, Edit</li>
// <li class="listbullet">3,Delete</li>
// </ul>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">numWriters</p>
// </td>
// <td>
// <p class="tabletext">Maximum allowed writers</p>
// <p class="tabletext">-1 is for Max allowed writers</p>
// </td>
// </tr>
// </tbody>
// </table>

@name("Add DeviceController")
POST "https://{{ServerUrl}}/DriveController"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
? "Action"= "addController"
data('{
	"mountpathId": 390,
	"infoList": [
		{
			"numWriters": -1,
			"opType": 1,
			"protocolType": 104,
			"deviceId": 104,
			"enabled": 1,
			"accessType": 6,
			"path": "",
			"deviceControllerId": 0,
			"mediaAgent": {
				"name": "{{MediaAgentName}}",
				"id": {{MediaAgentId}}
			}
		}
	]
}')


// <h2> Description </h2>
// This operation edit a controller for a mount path.
// 
// <h2>Request Parameters</h2>
// <table class="tableintopic" border="0" cellspacing="0" cellpadding="2">
// <tbody>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">Name</p>
// </td>
// <td>
// <p class="tabletext">Description</p>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">accessType</p>
// </td>
// <td>
// <p class="tabletext">Device Controller Access Type.</p>
// <p class="tabletext">Valid values are:</p>
// <ul class="listbullet">
// <li class="listbullet">14, Read/Write</li>
// <li class="listbullet">12, Read</li>
// </ul>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">opType</p>
// </td>
// <td>
// <p class="tabletext">Operation Type.</p>
// <p class="tabletext">Valid values are:</p>
// <ul class="listbullet">
// <li class="listbullet">1,Add</li>
// <li class="listbullet">2, Edit</li>
// <li class="listbullet">3,Delete</li>
// </ul>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">numWriters</p>
// </td>
// <td>
// <p class="tabletext">Maximum allowed writers</p>
// <p class="tabletext">-1 is for Max allowed writers</p>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">password</p>
// </td>
// <td>
// <p class="tabletext">Base64 encoded SECRET ACCESS KEY</p>
// </td>
// </tr>
// </tbody>
// </table>

@name("Edit DeviceController")
POST "https://{{ServerUrl}}/DriveController"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
? "Action"= "editController"
data('{
	"mountpathId": {{mountPathId}},
	"infoList": [
		{
			"numWriters": -1,
			"opType": 2,
			"protocolType": 104,
			"userName": "{{SERVICE_HOST}}//{{ACCESS_KEY}}",
			"deviceId": {{deviceId}},
			"enabled": 1,
			"accessType": 6,
			"path": "{{BUCKET}}",
			"password": "{{SECRET_ACCESS_KEY}}",
			"deviceControllerId": {{deviceControllerId}},
			"mediaAgent": {
				"name": "{{MEDIA_AGENT_NAME}}",
				"id": {{MEDIA_AGENT_ID}}
			}
		}
	]
}')


// <h2> Description </h2>
// This operation deletes a controller for a mount path.
// 
// <h2>Request Parameters</h2>
// <table class="tableintopic" border="0" cellspacing="0" cellpadding="2">
// <tbody>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">Name</p>
// </td>
// <td>
// <p class="tabletext">Description</p>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">accessType</p>
// </td>
// <td>
// <p class="tabletext">Device Controller Access Type.</p>
// <p class="tabletext">Valid values are:</p>
// <ul class="listbullet">
// <li class="listbullet">14, Read/Write</li>
// <li class="listbullet">12, Read</li>
// </ul>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">opType</p>
// </td>
// <td>
// <p class="tabletext">Operation Type.</p>
// <p class="tabletext">Valid values are:</p>
// <ul class="listbullet">
// <li class="listbullet">1,Add</li>
// <li class="listbullet">2, Edit</li>
// <li class="listbullet">3,Delete</li>
// </ul>
// </td>
// </tr>
// <tr align="left" valign="top">
// <td>
// <p class="tabletext">numWriters</p>
// </td>
// <td>
// <p class="tabletext">Maximum allowed writers</p>
// <p class="tabletext">-1 is for Max allowed writers</p>
// </td>
// </tr>
// </tbody>
// </table>

@name("Delete DeviceController")
POST "https://{{ServerUrl}}/DriveController"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
? "Action"= "deleteController"
data('{
	"mountpathId": 390,
	"infoList": [
		{
			"numWriters": -1,
			"opType": 3,
			"protocolType": 104,
			"deviceId": 104,
			"enabled": 1,
			"accessType": 6,
			"path": "Manoj",
			"deviceControllerId": 999,
			"mediaAgent": {
				"name": "{{MediaAgentName}}",
				"id": {{MediaAgentId}}
			}
		}
	]
}')


// <h2>Description</h2>
// This operation is to fetch Deduplication details for partitcular storeID

@name("DDB Store Info")
GET "https://{{ServerUrl}}/DDBInformation/{{storeID}}"
"Authtoken": "{{TOKEN}}"
"Accept": "application/json"




