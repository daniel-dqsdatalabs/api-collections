#!/usr/bin/env dothttp

// <h2>Description</h2>
// This operation returns a list of the audit trail settings. 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_audit_trail.htm)

@name("Audit Trail")
GET "https://{{ServerUrl}}/CommServ/AuditTrail"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation updates the audit trail retention settings. 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_audit_trail.htm)

@name("Audit Trail")
POST "https://{{ServerUrl}}/CommServ/AuditTrail"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "auditTrailInfo": {
        "retentionForCritical": 365,
        "retentionForLow": 365,
        "retentionForMedium": 240,
        "retentionForHigh": 260
    }
})


// <h2>Description</h2>
// This operation returns the configuration for Cloud Metrics Reporting. 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_metrics_reporting.htm)

@name("Cloud Metrics Reporting Configuration")
GET "https://{{ServerUrl}}/CommServ/MetricsReporting"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation updates the configuration for Cloud Metrics Reporting. 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_metrics_reporting.htm)

@name("Cloud Metrics Reporting Configuration")
POST "https://{{ServerUrl}}/CommServ/MetricsReporting"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "config": {
        "commcellDiagUsage": true,
        "clientGroupList": [
            {
                "_type_": 28,
                "clientGroupId": -1
            }
        ],
        "cloud": {
            "serviceList": [
                {
                    "flags": 0,
                    "description": "",
                    "enabled": true,
                    "service": {
                        "id": 1
                    }
                },
                {
                    "flags": 0,
                    "description": "",
                    "enabled": false,
                    "service": {
                        "id": 3
                    }
                },
                {
                    "flags": 0,
                    "description": "",
                    "enabled": true,
                    "service": {
                        "id": 5
                    }
                },
                {
                    "flags": 0,
                    "description": "",
                    "enabled": true,
                    "service": {
                        "id": 6
                    }
                }
            ]
        }
    }
})


// <h2>Description</h2>
// This operation returns a list of custom calendars. 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_custom_calendar.htm)

@name("Custom Calendar")
GET "https://{{ServerUrl}}/CommServ/CustomCalendar"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation creates a custom calendar. 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_custom_calendar.htm)

@name("Custom Calendar")
POST "https://{{ServerUrl}}/CommServ/CustomCalendar"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "customCalendarOperationType": 1,
    "customCalendar": {
        "beginDate": 1483246800,
        "defineCustomMonths": true,
        "isDefault": false,
        "numberOfYears": 1,
        "beginYear": 2017,
        "beginMonth": 1,
        "customCalendarEntity": {
            "customCalendarName": "New_fiscalYear"
        },
        "customCalendarMonths": [
            {
                "month": 1,
                "year": 2017,
                "numberOfDays": 15
            }
        ]
    }
})


// <h2>Description</h2>
// This operation returns the configuration for the email server.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_email_server.htm)

@name("Email Server")
GET "https://{{ServerUrl}}/EmailServer"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
data('<DM2ContentIndexing_CheckCredentialReq mode="{{Mode}}" username="{{userName}}" password="{{password}}" />')


// <h2>Description</h2>
// This operation updates the configuration for the email server.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_email_server.htm)

@name("Email Server")
POST "https://{{ServerUrl}}/EmailServer"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "smtpInfo": {
        "enableSSL": false,
        "smtpServer": "mail.commvault.com",
        "smtpPort": 25,
        "useAuthentication": false,
        "maxMailServerSize": 10240,
        "userInfo": {
            "password": "",
            "userName": ""
        },
        "senderInfo": {
            "senderName": "GreenValley",
            "senderAddress": "cteautoserver@commvault.com"
        }
    }
})


// <h2>Description</h2>
// This operation returns commcell properties.

@name("Commcell properties")
GET "https://{{ServerUrl}}/commcell/properties"
"authtoken": "{{TOKEN}}"
"Accept": "application/json"


// <h2>Description</h2>
// This operation returns the CommServe Cache details

@name("Commserve Cache")
GET "https://{{ServerUrl}}/CommServ/AddRemoveSoftware/CommserveSoftwareCache"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation returns the CommServe Remote Cache details

@name("Commserve Remote Cache")
GET "https://{{ServerUrl}}/CommServ/AddRemoveSoftware/RemoteSoftwareCache"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation is used to update commcell activity control options.
// 
// <h2>Request Body</h2>
// <table width="331">
// <tbody>
// <tr>
// <td>Name</td>
// <td>Description</td>
// </tr>
// 
// <tr>
// <td>activityType</td>
// <td>
// <p>values:<br />- Backup : 1<br />- Restore : 2<br />- Aux Copy : 4<br />- Data Aging : 16<br />- Scheduler : 256<br />- DDB Activity : 2048<br />- Data Verification : 8192<br /></p>
// </td>
// </tr>
// 
// <tr>
// <td>enableActivityType</td>
// <td>
// <p>values:<br />- true<br />- false<br /></p>
// </td>
// </tr>
// 
// <tr>
// <td>enableAfterADelay<br />
// </td>
// <td>
// <p>values:<br />- true : Enable a time delay to auto resume (then use the dateTime section - if not using this please delete that section)</i><br />- false : Do not auto resume<br /></p>
// </td>
// </tr>
// 
// 
// 
// 
// </tbody>
// </table>

@name("Update Commcell Activity Control")
PUT "https://{{ServerUrl}}/commcell/properties"
"AuthToken": "{{TOKEN}}"
"Accept": "{{Accept}}"
data('{
    "commCellInfo": {
        "commCellActivityControlInfo": {
            "activityControlOptions": [
                {
                    "activityType": {{activityType}},
                    "enableAfterADelay": {{enableAfterADelay}},
                    "enableActivityType": {{enableActivityType}},
                    "dateTime": {
                        "TimeZoneID": 59,
                        "time": {{enableTime}}
                    }
                }
            ]
        }
    }
}')


// <h2>Description</h2>
// This operation returns the interface list for a host.
//  [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_interfacelist_host.htm)

@name("Host Interface List")
GET "https://{{ServerUrl}}/CommServ/DataInterfacePairs/HostInterfaces"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
? "hostId"= "2"


// <h2>Description</h2>
// This operation returns the details associated with an HTTP proxy server.
//  [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_http_proxy_server.htm)

@name("HTTP Proxy Server")
GET "https://{{ServerUrl}}/Commcell/InternetOptions/Proxy"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation creates an HTTP proxy server.
//  [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_http_proxy_server.htm)

@name("HTTP Proxy Server")
POST "https://{{ServerUrl}}/Commcell/InternetOptions/Proxy"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "config": {
        "proxyPort": 1025,
        "useProxyAuthentication": true,
        "useHttpProxy": true,
        "proxyServer": "Proxy001",
        "proxyType": 1,
        "proxyCredentials": {
            "password": "cGFzc3dvcmQxMjM=",
            "userName": "proxy_admin"
        },
        "proxyClient": {
            "clientId": 1,
            "clientName": "",
            "type": 0,
            "_type_": 3
        }
    }
})


// This API performs an on demand Copy to Cache operation.

@name("On Demand Copy to Cache")
POST "https://{{ServerUrl}}/CreateTask"
"Authtoken": "{{TOKEN}}"
"Accept": "{{Accept}}"
"Content-Type": "application/json"
json({
    "processinginstructioninfo": {},
    "taskInfo": {
        "associations": [
            {
                "clientName": "",
                "subclientName": "",
                "backupsetName": "",
                "instanceName": "",
                "appName": ""
            }
        ],
        "task": {
            "taskType": 1,
            "initiatedFrom": 2,
            "policyType": 0,
            "taskFlags": {
                "disabled": false
            }
        },
        "subTasks": [
            {
                "subTaskOperation": 1,
                "subTask": {
                    "subTaskType": 1,
                    "operationType": 4019
                },
                "options": {
                    "adminOpts": {
                        "updateOption": {
                            "syncUpdateCaches": true,
                            "copyUpdates": true,
                            "copySoftwareAndUpdates": true,
                            "overwriteNewerContent": false,
                            "clientAndClientGroups": [
                                {
                                    "_type_": 2
                                }
                            ],
                            "downloadUpdatesJobOptions": {
                                "downloadSoftware": true,
                                "updateCachePath": "{{updateCachePath}}",
                                "clientAuth": {
                                    "password": "{{password}}",
                                    "userName": "{{userName}}"
                                }
                            }
                        }
                    },
                    "restoreOptions": {
                        "virtualServerRstOption": {
                            "isBlockLevelReplication": false
                        }
                    },
                    "commonOpts": {
                        "notifyUserOnJobCompletion": false
                    }
                }
            }
        ]
    }
})



