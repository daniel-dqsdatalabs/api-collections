#!/usr/bin/env dothttp

// <h2>Description</h2>
// This operation creates a Plan.

@name("Plan")
POST "https://{{ServerUrl}}/v2/Plan"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "plan": {
        "featureInfo": {
            "edgedriveInfo": {
                "enableNotificationsForShares": true,
                "auditDriveActivities": true,
                "edgeDriveAssociations": {
                    "indexServer": {
                        "clientId": 3,
                        "clientName": "GDPR_IndexServer"
                    }
                }
            }
        },
        "inheritance": {
            "isSealed": true
        },
        "storage": {
            "storagePolicy": {},
            "copy": [
                {
                    "active": 1,
                    "isDefault": 1,
                    "dedupeFlags": {
                        "enableDASHFull": 1,
                        "useGlobalDedupStore": 1,
                        "enableDeduplication": 1,
                        "enableClientSideDedup": 1
                    },
                    "storagePolicyFlags": {
                        "blockLevelDedup": 1
                    },
                    "retentionRules": {
                        "retainBackupDataForDays": 730,
                        "retentionFlags": {
                            "enableDataAging": 1
                        }
                    },
                    "useGlobalPolicy": {
                        "storagePolicyName": "SP_AdminConsole",
                        "storagePolicyId": 3
                    }
                }
            ]
        },
        "laptop": {
            "features": {
                "categoryPermission": {
                    "categoriesPermissionList": [
                        {
                            "permissionId": 146,
                            "permissionName": "Edge Drive",
                            "_type_": 122
                        },
                        {
                            "permissionId": 148,
                            "permissionName": "DLP",
                            "_type_": 122
                        }
                    ]
                }
            },
            "content": {
                "backupContent": [
                    {
                        "idatype": 2,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Windows subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "useVSSForSystemState": false,
                                        "backupRetention": true,
                                        "backupSystemState": false,
                                        "afterDeletionKeepItemsForNDays": 730,
                                        "extendRetentionForNDays": -1,
                                        "archiverRetentionMode": 2,
                                        "enableOnePass": true,
                                        "useVSS": true,
                                        "extendStoragePolicyRetention": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": true,
                                        "archiverRetention": false,
                                        "olderFileVersionsMode": 2,
                                        "backupRetentionMode": 1,
                                        "backupSystemStateforFullBkpOnly": false,
                                        "keepVersions": 5,
                                        "scanOption": 2,
                                        "keepOlderVersionsForNDays": -1,
                                        "diskCleanupRules": {
                                            "fileModifiedTimeOlderThan": 90,
                                            "fileSizeGreaterThan": 1024,
                                            "afterArchivingRule": 1,
                                            "fileCreatedTimeOlderThan": 0,
                                            "maximumFileSize": 0,
                                            "fileAccessTimeOlderThan": 90,
                                            "startCleaningIfLessThan": 50,
                                            "archiveReadOnlyFiles": false,
                                            "stopCleaningIfupto": 80,
                                            "enableArchivingWithRules": true
                                        }
                                    },
                                    "content": [
                                        {
                                            "path": "\\%Desktop%"
                                        },
                                        {
                                            "path": "\\%Documents%"
                                        },
                                        {
                                            "path": "\\%Office%"
                                        },
                                        {
                                            "path": "\\%Pictures%"
                                        },
                                        {
                                            "path": "\\%Image%"
                                        },
                                        {
                                            "excludePath": "\\%Temporary Files (Windows)%"
                                        },
                                        {
                                            "excludePath": "C:\\Program Files"
                                        },
                                        {
                                            "excludePath": "C:\\Program Files (x86)"
                                        },
                                        {
                                            "excludePath": "C:\\Windows"
                                        }
                                    ],
                                    "commonProperties": {
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "idatype": 3,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Linux subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "backupRetention": true,
                                        "afterDeletionKeepItemsForNDays": 730,
                                        "extendRetentionForNDays": -1,
                                        "archiverRetentionMode": 2,
                                        "enableOnePass": true,
                                        "useVSS": true,
                                        "extendStoragePolicyRetention": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": true,
                                        "archiverRetention": false,
                                        "olderFileVersionsMode": 2,
                                        "backupRetentionMode": 1,
                                        "keepVersions": 5,
                                        "scanOption": 1,
                                        "keepOlderVersionsForNDays": -1,
                                        "diskCleanupRules": {
                                            "fileModifiedTimeOlderThan": 90,
                                            "fileSizeGreaterThan": 1024,
                                            "afterArchivingRule": 1,
                                            "fileCreatedTimeOlderThan": 0,
                                            "maximumFileSize": 0,
                                            "fileAccessTimeOlderThan": 90,
                                            "startCleaningIfLessThan": 50,
                                            "archiveReadOnlyFiles": false,
                                            "stopCleaningIfupto": 80,
                                            "enableArchivingWithRules": true
                                        }
                                    },
                                    "content": [
                                        {
                                            "path": "/%Desktop%"
                                        },
                                        {
                                            "path": "/%Documents%"
                                        },
                                        {
                                            "path": "/%Office%"
                                        },
                                        {
                                            "path": "/%Pictures%"
                                        },
                                        {
                                            "path": "/%Image%"
                                        },
                                        {
                                            "excludePath": "/%Temporary Files (Linux)%"
                                        }
                                    ],
                                    "commonProperties": {
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "idatype": 4,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Mac subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "backupRetention": true,
                                        "afterDeletionKeepItemsForNDays": 730,
                                        "extendRetentionForNDays": -1,
                                        "archiverRetentionMode": 2,
                                        "enableOnePass": true,
                                        "useVSS": true,
                                        "extendStoragePolicyRetention": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": true,
                                        "archiverRetention": false,
                                        "olderFileVersionsMode": 2,
                                        "backupRetentionMode": 1,
                                        "keepVersions": 5,
                                        "scanOption": 1,
                                        "keepOlderVersionsForNDays": -1,
                                        "diskCleanupRules": {
                                            "fileModifiedTimeOlderThan": 90,
                                            "fileSizeGreaterThan": 1024,
                                            "afterArchivingRule": 1,
                                            "fileCreatedTimeOlderThan": 0,
                                            "maximumFileSize": 0,
                                            "fileAccessTimeOlderThan": 90,
                                            "startCleaningIfLessThan": 50,
                                            "archiveReadOnlyFiles": false,
                                            "stopCleaningIfupto": 80,
                                            "enableArchivingWithRules": true
                                        }
                                    },
                                    "content": [
                                        {
                                            "path": "/%Desktop%"
                                        },
                                        {
                                            "path": "/%Documents%"
                                        },
                                        {
                                            "path": "/%Office%"
                                        },
                                        {
                                            "path": "/%Pictures%"
                                        },
                                        {
                                            "path": "/%Image%"
                                        },
                                        {
                                            "excludePath": "/%Temporary Files (Mac)%"
                                        }
                                    ],
                                    "commonProperties": {
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "options": {
            "edgeDriveQuota": 0,
            "quota": 0
        },
        "summary": {
            "description": "Laptop_Plan_Test",
            "restrictions": 1,
            "type": 2,
            "slaInterval": 30,
            "rpoInMinutes": 480,
            "subtype": 33554439,
            "planOwner": {
                "userGUID": "AB0335D1-9923-4248-8740-6C36132C857A",
                "userName": "admin",
                "userId": 1
            },
            "plan": {
                "planName": "Laptop_Plan_Test"
            }
        },
        "alerts": {
            "alerts": [
                {
                    "alertName": "No backup for last 4 days",
                    "alertId": 8
                },
                {
                    "alertName": "Restore Job failed",
                    "alertId": 9
                },
                {
                    "alertName": "Edge drive quota alert",
                    "alertId": 10
                },
                {
                    "alertName": "File system quota alert",
                    "alertId": 59
                }
            ]
        },
        "schedule": {
            "task": {
                "taskType": 4,
                "taskFlags": {
                    "isEdgeDrive": false,
                    "isEZOperation": false,
                    "disabled": false
                }
            },
            "subTasks": [
                {
                    "subTask": {
                        "subTaskName": "Incremental Automatic schedule",
                        "subTaskType": 2,
                        "flags": 65536,
                        "operationType": 2,
                        "subTaskId": 1
                    },
                    "pattern": {
                        "freq_subday_interval": 0,
                        "freq_type": 1024,
                        "active_end_time": 0,
                        "name": "Incremental Automatic schedule",
                        "freq_recurrence_factor": 0
                    },
                    "options": {
                        "backupOpts": {
                            "backupLevel": 2,
                            "incLevel": 1,
                            "runIncrementalBackup": true,
                            "cdrOptions": {
                                "incremental": true
                            },
                            "dataOpt": {
                                "useCatalogServer": true,
                                "followMountPoints": true,
                                "daysBetweenSyntheticBackup": 0
                            }
                        },
                        "commonOpts": {
                            "automaticSchedulePattern": {
                                "maxBackupInterval": 24,
                                "ignoreOpWindowPastMaxInterval": false,
                                "minBackupIntervalMinutes": 0,
                                "maxBackupIntervalMinutes": 0,
                                "minSyncInterval": 0,
                                "minBackupInterval": 8,
                                "minSyncIntervalMinutes": 2,
                                "stopIfOnBattery": {
                                    "enabled": false
                                },
                                "acPower": {
                                    "enabled": false
                                },
                                "specfificNetwork": {
                                    "enabled": false,
                                    "ipAddress": {
                                        "subnet": 24,
                                        "address": "0.0.0.0"
                                    }
                                },
                                "stopSleepIfBackUp": {
                                    "enabled": false
                                },
                                "newOrModifiedFile": {
                                    "enabled": true
                                },
                                "wiredNetworkConnection": {
                                    "enabled": false
                                },
                                "minNetworkBandwidth": {
                                    "enabled": false
                                }
                            }
                        }
                    }
                },
                {
                    "subTask": {
                        "subTaskName": "Space Reclamation",
                        "subTaskType": 2,
                        "flags": 0,
                        "operationType": 2,
                        "subTaskId": 1
                    },
                    "pattern": {
                        "freq_subday_interval": 0,
                        "freq_type": 1024,
                        "active_end_time": 0,
                        "name": "Space Reclamation",
                        "freq_recurrence_factor": 0
                    },
                    "options": {
                        "backupOpts": {
                            "truncateLogsOnSource": false,
                            "backupLevel": 4,
                            "incLevel": 0,
                            "runIncrementalBackup": false,
                            "doNotTruncateLog": false,
                            "vsaBackupOptions": {
                                "backupFailedVMsOnly": false
                            },
                            "dataOpt": {
                                "useCatalogServer": true,
                                "followMountPoints": true,
                                "useMultiStream": true,
                                "useMaximumStreams": true,
                                "enforceTransactionLogUsage": false,
                                "skipConsistencyCheck": false,
                                "maxNumberOfStreams": 1,
                                "createNewIndex": true,
                                "daysBetweenSyntheticBackup": 90,
                                "autoCopy": true
                            }
                        },
                        "commonOpts": {
                            "automaticSchedulePattern": {
                                "maxBackupInterval": 72,
                                "ignoreOpWindowPastMaxInterval": true,
                                "minBackupIntervalMinutes": 15,
                                "maxBackupIntervalMinutes": 0,
                                "minSyncInterval": 0,
                                "minBackupInterval": 0,
                                "minSyncIntervalMinutes": 0,
                                "stopIfOnBattery": {
                                    "enabled": false
                                },
                                "acPower": {
                                    "enabled": false
                                },
                                "specfificNetwork": {
                                    "enabled": false,
                                    "ipAddress": {
                                        "subnet": 24,
                                        "address": "0.0.0.0"
                                    }
                                },
                                "stopSleepIfBackUp": {
                                    "enabled": false
                                },
                                "newOrModifiedFile": {
                                    "enabled": false
                                },
                                "wiredNetworkConnection": {
                                    "enabled": false
                                },
                                "minNetworkBandwidth": {
                                    "enabled": false
                                }
                            }
                        }
                    }
                }
            ]
        }
    }
})


// <h2> Description </h2>
// This operation returns a list of plans.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_plan.htm)

@name("View Plans")
GET "https://{{ServerUrl}}/Plan"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation returns a list of Plans.

@name("Plan")
GET "https://{{ServerUrl}}/v2/Plan"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation returns details of a plan.

@name("Plan Details")
GET "https://{{ServerUrl}}/v2/Plan/{{PlanId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation returns information on plan alerts.

@name("Plan Alerts")
GET "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/Alerts"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation returns information on plan features.

@name("Plan Features")
GET "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/Features"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation returns information on plan operations.

@name("Plan Operations")
GET "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/Operations"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation returns information on plan access policies.

@name("Plan Access Policies")
GET "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/AccessPolicies"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// Returns information on a plan for different Entities.

@name("Plans For Entity Id")
GET "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/{{entityId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


@name("Plan Associations")
GET "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/AssociatedEntities"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"


// <h2>Description</h2>
// This operation Updates Security association to a Plan.

@name("Plan Security")
POST "https://{{ServerUrl}}/Security"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
	"entityAssociated": {
		"entity": [
			{
				"entityType": 158,
				"_type_": 150,
				"entityId": {{PlanId}}
			}
		]
	},
	"securityAssociations": {
		"associationsOperationType": 1,
		"associations": [
			{
				"userOrGroup": [
					{
						"userId": 0,
						"_type_": 13,
						"userName": "hkuser"
					}
				],
				"properties": {
					"role": {
						"_type_": 120,
						"roleId": 3,
						"roleName": "View"
					}
				}
			}
		]
	}
}')


// <h2>Description</h2>
// This operation associates Plan to a BackupSet.

@name("Plan BackupSet")
POST "https://{{ServerUrl}}/Backupset/{{backupsetId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
  "backupsetProperties": {
    "planEntity": {
      "_type_": 158,
      "planName": "server plan",
      "planId": {{PlanId}}
    }
  }
}')


// <h2>Description</h2>
// This operation associates Plan to a Subclient.

@name("Plan Subclient")
POST "https://{{ServerUrl}}/Subclient/{{subclientId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
  "subClientProperties": {
    "planEntity": {
      "_type_": 158,
      "planName": "server plan",
      "planId": {{PlanId}}
    }
  }
}')


// <h2>Description</h2>
// This operation Updates a Plan.

@name("Plan")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "summary": {
        "plan": {
            "planName": "Updated Plan Name"
        }
    }
})


// <h2> Description </h2>
// This operation updates the SLA (service level agreement) for a plan.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_plan_sla.htm)

@name("Update Plan SLA")
PUT "https://{{ServerUrl}}/Plan/1/sla"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "summary": {
        "slaInMinutes": 2,
        "plan": {
            "planId": 1
        }
    }
})


// <h2>Description</h2>
// This operation updates associations for users and user groups to a plan.

@name("Plan Users")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/Users"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "userOperationType": 1,
    "users": [
        {
            "sendInvite": true,
            "user": {
                "userName": "hkuser",
                "userId": 21
            }
        }
    ]
})


// <h2>Description</h2>
// This operation updates associations for client to a plan.
// 
// <h2>Request Body</h2>
// <table width="331">
// <tbody>
// <tr>
// <td>Name</td>
// <td>Description</td>
// </tr>
// 
// <tr>
// <td>ArrayId</td>
// <td>
// <p>This is only applicable if using SNAP Plan.</p>
// </td>
// </tr>
// 
// <tr>
// <td>ProcessSubClients</td>
// <td>
// <p>Applicable if associating all subclients to this plan along with client.<br/> Valid values are: <br/> 1-True, 0-False.</p>
// </td>
// </tr>
// 
// <tr>
// <td>ProcessDefaultSubClientsOnly</td>
// <td>
// <p>If AppType is provided, then this option is used to determine if only default subclients of provided apptype should be associated with the plan.<br/> Valid values are: <br/> 1-True, 0-False.</p>
// </td>
// </tr>
// 
// <tr>
// <td>IncludeAllAppTypes</td>
// <td>
// <p>This suggest if all apptypes of client should be expanded with subclients for plan association.<br/> Valid values are:<br/> 1-True, 0-False</p>
// </td>
// </tr>
// 
// <tr>
// <td>AppIds</td>
// <td>
// <p>To enable specific AppIds.<br/> Valid values are:<br/> 1-True, 0-False.</p>
// </td>
// </tr>
// 
// <tr>
// <td>AppIds</td>
// <td>
// <p>Sub Param - Specify apptypes.</p>
// </td>
// </tr>
// 
// <tr>
// <td>IncludeSubClientIds</td>
// <td>
// <p>Valid values are:<br/> 1-True, 0-False.</p>
// </td>
// </tr>
// 
// <tr>
// <td>SubClientId</td>
// <td>
// <p>Subclient Id plan association.</p>
// </td>
// </tr>
// 
// <tr>
// <td>clientOperationType</td>
// <td>
// <p>Valid values are:<br/> 1 – OVERWRITE, 2 -  ADD, 3 – DELETE, 4 – CLEAR.</p>
// </td>
// </tr>
// 
// </tbody>
// </table>

@name("Plan Clients")
PUT "https://{{ServerUrl}}/Plan/{{PlanId}}/Clients"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
  "clients": [
    {
      "clientId": {{clientId}}
    }
  ],
  "additonalTasks": [
    {
      "value": "2",
      "key": "ArrayId"
    },
    {
      "value": "0",
      "key": "ProcessSubClients"
    },
    {
      "value": "0",
      "key": "ProcessDefaultSubClientsOnly"
    },
    {
      "value": "0",
      "key": "IncludeAllAppTypes"
    },
    {
      "value": "0",
      "key": "AppIds",
      "parameters": [
        {
          "value": "106",
          "key": "AppIds"
        }
      ]
    },
    {
      "value": "0",
      "key": "IncludeSubClientIds",
      "parameters": [
        {
          "value": "25",
          "key": "SubClientId"
        },
        {
          "value": "26",
          "key": "SubClientId"
        },
        {
          "value": "27",
          "key": "SubClientId"
        }
      ]
    }
  ],
  "plan": {
    "planId": {{PlanId}}
  }
}')


// <h2>Description</h2>
// This operation updates options for a Plan.

@name("Plan Options")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/Options"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "quota": 3
})


// <h2>Description</h2>
// This operation updates Alerts for a Plan.

@name("Plan Alerts")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/Alerts"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
json({
    "alertOperationType": 1,
    "alert": [
        {
            "alertId": 6
        },
        {
            "alertId": 7
        }
    ]
})


// <h2>Description</h2>
// This operation updates Storage Pool properties for a Plan.

@name("Plan Storage Modify")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/Storage/Modify"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "PrimaryRetentionInDays": [
        "30"
    ],
    "SecondaryRetentionInDays": [
        "30"
    ]
})


// <h2>Description</h2>
// Enables FileSystem Addon with default content or custom content for a plan.
// Enabling the File System addon for a server plan (which does not have the addon enabled during creation), will create three new subclient policies for each of the three agents, Windows, Linux and Mac.

@name("Enable FileSystem Addon")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/AddOn/FileSystem/Action/Enable"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"



// <h2>Description</h2>
// Disables FileSystem Addon for a plan

@name("Disable FileSystem Addon")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/AddOn/FileSystem/Action/Disable"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"



// <h2>Description</h2>
// This operation enables the server plan database backup options.

@name("Enable Database Add-on")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/AddOn/Database/Action/Enable"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"



// <h2>Description</h2>
// This operation disables the server plan database backup options. This operation does not delete the database add-on options for a plan.

@name("Disable Database Add-on")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/AddOn/Database/Action/Disable"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"



// <h2>Description</h2>
// Enables Snap Addon for a plan

@name("Enable Snap Addon")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/AddOn/Snap/Action/Enable"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"



// <h2>Description</h2>
// Disables Snap Addon for a plan

@name("Disable Snap Addon")
PUT "https://{{ServerUrl}}/v2/Plan/{{PlanId}}/AddOn/Snap/Action/Disable"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"



// <h2>Description</h2>
// This operation creates a plan using an existing schedule policy.
// Note that the taskId attribute specified in the schedule.task attribute is an existing schedule policy that is being used during the creation of the plan.

@name("Create Plan using existing schedule policy")
POST "https://{{ServerUrl}}/v2/Plan"
"Authtoken": "{{Token}}"
"Accept": "application/json"
"Content-Type": "application/json"
data('{  
   "plan":{  
      "summary":{  
         "slaInMinutes":240,
         "restrictions":1,
         "type":2,
         "subtype":33554437,
         "plan":{  
            "planName":"NewManPlan"
         }
      },
      "storage":{
         "copy":[  
            {  
               "active":1,
               "isDefault":1,
               "dedupeFlags":{  
                  "enableDASHFull":1,
                  "useGlobalDedupStore":1,
                  "enableDeduplication":1,
                  "enableClientSideDedup":1
               },
               "retentionRules":{  
                  "retainBackupDataForDays":30,
                  "retentionFlags":{  
                     "enableDataAging":1
                  }
               },
               "useGlobalPolicy":{  
                  "storagePolicyName":"{{storagePoolName}}",
                  "storagePolicyId":{{storagePoolId}}
               }
            }
         ]
      },
      "schedule":{  
         "task":{  
            "taskId":{{existingSchedulePolicy}}
         }
      }
   }
}')


// <h2>Description</h2>
// This operation associates an existing schedule policy to an existing plan.

@name("Associate existing schedule policy to existing plan")
PUT "https://{{ServerUrl}}/plan/{{planId}}"
"Accept": "application/json"
"Content-Type": "application/json"
"Authtoken": "{{Token}}"
json({
    "summary": {
        "plan": {
            "planId": 2
        }
    },
    "schedule": {
        "task": {
            "taskId": 1580
        }
    }
})


// <h2>Description</h2>
// This operation associates a server plan to a SQL Server Instance.

@name("Associate Plan to an Instance")
POST "https://{{ServerUrl}}/instance/{{InstanceId}}"
"Accept": "{{Accept}}"
"Content-Type": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
data('{
   "instanceProperties":{
      "description":"",
      "version":"12.0.2000.8",
      "instance":{
         "clientId":2,
         "clientName":"jranaautovm1",
         "instanceName":"JRANAAUTOVM1\\COMMVAULT",
         "appName":"SQL Server",
         "instanceId":19,
         "applicationId":81,
         "instanceGUID":"368BA657-3CFC-40FF-B291-A15AE6AE96EC"
      },
      "planEntity":{
         "planId":114
      }
   },
   "association":{
      "entity":[
         {
	         "clientId":2,
	         "clientName":"jranaautovm1",
	         "instanceName":"JRANAAUTOVM1\\COMMVAULT",
	         "appName":"SQL Server",
	         "instanceId":19,
	         "applicationId":81,
	         "instanceGUID":"368BA657-3CFC-40FF-B291-A15AE6AE96EC"
         }
      ]
   }
}')


// <h2> Description </h2>
// Enables inheritance on a base plan to create derived plans out of it. Sets all inheritable values to Override optional.
// 
// [_More Details_](https://documentation.commvault.com/commvault/v11_sp20/article?p=108188.htm)
// 
// 
// <h2>Request Body</h2>
// <table width="331">
// <tbody>
// <tr>
// <td>Name</td>
// <td>Description</td>
// </tr>
// 
// <tr>
// <td>basePlanId</td>
// <td>
// <p>Plan Id of the base plan from which derived plans are to be created</p>
// </td>
// </tr> 
// 
// </tbody>
// </table>

@name("Enable Plan inheritance")
PUT "https://{{ServerUrl}}/v2/Plan/{{basePlanId}}"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
    "inheritance": {
        "isSealed": false,
        "privateEntitiesOperationType": 4,
        "enforcedEntitiesOperationType": 4
    },
    "summary": {
        "plan": {
            "planId": {{basePlanId}}
        }
    }
}')


// <h2> Description </h2>
// This operation creates a derived plan by overriding the base plan's RPO, inheriting the storage and backup content of the base plan.
// 
// 
// <h2>Request Body</h2>
// <table width="331">
// <tbody>
// <tr>
// <td>Name</td>
// <td>Description</td>
// </tr>
// 
// <tr>
// <td>storagePolicyName</td>
// <td>
// <p>Name of the base plan's storage pool</p>
// </td>
// </tr>
// 
// <tr>
// <td>storagePolicyId</td>
// <td>
// <p>Storage pool ID of the base plan's storage pool</p>
// </td>
// </tr>
// 
// <tr>
// <td>description</td>
// <td>
// <p>Derived plan's description.</p>
// </td>
// </tr>
// 
// <tr>
// <td>rpoInMinutes</td>
// <td>
// <p>RPO value in minutes for the derived plan</p>
// </td>
// </tr>
// 
// <tr>
// <td>planId</td>
// <td>
// <p>The base plan's ID</p>
// </td>
// </tr>
// 
// <tr>
// <td>planName</td>
// <td>
// <p>Name of the derived plan to be created</p>
// </td>
// </tr>
// 
// 
// 
// </tbody>
// </table>
// 
// 
// Note:
// [_More Details_](https://docs.commvault.com/commvault/v11/article?p=48814.htm)
// on fields within schedule pattern
// 
// 

@name("Create derived plan with overridden RPO")
POST "https://{{ServerUrl}}/v2/Plan"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
    "plan": {
        "definesStorage": {
            "definesEntity": false,
            "overrideEntity": 0
        },
        "featureInfo": {},
        "inheritance": {
            "isSealed": true
        },
        "storage": {
            "enableBackupCopy": true,
            "copy": [
                {
                    "copyType": 1,
                    "active": 1,
                    "isDefault": 1,
                    "dedupeFlags": {
                        "enableDASHFull": 1,
                        "useGlobalDedupStore": 1,
                        "enableDeduplication": 1,
                        "enableClientSideDedup": 1
                    },
                    "storagePolicyFlags": {
                        "blockLevelDedup": 1
                    },
                    "retentionRules": {
                        "retainBackupDataForCycles": 1,
                        "jobs": 0,
                        "retainArchiverDataForDays": -1,
                        "retainBackupDataForDays": 30,
                        "retentionFlags": {
                            "enableDataAging": 1,
                            "jobBasedRetention": 0
                        }
                    },
                    "StoragePolicyCopy": {
                        "copyName": "Primary"
                    },
                    "useGlobalPolicy": {
                        "storagePolicyName": "{{baseStoragePoolname}}",
                        "storagePolicyId": {{baseStoragePoolId}}
                    }
                },
                {
                    "copyType": 3,
                    "active": 1,
                    "isDefault": 0,
                    "isSnapCopy": 1,
                    "copyPrecedence": 1,
                    "retentionRules": {
                        "retainBackupDataForCycles": 1,
                        "jobs": 8,
                        "retainArchiverDataForDays": -1,
                        "retainBackupDataForDays": 15,
                        "retentionFlags": {
                            "jobBasedRetention": 1
                        }
                    }
                }
            ]
        },
        "definesSchedule": {
            "definesEntity": true,
            "overrideEntity": 0
        },
        "laptop": {
            "content": {
                "backupContent": [
                    {
                        "idatype": 2,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Windows subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "useVSSForSystemState": true,
                                        "backupSystemState": true,
                                        "isTrueUpOptionEnabledForFS": true,
                                        "runTrueUpJobAfterDaysForFS": 30,
                                        "useVSS": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": false,
                                        "backupSystemStateforFullBkpOnly": false,
                                        "scanOption": 2
                                    },
                                    "content": [
                                        {
                                            "path": "\\"
                                        }
                                    ],
                                    "commonProperties": {
                                        "numberOfBackupStreams": 4,
                                        "readBuffersize": 512,
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "idatype": 3,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Linux subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "isTrueUpOptionEnabledForFS": true,
                                        "runTrueUpJobAfterDaysForFS": 30,
                                        "useVSS": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": false,
                                        "scanOption": 1
                                    },
                                    "content": [
                                        {
                                            "path": "/"
                                        }
                                    ],
                                    "commonProperties": {
                                        "numberOfBackupStreams": 4,
                                        "readBuffersize": 512,
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "idatype": 4,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Mac subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "isTrueUpOptionEnabledForFS": true,
                                        "runTrueUpJobAfterDaysForFS": 30,
                                        "useVSS": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": false,
                                        "scanOption": 1
                                    },
                                    "content": [
                                        {
                                            "path": "/"
                                        }
                                    ],
                                    "commonProperties": {
                                        "numberOfBackupStreams": 4,
                                        "readBuffersize": 512,
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "definesSubclientContentMac": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientContentLin": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientWin": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientContentWin": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientMac": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientLin": {
                    "definesEntity": false,
                    "overrideEntity": 0
                }
            }
        },
        "database": {
            "slaInMinutes": 240,
            "rpoInMinutes": 240,
            "scheduleLog": {
                "task": {
                    "description": "Automatic schedules for the log backup",
                    "taskType": 4,
                    "policyType": 0,
                    "taskName": "Log schedule policy for the database clients",
                    "taskFlags": {
                        "isEdgeDrive": false
                    }
                },
                "appGroup": {
                    "appGroups": [
                        {
                            "appGroupName": "APPGRP_Sybase",
                            "appGroupId": 13
                        },
                        {
                            "appGroupName": "APPGRP_POSTGRES",
                            "appGroupId": 114
                        },
                        {
                            "appGroupName": "APPGRP_SAP_HANA",
                            "appGroupId": 129
                        },
                        {
                            "appGroupName": "APPGRP_MySql",
                            "appGroupId": 100
                        },
                        {
                            "appGroupName": "APPGRP_DB2",
                            "appGroupId": 11
                        },
                        {
                            "appGroupName": "APPGRP_INFORMIX",
                            "appGroupId": 111
                        },
                        {
                            "appGroupName": "APPGRP_SAP_FOR_ORACLE",
                            "appGroupId": 101
                        },
                        {
                            "appGroupName": "APPGRP_SQL_POLICY",
                            "appGroupId": 90
                        },
                        {
                            "appGroupName": "APPGRP_AppTypeIndexedBased",
                            "appGroupId": 83
                        },
                        {
                            "appGroupName": "APPGRP_NotesDb",
                            "appGroupId": 12
                        },
                        {
                            "appGroupName": "PACKAGEGRP_DB",
                            "appGroupId": 10
                        },
                        {
                            "appGroupName": "APPGRP_ORACLE",
                            "appGroupId": 10
                        },
                        {
                            "appGroupName": "APPGRP_XchangeDB",
                            "appGroupId": 14
                        },
                        {
                            "appGroupName": "APPGRP_NotesDb_Transaction_Log",
                            "appGroupId": 104
                        },
                        {
                            "appGroupName": "APPGRP_DISTRIBUTEDAPPS",
                            "appGroupId": 134
                        }
                    ]
                },
                "subTasks": [
                    {
                        "subTask": {
                            "subTaskName": "Incremental automatic schedule for logs",
                            "subTaskType": 2,
                            "flags": 65536,
                            "operationType": 2
                        },
                        "pattern": {
                            "freq_type": 1024,
                            "timeZone": {}
                        },
                        "options": {
                            "backupOpts": {
                                "truncateLogsOnSource": false,
                                "sybaseSkipFullafterLogBkp": false,
                                "backupLevel": 2,
                                "incLevel": 1,
                                "runIncrementalBackup": true,
                                "cumulative": false,
                                "doNotTruncateLog": false,
                                "dataOpt": {
                                    "useCatalogServer": true,
                                    "followMountPoints": true,
                                    "enforceTransactionLogUsage": false,
                                    "skipConsistencyCheck": false,
                                    "daysBetweenSyntheticBackup": 7,
                                    "autoCopy": false
                                },
                                "oracleOptions": {
                                    "deleteArchLogOptions": {
                                        "backupArchiveLogCriteria": 0
                                    },
                                    "backupArchLogOptions": {
                                        "backupArchiveLogCriteria": 7,
                                        "startLSN": 1,
                                        "endLSN": 1,
                                        "backupArchiveLog": true
                                    }
                                },
                                "distAppsBackupOptions": {
                                    "runLogBkp": true,
                                    "runDataBkp": false
                                }
                            },
                            "commonOpts": {
                                "perfJobOpts": {},
                                "automaticSchedulePattern": {
                                    "maxBackupInterval": 4,
                                    "sweepStartTime": 86400,
                                    "useStorageSpaceFromMA": false,
                                    "minBackupIntervalMinutes": 15,
                                    "maxBackupIntervalMinutes": 0,
                                    "minBackupInterval": 0,
                                    "logFileNum": {
                                        "threshold": 50,
                                        "enabled": true
                                    },
                                    "diskUsedPercent": {
                                        "threshold": 80,
                                        "enabled": true
                                    },
                                    "logPercent": {
                                        "threshold": 80,
                                        "enabled": true
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "options": {
            "quota": 0
        },
        "summary": {
            "description": "{{planDescription}}",
            "type": 2,
            "slaInterval": 0,
            "subtype": 33554437,
            "restrictions": 1,
            "rpoInMinutes": {{overriddenRPO}},
            "parent": {
                "planId": {{basePlanId}}
            },
            "addons": {
                "database": true,
                "filesystem": true,
                "snap": true
            },
            "plan": {
                "planName": "{{derivedPlanName}}"
            },
            "planOwner": {
                "userGUID": "F6A4DD9F-658A-47C8-B691-49DB4EEE000E",
                "userName": "admin",
                "userId": 1
            }
        },
        "schedule": {
            "task": {
                "taskType": 4,
                "taskFlags": {
                    "isEdgeDrive": false,
                    "isEZOperation": false,
                    "disabled": false
                }
            },
            "subTasks": [
                {
                    "subTask": {
                        "subTaskName": "Incremental backup schedule",
                        "subTaskType": 2,
                        "flags": 65536,
                        "operationType": 2,
                        "subTaskId": 1
                    },
                    "pattern": {
                        "active_end_occurence": 0,
                        "freq_subday_interval": 0,
                        "freq_type": 4,
                        "description": "{{overriddenRPOdescription}}",
                        "active_start_time": {{overriddenStartTIme}},
                        "active_start_date": 0,
                        "freq_interval": {{overriddenBackupFrequency}},
                        "name": "Incremental backup schedule",
                        "freq_recurrence_factor": {{overriddenBackupFrequency}},
                        "timeZone": {
                            "TimeZoneID": 1001
                        }
                    },
                    "options": {
                        "backupOpts": {
                            "sybaseSkipFullafterLogBkp": false,
                            "backupLevel": 2,
                            "incLevel": 1,
                            "runIncrementalBackup": true,
                            "autoConvertBackupLevel": true,
                            "isSpHasInLineCopy": false,
                            "runSILOBackup": false,
                            "doNotTruncateLog": false,
                            "dataOpt": {
                                "daysBetweenSyntheticBackup": 0
                            }
                        }
                    }
                },
                {
                    "subTask": {
                        "subTaskName": "Synthetic Fulls",
                        "subTaskType": 2,
                        "flags": 0,
                        "operationType": 2,
                        "subTaskId": 1
                    },
                    "pattern": {
                        "freq_subday_interval": 0,
                        "freq_type": 1024,
                        "description": "Based on automatic schedule settings",
                        "active_end_time": 0,
                        "name": "Synthetic Fulls",
                        "freq_recurrence_factor": 0,
                        "timeZone": {
                            "TimeZoneID": 1000
                        }
                    },
                    "options": {
                        "backupOpts": {
                            "truncateLogsOnSource": false,
                            "backupLevel": 4,
                            "incLevel": 0,
                            "runIncrementalBackup": false,
                            "doNotTruncateLog": false,
                            "vsaBackupOptions": {
                                "backupFailedVMsOnly": false
                            },
                            "dataOpt": {
                                "useCatalogServer": true,
                                "followMountPoints": true,
                                "useMultiStream": true,
                                "useMaximumStreams": true,
                                "enforceTransactionLogUsage": false,
                                "skipConsistencyCheck": false,
                                "maxNumberOfStreams": 1,
                                "createNewIndex": true,
                                "daysBetweenSyntheticBackup": 30,
                                "autoCopy": true
                            }
                        },
                        "commonOpts": {
                            "automaticSchedulePattern": {
                                "maxBackupInterval": 72,
                                "ignoreOpWindowPastMaxInterval": true,
                                "minBackupIntervalMinutes": 15,
                                "maxBackupIntervalMinutes": 0,
                                "minSyncInterval": 0,
                                "minBackupInterval": 0,
                                "minSyncIntervalMinutes": 0,
                                "stopIfOnBattery": {
                                    "enabled": false
                                },
                                "acPower": {
                                    "enabled": false
                                },
                                "specfificNetwork": {
                                    "enabled": false,
                                    "ipAddress": {
                                        "subnet": 24,
                                        "address": "0.0.0.0"
                                    }
                                },
                                "stopSleepIfBackUp": {
                                    "enabled": false
                                },
                                "newOrModifiedFile": {
                                    "enabled": false
                                },
                                "wiredNetworkConnection": {
                                    "enabled": false
                                },
                                "minNetworkBandwidth": {
                                    "enabled": false
                                }
                            }
                        }
                    }
                }
            ]
        },
        "exchange": {},
        "snapInfo": {
            "noOfRecoveryPoints": 8,
            "snapToTapeSchedule": {
                "subTask": {
                    "subTaskOrder": 0,
                    "subTaskName": "Snap to tape",
                    "subTaskType": 1,
                    "flags": 0,
                    "operationType": 4028
                },
                "pattern": {
                    "freq_type": 4096,
                    "active_start_time": 79200,
                    "freq_interval": 240,
                    "name": "Automatic backup copy",
                    "freq_recurrence_factor": 1,
                    "timeZone": {
                        "TimeZoneName": "Client Time Zone"
                    }
                },
                "options": {
                    "backupOpts": {
                        "sybaseSkipFullafterLogBkp": false,
                        "backupLevel": 0,
                        "runIncrementalBackup": true,
                        "isSpHasInLineCopy": false,
                        "runSILOBackup": false,
                        "doNotTruncateLog": false,
                        "dataOpt": {
                            "daysBetweenSyntheticBackup": 0
                        },
                        "mediaOpt": {
                            "markMediaFullOnSuccess": false,
                            "startNewMedia": false,
                            "auxcopyJobOption": {
                                "autoCopy": true
                            }
                        }
                    },
                    "adminOpts": {
                        "snapToTapeOption": {
                            "allowMaximum": true
                        }
                    }
                }
            }
        }
    }
}')


// <h2> Description </h2>
// This operation creates a derived plan by overriding the base plan's RPO, overriding the storage and inheriting backup content of the base plan.
// 
// <h2>Request Body</h2>
// <table width="331">
// <tbody>
// <tr>
// <td>Name</td>
// <td>Description</td>
// </tr>
// 
// <tr>
// <td>storagePolicyName</td>
// <td>
// <p>Name of the storage pool for creating derived plan</p>
// </td>
// </tr>
// 
// <tr>
// <td>storagePolicyId</td>
// <td>
// <p>Storage pool ID for creating the derived plan</p>
// </td>
// </tr>
// 
// <tr>
// <td>retainBackupDataForDays</td>
// <td>
// <p>Storage pool's primary copy's retention for the derived plan</p>
// </td>
// </tr>
// 
// <tr>
// <td>copyName</td>
// <td>
// <p>Storage pool's primary copy name for the derived plan</p>
// </td>
// </tr>
// 
// <tr>
// <td>description</td>
// <td>
// <p>Derived plan's description</p>
// </td>
// </tr>
// 
// <tr>
// <td>rpoInMinutes</td>
// <td>
// <p>RPO value in minutes for the derived plan</p>
// </td>
// </tr>
// 
// <tr>
// <td>planId</td>
// <td>
// <p>The base plan's ID</p>
// </td>
// </tr>
// 
// <tr>
// <td>planName</td>
// <td>
// <p>Name of the derived plan to be created</p>
// </td>
// </tr>
// 
// 
// </tbody>
// </table>
// 
// 
// Note:
// [_More Details_](https://docs.commvault.com/commvault/v11/article?p=48814.htm) on fields within schedule pattern
// 
// 

@name("Create derived plan with overridden RPO and storage")
POST "https://{{ServerUrl}}/v2/Plan"
"Accept": "application/json"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
    "plan": {
        "definesStorage": {
            "definesEntity": true,
            "overrideEntity": 0
        },
        "featureInfo": {},
        "inheritance": {
            "isSealed": true
        },
        "storage": {
            "enableBackupCopy": true,
            "copy": [
                {
                    "copyType": 1,
                    "active": 1,
                    "isDefault": 1,
                    "dedupeFlags": {
                        "enableDASHFull": 1,
                        "useGlobalDedupStore": 1,
                        "enableDeduplication": 1,
                        "enableClientSideDedup": 1
                    },
                    "storagePolicyFlags": {
                        "blockLevelDedup": 1
                    },
                    "retentionRules": {
                        "retainArchiverDataForDays": -1,
                        "retainBackupDataForDays": {{overriddenCopyRetention}},
                        "retentionFlags": {
                            "enableDataAging": 1
                        }
                    },
                    "StoragePolicyCopy": {
                        "copyName": "{{overriddenCopyName}}"
                    },
                    "useGlobalPolicy": {
                        "storagePolicyName": "{{overriddenStoragePoolName}}",
                        "storagePolicyId": {{overriddenStoragePoolId}}
                    }
                },
                {
                    "copyType": 3,
                    "active": 1,
                    "isDefault": 0,
                    "isSnapCopy": 1,
                    "copyPrecedence": 1,
                    "retentionRules": {
                        "retainBackupDataForCycles": 1,
                        "jobs": 8,
                        "retainArchiverDataForDays": -1,
                        "retainBackupDataForDays": 15,
                        "retentionFlags": {
                            "jobBasedRetention": 1
                        }
                    }
                }
            ]
        },
        "definesSchedule": {
            "definesEntity": true,
            "overrideEntity": 0
        },
        "laptop": {
            "content": {
                "backupContent": [
                    {
                        "idatype": 2,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Windows subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "useVSSForSystemState": true,
                                        "backupSystemState": true,
                                        "isTrueUpOptionEnabledForFS": true,
                                        "runTrueUpJobAfterDaysForFS": 30,
                                        "useVSS": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": false,
                                        "backupSystemStateforFullBkpOnly": false,
                                        "scanOption": 2
                                    },
                                    "content": [
                                        {
                                            "path": "\\"
                                        }
                                    ],
                                    "commonProperties": {
                                        "numberOfBackupStreams": 4,
                                        "readBuffersize": 512,
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "idatype": 3,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Linux subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "isTrueUpOptionEnabledForFS": true,
                                        "runTrueUpJobAfterDaysForFS": 30,
                                        "useVSS": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": false,
                                        "scanOption": 1
                                    },
                                    "content": [
                                        {
                                            "path": "/"
                                        }
                                    ],
                                    "commonProperties": {
                                        "numberOfBackupStreams": 4,
                                        "readBuffersize": 512,
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "idatype": 4,
                        "subClientPolicy": {
                            "backupSetEntity": {
                                "backupsetName": "Mac subclient policy"
                            },
                            "subClientList": [
                                {
                                    "contentOperationType": 1,
                                    "fsSubClientProp": {
                                        "isTrueUpOptionEnabledForFS": true,
                                        "runTrueUpJobAfterDaysForFS": 30,
                                        "useVSS": true,
                                        "keepAtLeastPreviousVersions": 5,
                                        "catalogACL": false,
                                        "scanOption": 1
                                    },
                                    "content": [
                                        {
                                            "path": "/"
                                        }
                                    ],
                                    "commonProperties": {
                                        "numberOfBackupStreams": 4,
                                        "readBuffersize": 512,
                                        "storageDevice": {
                                            "softwareCompression": 2,
                                            "deDuplicationOptions": {
                                                "enableDeduplication": true,
                                                "generateSignature": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "definesSubclientContentMac": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientContentLin": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientWin": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientContentWin": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientMac": {
                    "definesEntity": false,
                    "overrideEntity": 0
                },
                "definesSubclientLin": {
                    "definesEntity": false,
                    "overrideEntity": 0
                }
            }
        },
        "database": {
            "slaInMinutes": 240,
            "rpoInMinutes": 240,
            "scheduleLog": {
                "task": {
                    "description": "Automatic schedules for the log backup",
                    "taskType": 4,
                    "policyType": 0,
                    "taskName": "Log schedule policy for the database clients",
                    "taskFlags": {
                        "isEdgeDrive": false
                    }
                },
                "appGroup": {
                    "appGroups": [
                        {
                            "appGroupName": "APPGRP_Sybase",
                            "appGroupId": 13
                        },
                        {
                            "appGroupName": "APPGRP_POSTGRES",
                            "appGroupId": 114
                        },
                        {
                            "appGroupName": "APPGRP_SAP_HANA",
                            "appGroupId": 129
                        },
                        {
                            "appGroupName": "APPGRP_MySql",
                            "appGroupId": 100
                        },
                        {
                            "appGroupName": "APPGRP_DB2",
                            "appGroupId": 11
                        },
                        {
                            "appGroupName": "APPGRP_INFORMIX",
                            "appGroupId": 111
                        },
                        {
                            "appGroupName": "APPGRP_SAP_FOR_ORACLE",
                            "appGroupId": 101
                        },
                        {
                            "appGroupName": "APPGRP_SQL_POLICY",
                            "appGroupId": 90
                        },
                        {
                            "appGroupName": "APPGRP_AppTypeIndexedBased",
                            "appGroupId": 83
                        },
                        {
                            "appGroupName": "APPGRP_NotesDb",
                            "appGroupId": 12
                        },
                        {
                            "appGroupName": "PACKAGEGRP_DB",
                            "appGroupId": 10
                        },
                        {
                            "appGroupName": "APPGRP_ORACLE",
                            "appGroupId": 10
                        },
                        {
                            "appGroupName": "APPGRP_XchangeDB",
                            "appGroupId": 14
                        },
                        {
                            "appGroupName": "APPGRP_NotesDb_Transaction_Log",
                            "appGroupId": 104
                        },
                        {
                            "appGroupName": "APPGRP_DISTRIBUTEDAPPS",
                            "appGroupId": 134
                        }
                    ]
                },
                "subTasks": [
                    {
                        "subTask": {
                            "subTaskName": "Incremental automatic schedule for logs",
                            "subTaskType": 2,
                            "flags": 65536,
                            "operationType": 2
                        },
                        "pattern": {
                            "freq_type": 1024,
                            "timeZone": {}
                        },
                        "options": {
                            "backupOpts": {
                                "truncateLogsOnSource": false,
                                "sybaseSkipFullafterLogBkp": false,
                                "backupLevel": 2,
                                "incLevel": 1,
                                "runIncrementalBackup": true,
                                "cumulative": false,
                                "doNotTruncateLog": false,
                                "dataOpt": {
                                    "useCatalogServer": true,
                                    "followMountPoints": true,
                                    "enforceTransactionLogUsage": false,
                                    "skipConsistencyCheck": false,
                                    "daysBetweenSyntheticBackup": 7,
                                    "autoCopy": false
                                },
                                "oracleOptions": {
                                    "deleteArchLogOptions": {
                                        "backupArchiveLogCriteria": 0
                                    },
                                    "backupArchLogOptions": {
                                        "backupArchiveLogCriteria": 7,
                                        "startLSN": 1,
                                        "endLSN": 1,
                                        "backupArchiveLog": true
                                    }
                                },
                                "distAppsBackupOptions": {
                                    "runLogBkp": true,
                                    "runDataBkp": false
                                }
                            },
                            "commonOpts": {
                                "perfJobOpts": {},
                                "automaticSchedulePattern": {
                                    "maxBackupInterval": 4,
                                    "sweepStartTime": 86400,
                                    "useStorageSpaceFromMA": false,
                                    "minBackupIntervalMinutes": 15,
                                    "maxBackupIntervalMinutes": 0,
                                    "minBackupInterval": 0,
                                    "logFileNum": {
                                        "threshold": 50,
                                        "enabled": true
                                    },
                                    "diskUsedPercent": {
                                        "threshold": 80,
                                        "enabled": true
                                    },
                                    "logPercent": {
                                        "threshold": 80,
                                        "enabled": true
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "options": {
            "quota": 0
        },
        "summary": {
            "description": "{{planDescription}}",
            "type": 2,
            "slaInterval": 0,
            "subtype": 33554437,
            "restrictions": 1,
            "rpoInMinutes": {{overriddenRPO}},
            "parent": {
                "planId": {{basePlanId}}
            },
            "addons": {
                "database": true,
                "filesystem": true,
                "snap": true
            },
            "plan": {
                "planName": "{{derivedPlanName}}"
            },
            "planOwner": {
                "userGUID": "F6A4DD9F-658A-47C8-B691-49DB4EEE000E",
                "userName": "admin",
                "userId": 1
            }
        },
        "schedule": {
            "task": {
                "taskType": 4,
                "taskFlags": {
                    "isEdgeDrive": false,
                    "isEZOperation": false,
                    "disabled": false
                }
            },
            "subTasks": [
                {
                    "subTask": {
                        "subTaskName": "Incremental backup schedule",
                        "subTaskType": 2,
                        "flags": 65536,
                        "operationType": 2,
                        "subTaskId": 1
                    },
                    "pattern": {
                        "active_end_occurence": 0,
                        "freq_subday_interval": 0,
                        "freq_type": 4,
                        "description": "{{overriddenRPOdescription}}",
                        "active_start_time": {{overriddenStartTIme}},
                        "active_start_date": 0,
                        "freq_interval": {{overriddenBackupFrequency}},
                        "name": "Incremental backup schedule",
                        "freq_recurrence_factor": {{overriddenBackupFrequency}},
                        "timeZone": {
                            "TimeZoneID": 1001
                        }
                    },
                    "options": {
                        "backupOpts": {
                            "sybaseSkipFullafterLogBkp": false,
                            "backupLevel": 2,
                            "incLevel": 1,
                            "runIncrementalBackup": true,
                            "autoConvertBackupLevel": true,
                            "isSpHasInLineCopy": false,
                            "runSILOBackup": false,
                            "doNotTruncateLog": false,
                            "dataOpt": {
                                "daysBetweenSyntheticBackup": 0
                            }
                        }
                    }
                },
                {
                    "subTask": {
                        "subTaskName": "Synthetic Fulls",
                        "subTaskType": 2,
                        "flags": 0,
                        "operationType": 2,
                        "subTaskId": 1
                    },
                    "pattern": {
                        "freq_subday_interval": 0,
                        "freq_type": 1024,
                        "description": "Based on automatic schedule settings",
                        "active_end_time": 0,
                        "name": "Synthetic Fulls",
                        "freq_recurrence_factor": 0,
                        "timeZone": {
                            "TimeZoneID": 1000
                        }
                    },
                    "options": {
                        "backupOpts": {
                            "truncateLogsOnSource": false,
                            "backupLevel": 4,
                            "incLevel": 0,
                            "runIncrementalBackup": false,
                            "doNotTruncateLog": false,
                            "vsaBackupOptions": {
                                "backupFailedVMsOnly": false
                            },
                            "dataOpt": {
                                "useCatalogServer": true,
                                "followMountPoints": true,
                                "useMultiStream": true,
                                "useMaximumStreams": true,
                                "enforceTransactionLogUsage": false,
                                "skipConsistencyCheck": false,
                                "maxNumberOfStreams": 1,
                                "createNewIndex": true,
                                "daysBetweenSyntheticBackup": 30,
                                "autoCopy": true
                            }
                        },
                        "commonOpts": {
                            "automaticSchedulePattern": {
                                "maxBackupInterval": 72,
                                "ignoreOpWindowPastMaxInterval": true,
                                "minBackupIntervalMinutes": 15,
                                "maxBackupIntervalMinutes": 0,
                                "minSyncInterval": 0,
                                "minBackupInterval": 0,
                                "minSyncIntervalMinutes": 0,
                                "stopIfOnBattery": {
                                    "enabled": false
                                },
                                "acPower": {
                                    "enabled": false
                                },
                                "specfificNetwork": {
                                    "enabled": false,
                                    "ipAddress": {
                                        "subnet": 24,
                                        "address": "0.0.0.0"
                                    }
                                },
                                "stopSleepIfBackUp": {
                                    "enabled": false
                                },
                                "newOrModifiedFile": {
                                    "enabled": false
                                },
                                "wiredNetworkConnection": {
                                    "enabled": false
                                },
                                "minNetworkBandwidth": {
                                    "enabled": false
                                }
                            }
                        }
                    }
                }
            ]
        },
        "exchange": {},
        "snapInfo": {
            "noOfRecoveryPoints": 8,
            "snapToTapeSchedule": {
                "subTask": {
                    "subTaskOrder": 0,
                    "subTaskName": "Snap to tape",
                    "subTaskType": 1,
                    "flags": 0,
                    "operationType": 4028
                },
                "pattern": {
                    "freq_type": 4096,
                    "active_start_time": 79200,
                    "freq_interval": 240,
                    "name": "Automatic backup copy",
                    "freq_recurrence_factor": 1,
                    "timeZone": {
                        "TimeZoneName": "Client Time Zone"
                    }
                },
                "options": {
                    "backupOpts": {
                        "sybaseSkipFullafterLogBkp": false,
                        "backupLevel": 0,
                        "runIncrementalBackup": true,
                        "isSpHasInLineCopy": false,
                        "runSILOBackup": false,
                        "doNotTruncateLog": false,
                        "dataOpt": {
                            "daysBetweenSyntheticBackup": 0
                        },
                        "mediaOpt": {
                            "markMediaFullOnSuccess": false,
                            "startNewMedia": false,
                            "auxcopyJobOption": {
                                "autoCopy": true
                            }
                        }
                    },
                    "adminOpts": {
                        "snapToTapeOption": {
                            "allowMaximum": true
                        }
                    }
                }
            }
        }
    }
}')


// <h2>Description</h2>
// This operation deletes a Plan.

@name("Plan")
DELETE "https://{{ServerUrl}}/Plan/{{PlanId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
? "confirmDelete"= "true"



// <h2>Description</h2>
// This API returns a list of eligible plans that can be associated with an entity based on the provided filters.
// 
// <h2>Request Params</h2>
// <table width="331">
// <tbody>
// <tr>
// <td>Name</td>
// <td>Description</td>
// </tr>
// 
// <tr>
// <td>clientId</td>
// <td>
// <p>The ID of the client whose eligible plans are to be retrieved</p>
// </td>
// </tr>
// 
// <tr>
// <td>backupSetId</td>
// <td>
// <p>The ID of the backupset whose eligible plans are to be retrieved</p>
// </td>
// </tr>
// 
// <tr>
// <td>appId </td>
// <td>
// <p>The application ID whose eligible plans are to be retrieved.</p>
// </td>
// </tr>
// 
// <tr>
// <td>subclientId</td>
// <td>
// <p>The ID of the subclient whose eligible plans are to be retrieved.</p>
// </td>
// </tr>
// 
// 
// </tbody>
// </table>
// 
// Response will contain a list of plan objects that are eligible to be associated with the specified params

@name("Eligible Plans")
GET "https://{{ServerUrl}}/V2/Plan/Eligible"
"Authtoken": "{{TOKEN}}"
"Accept": "{{Accept}}"
? "clientId"= "{{clientId}}"
? "appId"= "{{appId}}"
? "subclientId"= "{{subclientId}}"



