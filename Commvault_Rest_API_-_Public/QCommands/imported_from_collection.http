#!/usr/bin/env dothttp

// <h2> Description </h2>
// <p>Commvault REST APIs support sending QCommands as a request.</p> 
// <ul>
// 
// [_More Details_](https://documentation.commvault.com/commvault/v11/article?p=48597.htm)

@name("QCommand")
POST "https://{{ServerUrl}}/QCommand/qoperation execute -clientName 'dbsolrac6_3'"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/xml"
data('<EVGui_OracleInstanceDiscoveryReq>
<clientName>
<clientName/>
</clientName>
</EVGui_OracleInstanceDiscoveryReq>')


// <h2> Description </h2>
// <p>Commvault REST APIs support sending QCommands as a request.</p> 
// <ul> 
//  <li>QCommands: 
//   <ul> 
//    <li>For a list of available CommServe QCommands, see <a href="http://documentation.commvault.com/commvault/v11/article?p=products/commserve/cli_config.htm" data-internal="true">Command Line Interface - CommServe QCommands</a>.</li> 
//    <li>For a list of MediaAgent QCommands, see <a href="http://documentation.commvault.com/commvault/v11/article?p=products/media_agent/cli_config.htm" data-internal="true">Command Line Interface - MediaAgent - QCommands</a>.</li> 
//   </ul></li> 
//  <li>QCommands using XML files (qoperation execute): 
//   <ul> 
//    <li>For a list of CommServe XML files, see <a href="http://documentation.commvault.com/commvault/v11/article?p=products/commserve/cli_config_user_xml_files.htm" data-internal="true">CommServe XML Files on the Command Line</a>.</li> 
//    <li>For a list of MediaAgent XML files, see <a href="http://documentation.commvault.com/commvault/v11/article?p=products/media_agent/cli_config_xml.htm" data-internal="true">Command Line Interface - MediaAgent - XML Files</a>.</li> 
//    <li>Other areas of the application offer XML files, for example, <a target="_blank" href="http://documentation.commvault.com/commvault/v11/article?p=products/vs_vmware/c_vmw_cli_config.htm" data-internal="false">Command Line Configuration - Virtual Server Agent for VMware</a>. Go to the command line documentation for the specific agent to view the available XML files.</li> 
//    <li>For information on creating XML files using Save As Script, see <a href="http://documentation.commvault.com/commvault/v11/article?p=features/cli/c_cli_save_as_script.htm" data-internal="true">Save as Script Overview</a>.</li> 
//   </ul> </li> 
//  <li>QScripts (qoperation execscript): for a list of available QScripts, see <a href="http://documentation.commvault.com/commvault/v11/article?p=features/cli/qscripts.htm" data-internal="true">Command Line Operations Using QScripts</a>.</li> 
// </ul> 
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_execute_qcommand.htm)

@name("Execute QCommand")
POST "https://{{ServerUrl}}/ExecuteQCommand"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "command": [
        "qoperation execute"
    ],
    "inputRequestXML": [
        "<TMMsg_InstallPackageListReq includeOnlyInstalledPackages=\"1\" installOSType=\"100\" requestForUninstall=\"1\"><clientEntity clientId=\"2\"/></TMMsg_InstallPackageListReq>"
    ]
})



