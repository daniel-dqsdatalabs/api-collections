#!/usr/bin/env dothttp

// <h2>Description</h2>
// This operation updates the security associations for an entity. The entity, role, and user form a security association.
// 
// [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=95854.htm)

@name("Update Entity Security Associations")
POST "https://{{ServerUrl}}/Security"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"
"Content-Type": "application/json"
data('{
  "entityAssociated": {
    "entity": [
      {
        "clientGroupId": 9,
        "_type_": 28
      }
    ]
  },
  "securityAssociations": {
    "associationsOperationType": "OVERWRITE",
    "associations": [
      {
        "userOrGroup": [
          {
            "groupId": 8,
            "externalGroupName": "test\\Tenant Admin"
          }
        ],
        "properties": {
          "role": {
            "roleId": 13
          }
        }
      },
      {
        "userOrGroup": [
          {
            "userGroupName": "test\\Tenant Users",
            "userGroupId": 0
          }
        ],
        "properties": {
          "role": {
            "roleId": 3
          }
        }
      }
    ]
  }
}')


// <h2> Description </h2>
// This API adds service commcells to a new company

@name("Add service commcells to new company")
POST "https://{{ServerUrl}}/security/multicommcell"
"Accept": "application/json"
"Content-Type": "application/json"
"Authtoken": "{{TOKEN}}"
data('{
    "associations": [
        {
            "entity": {
                "entityName": "{{entityName}}",
                "entityId": {{entityId}},
                "entityType": 194,
                "_type_": 150
            },
            "properties": {
                "role": {
                    "roleId": 3,
                    "roleName": "View"
                }
            },
            "userOrGroup": {
                "providerDomainName": "{{providerDomainName}}",
                "providerId": {{providerId}},
                "_type_": 61
            }
        },
        {
            "entity": {
                "entityName": "{{entityName}}",
                "entityId": {{entityId}},
                "entityType": 194,
                "_type_": 150
            },
            "properties": {
                "role": {
                    "roleId": 3,
                    "roleName": "View"
                }
            },
            "userOrGroup": {
                "providerDomainName": "{{providerDomainName}}",
                "providerId": {{providerId}},
                "_type_": 61
            }
        }
    ],
    "associationsOperationType": 1,
    "organizationId": 12
}')


@name("TwoFactorAuthPin")
GET "https://{{ServerUrl}}/Security/TwoFactorAuth/pin"
"Authtoken": "{{TOKEN}}"
"Accept": "application/json"
? "username"= "twofactoruser"


@name("TwoFactorAuthStatus")
GET "https://{{ServerUrl}}/Security/TwoFactorAuth/Status"
"Authtoken": "{{TOKEN}}"
"Accept": "application/json"
? "username"= "twofactoruser"



