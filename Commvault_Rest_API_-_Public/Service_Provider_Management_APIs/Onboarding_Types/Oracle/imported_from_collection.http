#!/usr/bin/env dothttp

@name("Add Database Server")
POST "https://{{ServerUrl}}/CreateTask"
"Accept": "{{Accept}}"
"Content-Type": "application/json"
"Authtoken": "{{TOKEN}}"
json({
    "taskInfo": {
        "associations": [
            {
                "commCellId": 2,
                "clientId": 0
            }
        ],
        "task": {
            "taskType": 1,
            "initiatedFrom": 1,
            "taskFlags": {
                "disabled": false
            }
        },
        "subTasks": [
            {
                "subTask": {
                    "subTaskType": 1,
                    "operationType": 4026
                },
                "options": {
                    "adminOpts": {
                        "clientInstallOption": {
                            "reuseADCredentials": false,
                            "installOSType": 1,
                            "discoveryType": 0,
                            "installerOption": {
                                "requestType": 0,
                                "Operationtype": 0,
                                "CommServeHostName": "northpole.testlab.commvault.com",
                                "RemoteClient": false,
                                "installFlags": {
                                    "allowMultipleInstances": true,
                                    "restoreOnlyAgents": false,
                                    "killBrowserProcesses": true,
                                    "install32Base": false,
                                    "disableOSFirewall": false,
                                    "stopOracleServices": false,
                                    "skipClientsOfCS": false,
                                    "addToFirewallExclusion": true,
                                    "ignoreJobsRunning": false,
                                    "overrideClientInfo": true,
                                    "firewallInstall": {
                                        "enableFirewallConfig": false,
                                        "firewallConnectionType": 0,
                                        "portNumber": 0
                                    }
                                },
                                "User": {
                                    "userName": "Test User",
                                    "userId": 198
                                },
                                "clientComposition": [
                                    {
                                        "packageDeliveryOption": 0,
                                        "overrideSoftwareCache": false,
                                        "components": {
                                            "commonInfo": {
                                                "globalFilters": 2
                                            },
                                            "fileSystem": {
                                                "configureForLaptopBackups": false
                                            },
                                            "componentInfo": [
                                                {
                                                    "osType": "Unix",
                                                    "ComponentId": 1204
                                                }
                                            ]
                                        },
                                        "clientInfo": {
                                            "client": {
                                                "evmgrcPort": 0,
                                                "cvdPort": 0
                                            }
                                        }
                                    }
                                ]
                            },
                            "clientDetails": [
                                {
                                    "clientEntity": {
                                        "hostName": "",
                                        "clientName": "oracletestserver",
                                        "clientId": 0
                                    }
                                }
                            ],
                            "clientAuthForJob": {
                                "password": "WFhYWFhYWFg=",
                                "userName": "root"
                            }
                        },
                        "updateOption": {
                            "rebootClient": true,
                            "plan": {
                                "planId": 11
                            }
                        }
                    }
                }
            }
        ]
    }
})


// This operation adds an Instance.

@name("Add Instance")
POST "https://{{ServerUrl}}/Instance"
"Accept": "{{Accept}}"
"Content-Type": "application/json"
"Authtoken": "{{TOKEN}}"
json({
    "instanceProperties": {
        "instance": {
            "clientId": 152157,
            "clientName": "oratrainNP",
            "instanceName": "ortrn",
            "appName": "Oracle",
            "_type_": 5,
            "instanceId": -1,
            "commCellId": 2,
            "applicationId": 22
        },
        "oracleInstance": {
            "useCatalogConnect": false,
            "oracleHome": "/ora01/app/oracle/product/11.2.0/db_1",
            "blockSize": 1048576,
            "crossCheckTimeout": 600,
            "oracleUser": {
                "userName": "oracle"
            },
            "oracleStorageDevice": {
                "logBackupStoragePolicy": {},
                "commandLineStoragePolicy": {}
            },
            "sqlConnect": {
                "domainName": "ortrn",
                "userName": "/"
            }
        }
    }
})


// This operation returns all instances.

@name("Instances")
GET "https://{{ServerUrl}}/Instance/PointSolution"
"Accept": "{{Accept}}"
"Content-Type": "application/json"
"Authtoken": "{{TOKEN}}"


// This operation deletes an Instance

@name("Instance")
DELETE "https://{{ServerUrl}}/Instance/{{OracleInstanceId}}"
"Accept": "{{Accept}}"
"Authtoken": "{{TOKEN}}"




