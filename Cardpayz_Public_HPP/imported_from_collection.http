#!/usr/bin/env dothttp

// ## Authentication
// 
// Authenticate your account using the API, by including your test credentials.
// 
// >Email: *user20006@gmail.com*
// >
// >Password: *qwerty12345*
// 
// All API requests must be made through HTTPS. Calls made through plain HTTP will fail. API requests without authentication will also fail.
// 
// ## Query Parameters
// 
// | Parameters  | Mandatory  | Description  | Validation   |
// |----------|----------|----------|--------|
// | email    | Yes    | email    | Valid email format |
// | password | Yes    | password | string |
// 
// ## Result Parameters for - OK response
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | data | object | include User object |
// | message | string | |
// | statusCode | int | |
// 
// 
// ## Result Parameters for User object
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | token | string    | Valid during 15 mins |
// | role | string | |
// | roleId | int | |
// | userId | string | |
// 
// ## Result Parameters for - BAD response
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | fieldError | string | |
// | message | string | |
// | statusCode | int | |

@name("Cardpayz /api/login")
POST "https://{{texcent-url}}/api/login"
"Content-Type": "application/json"
data('{
	"email":"user20006@gmail.com",
    "password":"qwerty12345"
}')


// ## Test Cards for use:
// When you use a test card at the OTP page you'll be able select a status of the Tx
// 
// Test Cards:
// 
// | CARD number | Type |
// |-------------|-----------|
// | 5555555555554444 | MasterCard | 
// | 5105105105105100 | MasterCard |
// | 4111111111111111 | VISA |
// | 4012888888881881 | VISA |
// 
// 
// 
// ## Query Parameters
// 
// | Parameter   | Mandatory | Description                                                                 | Validation                                   |
// |-------------|-----------|-----------------------------------------------------------------------------|----------------------------------------------|
// | amount      | Yes       | Payment amount 100.20                                                       | minLength: 1, maxLength: 32                  |
// | orderId     | Yes       | the Unic id that should contain numeric and alphabetic e.g. ETS123213       | minLength: 3, maxLength: 255 (string)        |
// | currency    | Yes       | Currency code (TRY, EUR, USD, CAD).                                         | minLength: 3, maxLength: 3                   |
// | payerEmail  | Yes       | Customer’s email, is mandatory if Customer object posted on a request       | Valid email format                           |
// | payerName   | Yes       | Customer’s cardholder name. Any valid cardholder name                       | minLength: 5, maxLength: 50                  |
// | redirectUrl | Yes       | The Customer will be redirected there after entering the OTP code on his bank page, the link shows the transaction ID and status | Valid URI format                             |
// | notifyUrl   | Yes       | The server URL where a merchant will be notified about a payment finalization/status change| Valid URI format                             |
// 
// 
// ## Response Parameters - OK 
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | data | object | included "payment" object |
// | message | string | |
// | statusCode | int | |
// 
// ## Parameters for "payment" object: 
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | created_timestamp | int | Unix Timestamp |
// | order_id | string | Your orderID that you included in request|
// | transaction_id | string | |
// | payment_url | string | you should redirect Client where he'll reach the OTP page|
// | response_code | int | |
// | signature | string | |
// | p_order_id | string | |
// | response_msg | string | |
// 
// ## Response Parameters - BAD 
// 
// You can receive a BAD response in different cases:
//  
// - Validation of each parameter was not passed
//  
// - The transaction Failed / Declined before the OTP page.
// (some Limits were reached for Card/Merchant, other cases)
//  
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | fieldError | object | included object with detailed message|
// | message | string | |
// | statusCode | int | |
// 
// ## For Redirect URL we are sending:
// 
// 
// "{redirectUrl}/?transaction_id=********&status=failed&orderId=*******"
// 
// or
// "{redirectUrl}/?transaction_id=********&status=Failed&orderId=*******"
// 
// or
// 
// "{redirectUrl}/?transaction_id=*******&status=waiting&orderId=*******" 
// 
// or
// 
// "{redirectUrl}/?transaction_id=******&status=successful&orderId=*****"
// 
// ##### NOTES: 
// 1) If a redirect was not called need you should wait on Notification from us.
// 
// 2) If Tx becomes *successful/failed* straight after redirect you'll notify immediately.
// 
// 3) If during redirect you get status "*waiting*" - you'll get notified with a status update after Tx will be processed. *(not more than 2 h)*
// 
// ## For NotifyURL we are sending 
// 
// **notifyUrl** = we send a notification when the transaction status changes. 
// 
// This can be useful if the user been redirected to the OTP page, but didn’t perform any actions there, in this case, after the time-out period (2 hours), a notification will be sent to this address with failed status. Also, all other status updates will come here.
// 
// For notify we are sending the next data in the request:
// 
// ## Query Parameters for Notify (JSON format) 
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | orderId | string |  |
// | transactionId | string | |
// | finaleResponseCode | number | |
// | finalResponseMsg | string | |
// | status | string | successful/waiting/failed/refund/partial_refund |
// | amount | number | |
// | netAmount | number | |
// | ccy |string | Currency code (EUR, USD, CAD) |
// | transactionAmount | number | |
// | transactionNetAmount | number | |
// | transactionCcy | string | processing currency code (EUR, USD, CAD) |
// |signature|string|sha256Key|
// 
// For Successful Transaction: 
// 
//  <html>
//       <head>
//      
//      {
//             "orderId": "*******",
//             "transactionId": "*******",
//             "finaleResponseCode": -1,
//             "finaleResponseCode": 0,
//             "finalResponseMsg": "successful",
//             "status": "successful",
//             "amount": 12,
//             "netAmount": null,
//             "ccy": "USD"
//             "signature": "9c0b09c32f6806622b68b25170ad4487"
//      }
// 
// For Failed Transaction: 
// 
//  <html>
//       <head>
//      
//      {
//             "orderId": "*******",
//             "transactionId": "*******",
//             "finaleResponseCode": -1,
//             "finalResponseMsg": "Failed",
//             "status": "failed",
//             "errorCode": "payment_rejected_other_reason",
//             "errorMessage": "Payment rejected (other reason)",
//             "amount": 3,
//             "netAmount": null,
//             "ccy": "USD"
//             "signature": "9c0b09c32f6806622b68b25170ad4487"
//      }
//     
// ### Signature validation:
// 
// signatureString = amount + ccy + orderId + status
// 
// Warning!
// If in response you get fields "transactionAmount" & "transactionCcy" - use them from signatureString.
// 
// signatureString = transactionAmount + transactionCcy + orderId + status
// 
// sha256Key = md5(userUuid + transaction_id);
// 
// 
// *NOTE: userId - you get api/login*
// 
// 
// $signature = hash_hmac('sha256', $signatureString, $sha256Key);

@name("Cardpayz api/paymentHpp")
POST "https://{{texcent-url}}/api/paymentHpp"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
data('{
    "amount": "10",
    "orderId": "922397k1w01",
    "currency": "USD",
    "payerEmail": "robertyslocumb@teleworm.us",
    "payerName": "Robert Slocumb",
    "phoneNumber": "+380951523798",
    "redirectUrl": "https://webhook.site/b5c5ac7e-e43d-4960-aecd-5b87c030a163",
    "notifyUrl": "https://webhook.site/b5c5ac7e-e43d-4960-aecd-5b87c030a163"
}')


// ## Query Parameters
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | orderId | string | Your orderID that use in Payment request |
// 
// ## Response Parameters - OK 
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | data | object | included "transaction" object |
// | message | string | |
// | statusCode | int | 200 |
// 
// ## Parameters for "transaction" object: 
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | id | int |  |
// | order_id | string | Your orderId that use in Payment request |
// | pOrderId | string |  |
// | transactionId | string |  |
// | orderId | string | Your orderId that use in Payment request |
// | originalGross | number | |
// | originalNetAmount | number | |
// | originalCcy | number | |
// | gross | number | |
// | netAmount | number | |
// | ccy | string | |
// | refundedAmount | number | |
// | refundedNetAmount | number | |
// | authorizedAmount | number | |
// | finaleResponseCode | string | |
// | finalResponseMsg | string | |
// | acquirerResponseCode | string | |
// | acquirerResponseMsg | string | |
// | acquirerAuthorizationCode | string | |
// | createdAt | int | Unix Timestamp |
// | payerName | string | |
// | payerEmail | string | |
// | companyName | string | |
// | status | string | |
// | errorCode | string | |
// | errorMessage | string | |
//           
// ## Response Parameters - BAD 
// 
// | Parameters  | Type  | Description   |
// |----------|----------|--------|
// | fieldError | string | detailed message|
// | message | string | |
// | statusCode | int | 400 |
// 
// 
// Status Lifecycle 
// 
// | Status  | Description  | Possible Action   |
// |----------|----------|--------|
// | pending | The Payment just created & client was not yet redirected to the PaymentURL | Pending Charge transactions can be moved to In-Progress or Failed. |
// | in-progress | Transactions in this state are added by an external application seeking to capture funds. When the customer is acting as the gateway, the transaction will remain in the Waiting status until the MID return final status.| in-progress transactions can be moved to Waiting or Successful or Failed status.|
// | waiting | Awaiting the transfer of funds from the cardholder's account. can take some time from 5-20 mins | Waiting MID approve/decline transactions
// can be moved to Successful or Failed. |
// | successful | The transaction amount has been successfully charged.| Charged transactions can be Refunded / Partial Refunded. |
// | failed | The attempt to transfer funds failed. | No further changes can be made to a Failed transaction. To try the credit card again, start a new transaction. These 'dead' transactions. |
// | refund | Full transaction amount has been refunded to the cardholder. | No further changes can be made to a Refunded transaction. |
// | partial_refund | A partial transaction amount has been refunded to the cardholder. | Returned transactions can be further refunded, as long as there is still a charged amount left. |

@name("Payment Status By OrderId")
GET "https://{{texcent-url}}/api/paymentStatusByOrderId"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
? "orderId"= "8625603"



