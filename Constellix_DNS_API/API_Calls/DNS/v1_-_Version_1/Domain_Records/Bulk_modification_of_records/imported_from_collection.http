#!/usr/bin/env dothttp

// User can add, update and delete multiple types of records in one request. Below is the procedure to select the record for update and delete.
// 
// Request Format Details:
// ======================
// 
// Each block must contain following details for update and delete selection.
//  
// 1. "type" for record type. Possible of all record types
// 2. Flag operation to perform for the block ("add": true or "update": true or "delete': true)
// 3. "filter" (To filter records) Or "exclude" (To exclude records).  
// 	3a. "filter" or "exclude" block must contains ( "field", "op" and "value")
// 	3b. "filter" / "exclude" is to be used with Update and Delete operation.
// 4. "set" criteria for Update, for Delete (set the block empty)
// 5. Add block must contain all the mandatory fields for the respective record. Please see the API documentation of the respective record.
// 
// 
// Fields with possible operations for search filter:
// 1. "id"     ( eq, gt, gte, lt, lte )
// 2. "name"   ( matches, startsWith, endsWith, contains, eq)
// 3. "ttl"    ( eq, gt, gte, lt, lte )
// 4. "noAnswer" (eq, in)
// 
// Note: Incase of failure all changes will be reverted.
// 
// 
// Below is the example of Add, Update and Delete records.
// <!--If "set" field is empty then selected record gets deleted.-->

@name("Bulk Add, Update and Delete records  of a domain in one request.")
POST "https://{{BaseURL}}/{{version}}/domains/{{DomainId}}/records"
"Content-Type": "application/json"
"x-cns-security-token": "{{x-cns-security-token}}"
data('[
    {
        "type":"a",
        "add": true,
        "set": {
            "name": "standardrecordwithGTD",
            "recordOption": "roundRobin",
            "ttl": 1800,
            "gtdRegion": 1,
            "roundRobin": [
                {
                    "value": "15.45.25.35",
                    "disableFlag": false
                }
            ]
        	
        }
    },
    {
        "type":"cname",
        "update": true,
        "exclude":{"field": "name", "op": "in", "value":["cnamerecord", "cnamerecord1"]},
        "set": { "ttl":900 }
    },
    {
        "type":"aaaa",
        "delete": true,
        "filter":{"field": "name", "op": "eq", "value":"yahooipv6"},
        "set": { }
    }
]')


// User can add, update and delete multiple types of records in one request. Below is the procedure to select the record for update and delete.
// 
// Request Format Details:
// ======================
// 
// Each block must contain following details for update and delete selection.
//  
// 1. "type" for record type. Possible of all record types
// 2. Flag operation to perform for the block ("add": true or "update": true or "delete': true)
// 3. "filter" (To filter records) Or "exclude" (To exclude records).  
// 	3a. "filter" or "exclude" block must contains ( "field", "op" and "value")
// 	3b. "filter" / "exclude" is to be used with Update and Delete operation.
// 4. "set" criteria for Update, for Delete (set the block empty)
// 5. Add block must contain all the mandatory fields for the respective record. Please see the API documentation of the respective record.
// 
// 
// Fields with possible operations for search filter:
// 1. "id"     ( eq, gt, gte, lt, lte )
// 2. "name"   ( matches, startsWith, endsWith, contains, eq)
// 3. "ttl"    ( eq, gt, gte, lt, lte )
// 4. "noAnswer" (eq, in)
// 
// Note: Incase of failure all changes will be reverted.
// 
// 
// Below is the example of Add, Update and Delete records.
// <!--If "set" field is empty then selected record gets deleted.-->

@name("Bulk Add, Update and Delete records  of a domain in one request. Copy")
GET "https://{{BaseURL}}/{{version}}/domains/{{DomainId1}}/records"
"Content-Type": "application/json"
"x-cns-security-token": "{{x-cns-security-token}}"
? "gtdRegion"= "{{gtdRegionId}} "



// User can add, update and delete multiple types of records in one request. Below is the procedure to select the record for update and delete.
// 
// Request Format Details:
// ======================
// 
// Each block must contain following details for update and delete selection.
//  
// 1. "type" for record type. Possible of all record types
// 2. Flag operation to perform for the block ("add": true or "update": true or "delete': true)
// 3. "filter" (To filter records) Or "exclude" (To exclude records).  
// 	3a. "filter" or "exclude" block must contains ( "field", "op" and "value")
// 	3b. "filter" / "exclude" is to be used with Update and Delete operation.
// 4. "set" criteria for Update, for Delete (set the block empty)
// 5. Add block must contain all the mandatory fields for the respective record. Please see the API documentation of the respective record.
// 
// 
// Fields with possible operations for search filter:
// 1. "id"     ( eq, gt, gte, lt, lte )
// 2. "name"   ( matches, startsWith, endsWith, contains, eq)
// 3. "ttl"    ( eq, gt, gte, lt, lte )
// 4. "noAnswer" (eq, in)
// 
// Note: Incase of failure all changes will be reverted.
// 
// 
// Below is the example of Add, Update and Delete records.
// <!--If "set" field is empty then selected record gets deleted.-->

@name("Bulk Add, Update and Delete records  of a domain in one request. Copy Copy")
PUT "https://{{BaseURL}}/{{version}}/domains/{{DomainId1}}/records "
"Content-Type": "text/plain"
"x-cns-security-token": "{{x-cns-security-token}}"
data('sampledomain2.com.  86400  IN  SOA  ns11.constellix.com. dns.constellix.com. 2008010108 43200 3600 1209600 180
sampledomain2.com.  86400  IN  NS  ns11.constellix.com.
cname.sampledomain2.com.  1800  IN  CNAME  www.sampledomain2.com.
www.sampledomain2.com.  1800  IN  A  1.1.1.1
')


// User can add, update and delete multiple types of records in one request. Below is the procedure to select the record for update and delete.
// 
// Request Format Details:
// ======================
// 
// Each block must contain following details for update and delete selection.
//  
// 1. "type" for record type. Possible of all record types
// 2. Flag operation to perform for the block ("add": true or "update": true or "delete': true)
// 3. "filter" (To filter records) Or "exclude" (To exclude records).  
// 	3a. "filter" or "exclude" block must contains ( "field", "op" and "value")
// 	3b. "filter" / "exclude" is to be used with Update and Delete operation.
// 4. "set" criteria for Update, for Delete (set the block empty)
// 5. Add block must contain all the mandatory fields for the respective record. Please see the API documentation of the respective record.
// 
// 
// Fields with possible operations for search filter:
// 1. "id"     ( eq, gt, gte, lt, lte )
// 2. "name"   ( matches, startsWith, endsWith, contains, eq)
// 3. "ttl"    ( eq, gt, gte, lt, lte )
// 4. "noAnswer" (eq, in)
// 
// Note: Incase of failure all changes will be reverted.
// 
// 
// Below is the example of Add, Update and Delete records.
// <!--If "set" field is empty then selected record gets deleted.-->

@name("Bulk Add, Update and Delete records  of a domain in one request. Copy Copy Copy")
DELETE "https://{{BaseURL}}/{{version}}/domains/{{DomainId1}}/records"
"Content-Type": "application/json"
"x-cns-security-token": "{{x-cns-security-token}}"




