#!/usr/bin/env dothttp

// Execute a given shell command and capture its standard output

@name("exec")
POST "https://{{HOST}}/sys"
"Content-Type": "application/json"
data('{"method":"exec", "params":["date"]}')


// Execute a given shell command and return the error code
// 
// **Parameters**
// 
// - ...: Command to call
// 
// **Return value:**
// 
// Error code of the command

@name("call")
POST "https://{{HOST}}/sys"
"Content-Type": "application/json"
data('{
	"method":"call", 
	"params":["pwd"]
}')


// Retrieve environment variables. If no variable is given then a table containing the whole environment is returned otherwise this function returns the corresponding string value for the given name or nil if no such variable exists.
// 
// **Parameters**
// 
// - var: Name of the environment variable to retrieve (optional)
// 
// **Return values:**
// 
// 1. String containing the value of the specified variable
// 1. Table containing all variables if no variable name is given

@name("getenv")
POST "https://{{HOST}}/sys"
"Content-Type": "application/json"
data('{
	"method":"getenv"
}')


// Execute a given shell command and capture its standard output

@name("uptime")
POST "https://{{HOST}}/sys"
"Content-Type": "application/json"
data('{"method":"uptime"}')


// Retrieves the output of the "logread" command.
// 
// **Return value:**
// 
// String containing the current log buffer

@name("syslog")
POST "https://{{HOST}}/sys"
"Content-Type": "application/json"
data('{"method":"syslog"}')


// Initiate a system reboot.
// 
// **Return value:**
// 
// Return value of os.execute()

@name("reboot")
POST "https://{{HOST}}/sys"
"Content-Type": "application/json"
data('{"method":"reboot"}')


// Retrieves the output of the "dmesg" command.
// 
// **Return value:**
// 
// String containing the current log buffer

@name("dmesg")
POST "https://{{HOST}}/sys"
"Content-Type": "application/json"
data('{"method":"dmesg"}')



