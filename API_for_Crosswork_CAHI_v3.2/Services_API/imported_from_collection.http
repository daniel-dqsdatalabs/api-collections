#!/usr/bin/env dothttp

// Use this API Call to check the status of the Services on Crosswork.

@name("Check All Services Status")
GET "https://{{crosswork_ip}}/crosswork/platform/v1/platform/health"


// Use this API Call to check the status of the Apps on Crosswork.

@name("Check Health of Apps")
GET "https://{{crosswork_ip}}/crosswork/platform/v1/apps/health"
"Content-Type": "application/json"



// Use this API Call to check the status of the Specific Apps on Crosswork.

@name("Health Check Specific App")
GET "https://{{crosswork_ip}}/crosswork/platform/v1/apps/Topology-svc/health"


// Use this API Call to check the status of the Specific Application Service on Crosswork.

@name("Health Check of specific service")
GET "https://{{crosswork_ip}}/crosswork/platform/v1/apps/Collection-Infra/robot-dlminvmgr/health"
"Content-Type": "application/json"



// Use this API Call to get the information of the roles available on Crosswork.

@name("Info about the Roles")
GET "https://{{crosswork_ip}}/crosswork/aaa/v1/role"
"Content-Type": "application/json"



// Use this API Call to get the information about the service jobs triggerred on Crosswork.

@name("Information about Application Jobs")
POST "https://{{crosswork_ip}}/crosswork/platform/v1/collect/show"



// Use this API Call to get start a service on Crosswork.

@name("Start a service")
POST "https://{{crosswork_ip}}/crosswork/platform/v1/services/start"
"Content-Type": "application/json"
data('{
    "Id": "Topology-svc"
}')


// Use this API Call to restart a service on Crosswork.

@name("Re-start a service")
POST "https://{{crosswork_ip}}/crosswork/platform/v1/services/restart"
"Content-Type": "application/json"
data('{
    "Id": "Topology-svc"
}')


// Use this API Call to add a new role on Crosswork.

@name("Add a Role")
POST "https://{{crosswork_ip}}/crosswork/aaa/v1/role"
"Content-Type": "application/json; charset=UTF-8"
data('{
    "admin_testing": {
        "_id": "",
        "id": "",
        "org_id": "1",
        "rate": 1000,
        "per": 60,
        "quota_max": -1,
        "quota_renewal_rate": 60,
        "hmac_enabled": false,
        "active": true,
        "is_inactive": false,
        "tags": [],
        "key_expires_in": -1,
        "partitions": {
            "quota": false,
            "rate_limit": false,
            "acl": false
        },
        "access_rights": {
            "api_v1_services": {
                "api_name": "api/v1/services api",
                "api_id": "api_v1_services",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "api_v1_spans": {
                "api_name": "api/v1/spans api",
                "api_id": "api_v1_spans",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "api_v1_trace": {
                "api_name": "api/v1/trace api",
                "api_id": "api_v1_trace",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "api_v1_traces": {
                "api_name": "api/v1/traces api",
                "api_id": "api_v1_traces",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "cwauthconfig": {
                "api_name": "Auth Server Config api",
                "api_id": "cwauthconfig",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "gcp-service": {
                "api_name": "gcp-service api",
                "api_id": "gcp-service",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "cwhi": {
                "api_name": "HI api",
                "api_id": "cwhi",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "cwinventory": {
                "api_name": "inventory api",
                "api_id": "cwinventory",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "nbi_v1_assurance": {
                "api_name": "nbi/v1/assurance api",
                "api_id": "nbi_v1_assurance",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "nbi_v1_central-inventory": {
                "api_name": "nbi/v1/central-inventory api",
                "api_id": "nbi_v1_central-inventory",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "cwnca": {
                "api_name": "NCA api",
                "api_id": "cwnca",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "cwpassword": {
                "api_name": "Password Change api",
                "api_id": "cwpassword",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "cwplatform": {
                "api_name": "Platform api",
                "api_id": "cwplatform",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "robot-logger": {
                "api_name": "robot-logger api",
                "api_id": "robot-logger",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "robot-nca": {
                "api_name": "robot-nca api",
                "api_id": "robot-nca",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "robot-pulse": {
                "api_name": "robot-pulse api",
                "api_id": "robot-pulse",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "robot-pulsecore": {
                "api_name": "robot-pulsecore api",
                "api_id": "robot-pulsecore",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "robot": {
                "api_name": "Robot_Infra_API_Proxy",
                "api_id": "robot",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "robotctl": {
                "api_name": "robotctl api",
                "api_id": "robotctl",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "rpd-service-manager": {
                "api_name": "rpd-service-manager api",
                "api_id": "rpd-service-manager",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "rpd-service-manager-socket": {
                "api_name": "rpd-service-manager-socket api",
                "api_id": "rpd-service-manager-socket",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "cwtopology": {
                "api_name": "Topology api",
                "api_id": "cwtopology",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "cwaaa": {
                "api_name": "Users and Roles api",
                "api_id": "cwaaa",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            },
            "zipkin": {
                "api_name": "zipkin api",
                "api_id": "zipkin",
                "versions": [
                    "Default"
                ],
                "allowed_urls": [
                    {
                        "url": "/.*",
                        "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    }
                ]
            }
        }
    }
}')


// Use this API Call to delete a specific role on Crosswork.

@name("Delete a Role")
DELETE "https://{{crosswork_ip}}/crosswork/aaa/v1/role/admin_testing"
"Content-Type": "application/json"



// Use this API Call to add a user and assign it to specific role on Crosswork.

@name("Add a USER")
POST "https://{{crosswork_ip}}/crosswork/aaa/v1/user"
"Content-Type": "application/json; charset=UTF-8"
data('{
    "abcdefgh": {
        "Username": "abcdefgh",
        "Password": "Crosswork1234$",
        "PolicyId": "admin_testing",
        "FirstName": "Crosswork",
        "LastName": "User"
    }
}')


// Use this API Call to delete an user on Crosswork.

@name("Delete a User")
DELETE "https://{{crosswork_ip}}/crosswork/aaa/v1/user/<Username>"
"Content-Type": "application/json"



// Use this API Call to trigger a collection of logs(show-tech) for a service on Crosswork.

@name("Collect Logs for a service")
POST "https://{{crosswork_ip}}/crosswork/platform/v1/collect/start"
"Content-Type": "application/json"
data('{
    "Type": "All",
    "JobScope": "robot-topo-svc"
}')


// Use this API Call to trigger collection of logs(show tech) for the whole sytem on Crosswork.

@name("Collect All Logs")
POST "https://{{crosswork_ip}}/crosswork/platform/v1/collect/start"
"Content-Type": "application/json"
data('{
    "Type": "All",
    "JobScope": ""
}')


// Use this API Call to Post the collected logs from Crosswork to a HTTP Endpoint.

@name("Post the Logs to an End Point")
POST "https://{{crosswork_ip}}/crosswork/platform/v1/collect-publish/start"
"Content-Type": "application/json"
data('{
    "CollectJobId": "20200527162222",
    "Protocol": "SSH",
    "SSH_Configuration": {
        "Username": "root",
        "Password": "C1sco12345",
        "Destination": "172.23.193.87",
        "Dest_path": "/root",
        "Port": "22"
    }
}')


// Use this API Call to check the status of the triggerred jobs on Crosswork.

@name("Show all the Collect jobs")
POST "https://{{crosswork_ip}}/crosswork/platform/v1/collect/show"
"Content-Type": "application/json"
data('{
}')



