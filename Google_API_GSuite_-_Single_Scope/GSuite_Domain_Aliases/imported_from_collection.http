#!/usr/bin/env dothttp

// ## Google API for G Suite
// 
// **Summary:**
// Get a single domain alias for a customer domain.
// 
// 
// G Suite Admin SDK : Directory API
// 
// [DomainAliases: Get](https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/get)
// 
// 
// **Authorization**
// This request requires authorization with at least one of the following scopes:
// 
// Scope
// https://www.googleapis.com/auth/admin.directory.domain.readonly
// https://www.googleapis.com/auth/admin.directory.domain

@name("DomainAliases Get")
GET "https://www.googleapis.com/admin/directory/{{gAPI_Version}}/customer/my_customer/domainaliases/{{domainAlias}}"


// ## Google API for G Suite
// 
// **Summary:**
// Inserts a domain alias for a customer
// 
// 
// ## G Suite Admin SDK : Directory API
// 
// [Domains: insert](https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/insert)
// 
// 
// **Authorization**
// This request requires authorization with at least one of the following scopes:
// 
// Scope
// https://www.googleapis.com/auth/admin.directory.domain

@name("DomainAliases Insert")
POST "https://www.googleapis.com/admin/directory/{{gAPI_Version}}/customer/my_customer/domainaliases"
json({
    "parentDomainName": "{{domainName}}",
    "domainAliasName": "{{newDomainName}}"
})


// ## Google API for G Suite
// 
// **Summary:**
// List all the domain aliases for a customer
// 
// 
// G Suite Admin SDK : Directory API
// 
// [DomainAliases: list](https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/list)
// 
// 
// **Authorization**
// This request requires authorization with at least one of the following scopes:
// 
// Scope
// https://www.googleapis.com/auth/admin.directory.domain.readonly
// https://www.googleapis.com/auth/admin.directory.domain

@name("DomainAliases List")
GET "https://www.googleapis.com/admin/directory/{{gAPI_Version}}/customer/my_customer/domainaliases"


// 1) Postman doesn't have a user prompt 
//    https://github.com/postmanlabs/postman-app-support/issues/285
// 
//    So we use a method to create a random hash,
//    store it in a ENV var,
//    and then get the user to paste that hash into a second var
//    and then run the script again
// 
// 2) A second issue with Postman is the inability to stop the 
//    running of the API via the pre-request script
//   
//    Therefore we run a NO-OP by calling Postman echo status
//    which returns whatever code we give it...
//    https://postman-echo.com/status/200
//   
//    We then run the actual deletion request via `pm.sendRequest`
// 
// 
// This returns **NO** response when successful; we could do with a test to check that deletion has occured although an error should be returned if the deletion fails.
// 
// ## Google API for G Suite
// 
// **Summary:**
// Deletes a domain alias for a customer
// 
// 
// ## G Suite Admin SDK : Directory API
// 
// [Domains: insert](https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/delete)
// 
// 
// **Authorization**
// This request requires authorization with at least one of the following scopes:
// 
// Scope
// https://www.googleapis.com/auth/admin.directory.domain

@name(" DomainAliases Delete")
GET "https://postman-echo.com/status/200"



