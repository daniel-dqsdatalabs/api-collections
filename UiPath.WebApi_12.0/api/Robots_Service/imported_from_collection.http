#!/usr/bin/env dothttp

@name("Begins a front-office session.")
POST "https://{{baseUrl}}/api/RobotsService/BeginSession"
"Content-Type": "application/json"
data('{
    "robotKey": "ut aliquip fugiat est",
    "userName": "sint exercitation proident aute"
}')


@name("Ends the front-office session.")
POST "https://{{baseUrl}}/api/RobotsService/EndSession"
"Content-Type": "application/json"
data('{
    "robotKey": "ut aliquip fugiat est",
    "userName": "sint exercitation proident aute"
}')


// This is the initial handshake between the robot service and Orchestrator, the equivalent of configuring the connection
//             info from Robot tray (manual deployment). It is supported only for authorized machines, i.e. the robot machine is part of the
//             same AD as Orchestrator. To enforce this, the request must contain the machine identity. The robots must be already provisioned
//             in Orchestrator before this step, otherwise RobotSvc will continue to call this method until they are.

@name("Called by RobotSvc to connect the Robots on the machine it is running on to Orchestrator (under automatic deployment).")
GET "https://{{baseUrl}}/api/RobotsService/GetConnectionData"
? "tenantId"= "12575632"
? "domainName"= "esse sit qui"


// This is the initial handshake between the robot service and Orchestrator, the equivalent of configuring the connection
//             info from Robot tray (manual deployment). It is supported only for authorized robots, i.e. robots using interactive authentication for login

@name("Called by RobotSvc to connect the Robots on the machine it is running on to Orchestrator (under automatic deployment).")
GET "https://{{baseUrl}}/api/RobotsService/GetSharedConnectionData"


// Every 30 seconds the UiPath service running on a Robot Machine posts a collection of heartbeat messages (one for each Robot hosted on the Machine).
// The response is a collection of commands specific to all the Robots defined on that Machine, including the ones that were added in the meanwhile.

@name("Post to the server a collection of heartbeat messages generated by the Robots from a Machine")
POST "https://{{baseUrl}}/api/RobotsService/Heartbeat"
"Content-Type": "application/json"
data('{
    "heartbeats": [
        {
            "robotKey": "sed consequat consectetur ea",
            "robotState": "Disconnected",
            "jobState": "Stopped",
            "jobKey": "labore esse",
            "processKey": "velit in",
            "info": "officia dolore",
            "outputArguments": "occaecat eiusmod nostrud"
        },
        {
            "robotKey": "sit ut",
            "robotState": "Disconnected",
            "jobState": "Running",
            "jobKey": "amet nostrud consectetur Excepteur",
            "processKey": "sint",
            "info": "incididunt",
            "outputArguments": "et cup"
        }
    ],
    "commandState": "Pending",
    "serviceUserName": "id elit do"
}')


// Every 30 seconds the UiPath service sends a heartbeat.
// The response is a collection of commands specific to that machine.

@name("Acquires licensing runtimes, updates machine's session state and reporting time.")
POST "https://{{baseUrl}}/api/RobotsService/HeartbeatV2"
"Content-Type": "application/json"
data('{
    "heartbeats": [
        {
            "robotKey": "magna aliquip Duis",
            "robotState": "Unknown",
            "jobState": "Running",
            "jobKey": "laborum",
            "processKey": "Ut laborum officia",
            "info": "est et",
            "outputArguments": "est pariatur elit ex"
        },
        {
            "robotKey": "mollit veniam labore et",
            "robotState": "Unknown",
            "jobState": "Successful",
            "jobKey": "nulla et ex amet",
            "processKey": "consequat ut Lorem sunt",
            "info": "consectetur deserunt ea",
            "outputArguments": "laborum eu dolor officia"
        }
    ],
    "commandState": "Pending",
    "serviceUserName": "magna fugiat est eiusmod"
}')


// Gets from the server all the Robots associated with a Machine and having the specified licenseKey.

@name("Gets from the server all the Robots associated with a Machine and having the specified licenseKey.
If the received payload contains the ServiceUserName, it returns only the Robot with that specific UserName.")
POST "https://{{baseUrl}}/api/RobotsService/StartService"
"Content-Type": "application/json"
data('{
    "serviceUserName": "cupidatat non"
}')


@name("Called by RobotSvc to disconnect all Robots.")
POST "https://{{baseUrl}}/api/RobotsService/StopService"
"Content-Type": "application/json"
data('{
    "heartbeats": [
        {
            "robotKey": "magna aliquip Duis",
            "robotState": "Unknown",
            "jobState": "Running",
            "jobKey": "laborum",
            "processKey": "Ut laborum officia",
            "info": "est et",
            "outputArguments": "est pariatur elit ex"
        },
        {
            "robotKey": "mollit veniam labore et",
            "robotState": "Unknown",
            "jobState": "Successful",
            "jobKey": "nulla et ex amet",
            "processKey": "consequat ut Lorem sunt",
            "info": "consectetur deserunt ea",
            "outputArguments": "laborum eu dolor officia"
        }
    ],
    "commandState": "Pending",
    "serviceUserName": "magna fugiat est eiusmod"
}')


@name("Post to the server a heartbeat collection with jobs information")
POST "https://{{baseUrl}}/api/RobotsService/SubmitJobState"
"Content-Type": "application/json"
data('[
    {
        "robotKey": "ad occaecat culpa minim",
        "robotState": "Available",
        "jobState": "Running",
        "jobKey": "magna Lorem mollit",
        "processKey": "eu aute",
        "info": "ea et incididunt fugiat",
        "outputArguments": "culpa dolor"
    },
    {
        "robotKey": "esse tempor cupidatat culpa dolore",
        "robotState": "Available",
        "jobState": "Stopped",
        "jobKey": "eu proident Ut adipisicing elit",
        "processKey": "in adipisicing dolor eiusmod voluptate",
        "info": "enim do",
        "outputArguments": "dolore velit ea ut"
    }
]')


@name("Uploads a screenshot for the given jobKey and robotKey.")
POST "https://{{baseUrl}}/api/RobotsService/UploadScreenshot"
"Content-Type": "multipart/form-data"
files(
	("file", "eu ullamc"),
	("robotKey", "ven"),
	("jobKey", "sed Excepteur Ut")
)



