#!/usr/bin/env dothttp

// OAuth required scopes: OR.TestSetExecutions or OR.TestSetExecutions.Write.
// 
// Required permissions: TestSetExecutions.Edit.
// 
// Responses:
// 202 Accepted
// 403 If the caller doesn't have permissions to cancel a test set execution

@name("Cancels the specified test case execution.")
POST "https://{{baseUrl}}/api/TestAutomation/CancelTestCaseExecution"
"X-UIPATH-OrganizationUnitId": "12575632"
? "testCaseExecutionId"= "12575632"


// OAuth required scopes: OR.TestSetExecutions or OR.TestSetExecutions.Write.
// 
// Required permissions: TestSetExecutions.Edit.
// 
// Responses:
// 202 Accepted
// 403 If the caller doesn't have permissions to cancel a test set execution

@name("Cancels the specified test set execution.")
POST "https://{{baseUrl}}/api/TestAutomation/CancelTestSetExecution"
"X-UIPATH-OrganizationUnitId": "12575632"
? "testSetExecutionId"= "12575632"


// OAuth required scopes: OR.TestSets or OR.TestSets.Write.
// 
// Required permissions: TestSets.Create.
// 
// Responses:
// 201 Created returns test set Id
// 403 If the caller doesn't have permissions to create a test set

@name("This will create a test set with source type API.This endpoint it is supposed to be used by API integration.")
POST "https://{{baseUrl}}/api/TestAutomation/CreateTestSetForReleaseVersion"
"X-UIPATH-OrganizationUnitId": "12575632"
"Content-Type": "application/json"
json({
    "releaseId": 97481792,
    "versionNumber": "commodo ut",
    "testCaseUniqueIds": [
        "8efd0a73-4c20-cc9f-f049-19144f8b1376",
        "f7840479-7777-b5dc-6466-134422cbdf0e"
    ]
})


// OAuth required scopes: OR.TestSetExecutions or OR.TestSetExecutions.Read.
// 
// Required permissions: TestSetExecutions.View.
// 
// Responses:
// 200 OK
// 404 If the test case assertion is not found or the screenshot storage location is not found

@name("Get the screenshot for the specified test case assertion.")
GET "https://{{baseUrl}}/api/TestAutomation/GetAssertionScreenshot"
"X-UIPATH-OrganizationUnitId": "12575632"
? "testCaseAssertionId"= "12575632"


// OAuth required scopes: OR.Execution or OR.Execution.Read.
// 
// Requires authentication.
// 
// Responses:
// 200 OK
// 403 If the caller doesn't have permissions to retrieve packages
// 404 If there is no test case with the specified UniqueId

@name("Get the package identifier and the latest version for the specified test case.")
GET "https://{{baseUrl}}/api/TestAutomation/GetPackageInfoByTestCaseUniqueId"
? "testCaseUniqueId"= "urn:uuid:273f53da-aca9-d331-3e11-77294a4ef44d"
? "packageIdentifier"= "esse sit qui"


// OAuth required scopes: OR.Execution or OR.Execution.Read.
// 
// Required permissions: Processes.View.
// 
// Responses:
// 200 OK
// 404 If there is no release for the specified package identifier

@name("This will list all the processes filtered by package identifier and version cross-folder when no current folder is sent by header.")
GET "https://{{baseUrl}}/api/TestAutomation/GetReleasesForPackageVersion"
"X-UIPATH-OrganizationUnitId": "12575632"
? "packageIdentifier"= "esse sit qui"
? "version"= "esse sit qui"
? "mandatoryPermissions"= "enim officia ut oc"
? "mandatoryPermissions"= "quis ex ullamco sit"
? "atLeastOnePermissions"= "enim officia ut oc"
? "atLeastOnePermissions"= "quis ex ullamco sit"


// OAuth required scopes: OR.TestSetExecutions or OR.TestSetExecutions.Read.
// 
// Required permissions: TestSetExecutions.View.
// 
// Responses:
// 200 OK
// 404 If the test case execution attachment is not found or the storage location is not found

@name("Get the attachment for the specified test case execution attachment.")
GET "https://{{baseUrl}}/api/TestAutomation/GetTestCaseExecutionAttachment"
"X-UIPATH-OrganizationUnitId": "12575632"
? "testCaseExecutionAttachmentId"= "12575632"


// OAuth required scopes: OR.TestSetExecutions or OR.TestSetExecutions.Write.
// 
// Required permissions: TestSetExecutions.Create.
// 
// Responses:
// 200 OK
// 403 If the caller doesn't have permissions to execute test sets
// 404 If one or more test cases were not found

@name("Re-execute the specified test case executions within the same test set execution.")
POST "https://{{baseUrl}}/api/TestAutomation/ReexecuteTestCases"
"X-UIPATH-OrganizationUnitId": "12575632"
"Content-Type": "application/json"
json({
    "testCaseExecutions": [
        {
            "testCaseExecutionId": -12971711,
            "inputArguments": {}
        },
        {
            "testCaseExecutionId": 93122936,
            "inputArguments": {}
        }
    ],
    "robotId": 12916128,
    "machineSessionId": -98119594
})


// OAuth required scopes: OR.TestSetExecutions or OR.TestSetExecutions.Write.
// 
// Required permissions: TestSetExecutions.Create.
// 
// Responses:
// 200 OK returns test set execution Id
// 403 If the caller doesn't have permissions to execute a test set
// 404 If the test set was not found

@name("Start a test set execution.")
POST "https://{{baseUrl}}/api/TestAutomation/StartTestSetExecution"
"X-UIPATH-OrganizationUnitId": "12575632"
? "testSetId"= "12575632"
? "testSetKey"= "urn:uuid:273f53da-aca9-d331-3e11-77294a4ef44d"
? "triggerType"= "Manual"


// OAuth required scopes: OR.TestSetExecutions or OR.TestSetExecutions.Write.
// 
// Required permissions: TestSetExecutions.Create.
// 
// Responses:
// 200 OK returns test set execution Id
// 403 If the caller doesn't have permissions to execute a test set
// 404 If the test set was not found

@name("Start a test set execution with additional options.")
POST "https://{{baseUrl}}/api/TestAutomation/StartTestSetExecutionWithOptions"
"X-UIPATH-OrganizationUnitId": "12575632"
"Content-Type": "application/json"
? "testSetId"= "12575632"
? "testSetKey"= "urn:uuid:273f53da-aca9-d331-3e11-77294a4ef44d"
json({
    "batchExecutionKey": "urn:uuid:cf1fd31d-b2ec-d824-cafd-a43643d7d89c",
    "triggerType": "ExternalTool",
    "testCases": [
        {
            "uniqueId": "urn:uuid:29b3c748-1683-6c35-5dd4-8de9f25ba849",
            "packageIdentifier": "labore in cillum ut"
        },
        {
            "uniqueId": "e61daeb0-5032-32df-baf6-1c7cdae3157f",
            "packageIdentifier": "sunt"
        }
    ],
    "executeOnlySpecifiedTestCases": true,
    "robotId": 23478393,
    "machineSessionId": 89524361
})



