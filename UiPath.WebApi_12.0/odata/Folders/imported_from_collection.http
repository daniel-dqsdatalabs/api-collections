#!/usr/bin/env dothttp

// OAuth required scopes: OR.Folders or OR.Folders.Read.
// 
// Required permissions: (Units.View - Gets all folders) and (SubFolders.View - Gets only folders where user has SubFolders.View permission).

@name("Gets folders.")
GET "https://{{baseUrl}}/odata/Folders"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Folders or OR.Folders.Write.
// 
// Required permissions: (Units.Create - Creates root or subfolder) and (SubFolders.Create - Creates subfolder if user has SubFolders.Create permission on parent).

@name("Creates a new folder.")
POST "https://{{baseUrl}}/odata/Folders"
"Content-Type": "application/json"
json({
    "DisplayName": "id Lorem dolor fugiat",
    "Key": "50fc01ee-bb10-eee4-0d81-3f5dd777c4fc",
    "FullyQualifiedName": "laborum amet dolore",
    "Description": "nulla veniam sint dolore",
    "ProvisionType": "Manual",
    "PermissionModel": "FineGrained",
    "ParentId": 44089649,
    "ParentKey": "454922bc-b1ec-1a01-7bb5-d86144f49144",
    "FeedType": "PersonalWorkspace",
    "Id": -72269299
})


// OAuth required scopes: OR.Folders or OR.Folders.Write.
// 
// Required permissions: (Units.Edit - Assigns domain user to any folder) and (SubFolders.Edit - Assigns domain user only if caller has SubFolders.Edit permission on all folders provided).

@name("Assigns a directory user or group to a set of folders with an optional set of roles per folder.")
POST "https://{{baseUrl}}/odata/Folders/UiPath.Server.Configuration.OData.AssignDomainUser"
"Content-Type": "application/json"
json({
    "assignment": {
        "Domain": "et magna aute",
        "UserName": "velit",
        "DirectoryIdentifier": "sint cillum irure",
        "UserType": "DirectoryGroup",
        "RolesPerFolder": [
            {
                "FolderId": 75910491,
                "RoleIds": [
                    -79704864,
                    93319409
                ]
            },
            {
                "FolderId": 46655674,
                "RoleIds": [
                    -2291622,
                    66936971
                ]
            }
        ]
    }
})


// OAuth required scopes: OR.Folders or OR.Folders.Write.
// 
// Required permissions: (Units.Edit - Assigns machines to any folder) and (SubFolders.Edit - Assigns machines only if caller has SubFolders.Edit permission on all folders provided).

@name("Assigns one or more machines to a set of folders.")
POST "https://{{baseUrl}}/odata/Folders/UiPath.Server.Configuration.OData.AssignMachines"
"Content-Type": "application/json"
json({
    "assignments": {
        "MachineIds": [
            40570777,
            -69651606
        ],
        "FolderIds": [
            35825674,
            90798025
        ]
    }
})


// OAuth required scopes: OR.Folders or OR.Folders.Write.
// 
// Required permissions: (Units.Edit - Assigns users to any folder) and (SubFolders.Edit - Assigns users only if caller has SubFolders.Edit permission on all folders provided).

@name("Assigns one or more users to a set of folders with an optional set of roles per folder.")
POST "https://{{baseUrl}}/odata/Folders/UiPath.Server.Configuration.OData.AssignUsers"
"Content-Type": "application/json"
json({
    "assignments": {
        "UserIds": [
            41989941,
            98599408
        ],
        "RolesPerFolder": [
            {
                "FolderId": -87051584,
                "RoleIds": [
                    13243061,
                    75448096
                ]
            },
            {
                "FolderId": -87748250,
                "RoleIds": [
                    62111817,
                    38565507
                ]
            }
        ]
    }
})


// OAuth required scopes: OR.Folders or OR.Folders.Read.
// 
// Required permissions: (Units.View - Gets roles from all folders) and (SubFolders.View - Gets roles only from folders where caller has SubFolders.View permission).

@name("Returns a page of the user-folder assignments for the input user, including the roles for each folder.
The response also includes the folders assigned to the directory groups of the user.
The distinction between the folders assigned directly to the user")
GET "https://{{baseUrl}}/odata/Folders/UiPath.Server.Configuration.OData.GetAllRolesForUser(username='{{username}}',skip={{skip}},take={{take}})"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Folders or OR.Folders.Read.
// 
// Required permissions: (Units.View - Gets machines for any folder) and (SubFolders.View - Gets machines only if caller has SubFolders.View permission on folder).

@name("Returns the machines assigned to a folder.")
GET "https://{{baseUrl}}/odata/Folders/UiPath.Server.Configuration.OData.GetMachinesForFolder(key={{key}})"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Folders or OR.Folders.Read.
// 
// Required permissions: (Units.View - Gets users for any folder) and (SubFolders.View - Gets users only if caller has SubFolders.View permission on folder) and (Assets.Create - Gets users only if the caller has Assets.Create permission on folder ) and (Assets.Edit - Gets users only if the caller has Assets.Edit permission on folder ).

@name("Returns the users who have access to a folder and optionally the fine-grained roles each one
has on that folder.")
GET "https://{{baseUrl}}/odata/Folders/UiPath.Server.Configuration.OData.GetUsersForFolder(key={{key}},includeInherited={{includeInherited}})"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"



