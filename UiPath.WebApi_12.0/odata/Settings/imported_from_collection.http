#!/usr/bin/env dothttp

// OAuth required scopes: OR.Settings or OR.Settings.Read.
// 
// Required permissions: Settings.View.

@name("Gets the settings.")
GET "https://{{baseUrl}}/odata/Settings"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: License.Create or License.Edit.

@name("Uploads a new offline license activation.
The content of the license is sent as a file embedded in the HTTP request.")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.ActivateLicenseOffline"
"Content-Type": "multipart/form-data"
files(
	("file", "magna eu tempor ea")
)


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: License.Create or License.Edit.

@name("Activate the license for a specific tenant")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.ActivateLicenseOnline"
"Content-Type": "application/json"
data('{
    "licenseKey": "e",
    "environment": "culpa",
    "email": "ull"
}')


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: License.Delete.

@name("Deactivate the license for a specific tenant")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.DeactivateLicenseOnline"


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: License.Delete.

@name("Removes the license")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.DeleteLicense"


// OAuth required scopes: OR.Settings or OR.Settings.Read.
// 
// Requires authentication.

@name("Returns Orchestrator settings used by activities")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetActivitySettings"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Read.

@name("Gets the authentication settings")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetAuthenticationSettings"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Read.
// 
// Required permissions: Settings.View.

@name("Gets custom calendar, with excluded dates in UTC, for current tenant")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetCalendar"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Read.
// 
// Required permissions: Settings.View.

@name("Gets the connection string")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetConnectionString"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: License.Delete.

@name("Deactivate the license offline for a specific tenant")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetDeactivateLicenseOffline"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Read.
// 
// Required permissions: Settings.Edit or Robots.Create or Robots.Edit.

@name("Gets the execution settings configuration (display name, value type, etc.).
If scope is 0 (Global), the default values will be the initial ones. If scope is 1 (Robot), then
the default values will be the actual values set globally.
e.g., Resolution wid")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetExecutionSettingsConfiguration(scope={{scope}})"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Read.

@name("Gets supported languages")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetLanguages"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Read.
// 
// Requires authentication.

@name("Retrieves the current license information.")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetLicense"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: License.Create or License.Edit.

@name("Create the offline activation request for a specific tenant")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetLicenseOffline"
"Content-Type": "application/json"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"
data('{
    "licenseKey": "e",
    "environment": "culpa",
    "email": "ull"
}')


// OAuth required scopes: OR.Settings or OR.Settings.Read.
// 
// Required permissions: Settings.View.

@name("Gets the configuration format for a Secure store")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetSecureStoreConfiguration(storeTypeName='{{storeTypeName}}')"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$count"= "true"


// OAuth required scopes: OR.Settings or OR.Settings.Read.

@name("Returns a collection of key value pairs representing all service settings used by a robot. A valid robot license key is required in the request headers.")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetServicesSettings"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Read.

@name("Gets timezones.")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetTimezones"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Read.
// 
// Requires authentication.

@name("Returns a collection of key value pairs representing settings used by Orchestrator web client.")
GET "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.GetWebSettings"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: Settings.Edit.

@name("Sets custom calendar, with excluded dates in UTC, for current tenant")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.SetCalendar"
"Content-Type": "application/json"
data('{
    "TimeZoneId": "ex",
    "ExcludedDates": [
        "2006-04-04T22:52:13.507Z",
        "1947-05-18T12:32:59.378Z"
    ]
}')


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: Settings.Edit.

@name("Updates the current settings.")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.UpdateBulk"
"Content-Type": "application/json"
data('{
    "settings": [
        {
            "Name": "dolore et sint consequat ea",
            "Value": "consectetur",
            "Scope": "Application",
            "Id": "do"
        },
        {
            "Name": "in pariatur occaecat commodo esse",
            "Value": "deserunt Duis",
            "Scope": "Application",
            "Id": "cillum incididunt mollit id"
        }
    ]
}')


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: License.Edit.

@name("Update the license for a specific tenant")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.UpdateLicenseOnline"


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Requires authentication.

@name("Edits a user setting.")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.UpdateUserSetting"
"Content-Type": "application/json"
? "$expand"= "esse sit qui"
? "$select"= "esse sit qui"
data('{
    "setting": {
        "Name": "sunt adipisicing aliqua velit",
        "Value": "velit sit in",
        "Scope": "All",
        "Id": "consequat quis incididunt"
    }
}')


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: License.Create or License.Edit.

@name("Uploads a new license file that was previously generated with Regutil. The content of the license is sent as a file embedded in the HTTP request.")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.UploadLicense"
"Content-Type": "multipart/form-data"
files(
	("file", "magna eu tempor ea")
)


// OAuth required scopes: OR.Settings or OR.Settings.Write.
// 
// Required permissions: Settings.Edit.

@name("Verify whether the given SMTP settings are correct or not by sending an email to a recipient.")
POST "https://{{baseUrl}}/odata/Settings/UiPath.Server.Configuration.OData.VerifySmtpSetting"
"Content-Type": "application/json"
data('{
    "sendTo": "laborum Duis ipsum",
    "smtpSettingModel": {
        "Host": "consequat",
        "Port": -80192382,
        "UserName": "anim est Duis",
        "Password": "proident",
        "Domain": "tempor dolor non in",
        "EnableSsl": true,
        "UseDefaultCredentials": false,
        "DefaultFromAddress": "ex exercitation l",
        "DefaultFromDisplayName": "incididunt ut"
    }
}')



