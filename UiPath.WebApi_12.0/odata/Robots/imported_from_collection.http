#!/usr/bin/env dothttp

// OAuth required scopes: OR.Robots or OR.Robots.Read.
// 
// Required permissions: Robots.View.

@name("Gets robots.")
GET "https://{{baseUrl}}/odata/Robots"
"X-UIPATH-OrganizationUnitId": "12575632"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Robots or OR.Robots.Write.
// 
// Required permissions: (Robots.Create - Floating Robot) and (Robots.Create and Machines.View - Standard Robot).

@name("Creates a new robot.")
POST "https://{{baseUrl}}/odata/Robots"
"X-UIPATH-OrganizationUnitId": "12575632"
"Content-Type": "application/json"
data('{
    "HostingType": "Floating",
    "Name": "nostrud",
    "Type": "NonProduction",
    "Username": "esse dolore irure",
    "LicenseKey": "sed ut proident ut",
    "MachineName": "commodo nostrud ut eu",
    "MachineId": -88229302,
    "ExternalName": "quis esse adipisicing",
    "Description": "ad in",
    "ProvisionType": "Manual",
    "Password": "eiusmod nostrud aliqua",
    "CredentialStoreId": 51038264,
    "UserId": 58563974,
    "Enabled": true,
    "CredentialType": "SafeNet",
    "Environments": [
        {
            "Name": "in in anim",
            "Description": "sint adipisicing voluptate",
            "Robots": [
                {
                    "HostingType": "Floating",
                    "Name": "exercitati",
                    "Type": "TestAutomation",
                    "Username": "mollit ipsum labore elit dolor",
                    "LicenseKey": "adipisicing consectetur",
                    "MachineName": "id ipsum",
                    "MachineId": -21732927,
                    "ExternalName": "c",
                    "Description": "in nulla",
                    "ProvisionType": "Automatic",
                    "Password": "magna in consectetur eu",
                    "CredentialStoreId": -85715582,
                    "UserId": -42172588,
                    "Enabled": false,
                    "CredentialType": "SmartCard",
                    "Environments": [
                        {
                            "value": "<Circular reference to #/components/schemas/EnvironmentDto detected>"
                        },
                        {
                            "value": "<Circular reference to #/components/schemas/EnvironmentDto detected>"
                        }
                    ],
                    "RobotEnvironments": "culpa Lorem cupidatat sunt ad",
                    "ExecutionSettings": {},
                    "IsExternalLicensed": false,
                    "LimitConcurrentExecution": false,
                    "Id": 69588456
                },
                {
                    "HostingType": "Floating",
                    "Name": "Lorem elit volupta",
                    "Type": "StudioPro",
                    "Username": "proid",
                    "LicenseKey": "eu velit",
                    "MachineName": "nulla non consequat exercita",
                    "MachineId": -5668393,
                    "ExternalName": "fugiat ullamco Excepteur ut",
                    "Description": "incididunt culpa sit Excepteur veniam",
                    "ProvisionType": "Manual",
                    "Password": "in do",
                    "CredentialStoreId": -29640216,
                    "UserId": 12189581,
                    "Enabled": false,
                    "CredentialType": "NCipher",
                    "Environments": [
                        {
                            "value": "<Circular reference to #/components/schemas/EnvironmentDto detected>"
                        },
                        {
                            "value": "<Circular reference to #/components/schemas/EnvironmentDto detected>"
                        }
                    ],
                    "RobotEnvironments": "quis",
                    "ExecutionSettings": {},
                    "IsExternalLicensed": true,
                    "LimitConcurrentExecution": true,
                    "Id": -16248246
                }
            ],
            "Type": "Dev",
            "Id": 33319020
        },
        {
            "Name": "deserunt in nostrud e",
            "Description": "aliqua ipsum officia ex sed",
            "Robots": [
                {
                    "HostingType": "Standard",
                    "Name": "u",
                    "Type": "Headless",
                    "Username": "consequat id no",
                    "LicenseKey": "eiusmod irure",
                    "MachineName": "velit amet",
                    "MachineId": -36555494,
                    "ExternalName": "ipsum et incididunt",
                    "Description": "veniam ipsum deserunt",
                    "ProvisionType": "Automatic",
                    "Password": "aliqua proident",
                    "CredentialStoreId": 85357592,
                    "UserId": 57001077,
                    "Enabled": false,
                    "CredentialType": "SmartCard",
                    "Environments": [
                        {
                            "value": "<Circular reference to #/components/schemas/EnvironmentDto detected>"
                        },
                        {
                            "value": "<Circular reference to #/components/schemas/EnvironmentDto detected>"
                        }
                    ],
                    "RobotEnvironments": "ad offici",
                    "ExecutionSettings": {},
                    "IsExternalLicensed": false,
                    "LimitConcurrentExecution": false,
                    "Id": 9134088
                },
                {
                    "HostingType": "Floating",
                    "Name": "magna et elit esse",
                    "Type": "TestAutomation",
                    "Username": "proident fugiat in consectetur",
                    "LicenseKey": "commodo nulla pariatur",
                    "MachineName": "Excepteur amet et elit",
                    "MachineId": 16585879,
                    "ExternalName": "enim",
                    "Description": "irure",
                    "ProvisionType": "Automatic",
                    "Password": "fugiat Ut in",
                    "CredentialStoreId": 63277324,
                    "UserId": -41458049,
                    "Enabled": true,
                    "CredentialType": "SmartCard",
                    "Environments": [
                        {
                            "value": "<Circular reference to #/components/schemas/EnvironmentDto detected>"
                        },
                        {
                            "value": "<Circular reference to #/components/schemas/EnvironmentDto detected>"
                        }
                    ],
                    "RobotEnvironments": "commodo mollit aute aliquip Excepteur",
                    "ExecutionSettings": {},
                    "IsExternalLicensed": true,
                    "LimitConcurrentExecution": false,
                    "Id": 41060658
                }
            ],
            "Type": "Dev",
            "Id": -92656413
        }
    ],
    "RobotEnvironments": "id adipisici",
    "ExecutionSettings": {},
    "IsExternalLicensed": true,
    "LimitConcurrentExecution": false,
    "Id": 29762217
}')


// OAuth required scopes: OR.Robots or OR.Robots.Write.
// 
// Required permissions: Robots.Edit.

@name("Convert a Standard Attended Robot to a Floating Robot.")
POST "https://{{baseUrl}}/odata/Robots/UiPath.Server.Configuration.OData.ConvertToFloating"
"X-UIPATH-OrganizationUnitId": "12575632"
"Content-Type": "application/json"
data('{
    "robotId": 43406518
}')


// OAuth required scopes: OR.Robots or OR.Robots.Write.
// 
// Required permissions: Robots.Delete.

@name("Deletes multiple robots based on their keys.")
POST "https://{{baseUrl}}/odata/Robots/UiPath.Server.Configuration.OData.DeleteBulk"
"X-UIPATH-OrganizationUnitId": "12575632"
"Content-Type": "application/json"
data('{
    "robotIds": [
        6679646,
        -34254335
    ]
}')


// OAuth required scopes: OR.Robots or OR.Robots.Read.
// 
// Required permissions: (SubFolders.View or Units.View or Jobs.Create).

@name("Get folder robots")
GET "https://{{baseUrl}}/odata/Robots/UiPath.Server.Configuration.OData.GetFolderRobots(folderId={{folderId}},machineId={{machineId}})"
"X-UIPATH-OrganizationUnitId": "12575632"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Robots or OR.Robots.Read.
// 
// Required permissions: Robots.Create and Machines.View.

@name("Gets machine name to license key mapping.")
GET "https://{{baseUrl}}/odata/Robots/UiPath.Server.Configuration.OData.GetMachineNameToLicenseKeyMappings"
"X-UIPATH-OrganizationUnitId": "12575632"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$count"= "true"


// OAuth required scopes: OR.Robots or OR.Robots.Read.
// 
// Required permissions: Robots.View and Environments.View and Processes.View.

@name("Returns a collection of all robots that can execute the process with the provided Id.")
GET "https://{{baseUrl}}/odata/Robots/UiPath.Server.Configuration.OData.GetRobotsForProcess(processId='{{processId}}')"
"X-UIPATH-OrganizationUnitId": "12575632"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Robots or OR.Robots.Read.
// 
// Required permissions: (SubFolders.View or Units.View or Jobs.Create).

@name("Gets all robots from a folder")
GET "https://{{baseUrl}}/odata/Robots/UiPath.Server.Configuration.OData.GetRobotsFromFolder(folderId={{folderId}})"
"X-UIPATH-OrganizationUnitId": "12575632"
? "machineId"= "12575632"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Robots or OR.Robots.Read.
// 
// Required permissions: Robots.View.

@name("Gets usernames.")
GET "https://{{baseUrl}}/odata/Robots/UiPath.Server.Configuration.OData.GetUsernames"
"X-UIPATH-OrganizationUnitId": "12575632"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Robots or OR.Robots.Write.
// 
// Required permissions: Robots.Edit.

@name("Toggles the status of the robots (enabled/disabled)")
POST "https://{{baseUrl}}/odata/Robots/UiPath.Server.Configuration.OData.ToggleEnabledStatus"
"X-UIPATH-OrganizationUnitId": "12575632"
"Content-Type": "application/json"
data('{
    "enabled": false,
    "robotIds": [
        -92188329,
        19122296
    ]
}')



