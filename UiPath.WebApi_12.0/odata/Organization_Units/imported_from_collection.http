#!/usr/bin/env dothttp

// OAuth required scopes: OR.Folders or OR.Folders.Read.
// 
// Required permissions: Units.View.
// 
// DEPRECATED: Use /Folders/GetFolders instead.

@name("Gets the organization units.")
GET "https://{{baseUrl}}/odata/OrganizationUnits"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"


// OAuth required scopes: OR.Folders or OR.Folders.Write.
// 
// Required permissions: Units.Create.
// 
// DEPRECATED: Use /Folders/Post instead.

@name("Creates an organization unit.")
POST "https://{{baseUrl}}/odata/OrganizationUnits"
"Content-Type": "application/json"
json({
    "DisplayName": "laborum sunt aute laboris",
    "Id": -11841818
})


// OAuth required scopes: OR.Folders or OR.Folders.Read.
// 
// Required permissions: Units.View and Users.View.
// 
// DEPRECATED: Kept for backwards compatibility.

@name("Returns a collection of all the ids of the users associated to an unit based on unit Id.")
GET "https://{{baseUrl}}/odata/OrganizationUnits/UiPath.Server.Configuration.OData.GetUserIdsForUnit(key={{key}})"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$count"= "true"


// OAuth required scopes: OR.Folders or OR.Folders.Read.
// 
// Required permissions: Units.View and Users.View.
// 
// DEPRECATED: Use /Folders/GetUsersForFolder instead.

@name("Returns a collection of all non robot users and, if no other sorting is provided, will place first those associated to an unit. Allows odata query options.")
GET "https://{{baseUrl}}/odata/OrganizationUnits/UiPath.Server.Configuration.OData.GetUsersForUnit(key={{key}})"
? "$expand"= "esse sit qui"
? "$filter"= "esse sit qui"
? "$select"= "esse sit qui"
? "$orderby"= "esse sit qui"
? "$top"= "12575632"
? "$skip"= "12575632"
? "$count"= "true"



