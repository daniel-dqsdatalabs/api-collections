#!/usr/bin/env dothttp

// First we need to delete the subscription we created before (if necesssary):
// 
// ```console
// curl -X DELETE   'http://localhost:1026/v2/subscriptions/$subscriptionId'   -H 'fiware-service: openiot'   -H 'fiware-servicepath: /'
// ```
// 
// You can obtain the ID of your subscription by performing a GET request to the `/v2/subscriptions` endpoint.
// 
// ```console
// curl -X GET   'http://localhost:1026/v2/subscriptions/'   -H 'fiware-service: openiot'   -H 'fiware-servicepath: /'
// ```
// 
// Now we create another subscription that will only trigger a notification when a motion sensor detects movement. Do not
// forget to change $MY_IP to your machine's IP address in the docker0 network as indicated earlier.

@name("Orion - Subscribe to Context Changes")
POST "http://{{orion}}/v2/subscriptions/"
"Content-Type": "application/json"
"fiware-service": "openiot"
"fiware-servicepath": "/"
data('{
  "description": "Notify Flink of all motion sensor",
  "subject": {
    "entities": [
      {
        "idPattern": "Motion.*"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://jobmanager:9001"
    }
  }
}')


// If a subscription has been created, you can check to see if it is firing by making a GET 
// request to the `/v2/subscriptions` endpoint.
// 
// Within the `notification` section of the response, you can see several additional `attributes` which describe the health of the subscription
// 
// If the criteria of the subscription have been met, `timesSent` should be greater than `0`.
// A zero value would indicate that the `subject` of the subscription is incorrect or the subscription 
// has created with the wrong `fiware-service-path` or `fiware-service` header
// 
// The `lastNotification` should be a recent timestamp - if this is not the case, then the devices
// are not regularly sending data. Remember to unlock the **Smart Door** and switch on the **Smart Lamp**
// 
// The `lastSuccess` should match the `lastNotification` date - if this is not the case 
// then **Draco** is not receiving the subscription properly. Check that the host name
// and port are correct. 
// 
// Finally, check that the `status` of the subscription is `active` - an expired subscription
// will not fire.

@name("Orion - Check Subscription is working")
GET "http://{{orion}}/v2/subscriptions/"
"fiware-service": "openiot"
"fiware-servicepath": "/"


// If a subscription has been created, you can check to see if it is firing by making a GET 
// request to the `/v2/subscriptions` endpoint.
// 
// Within the `notification` section of the response, you can see several additional `attributes` which describe the health of the subscription
// 
// If the criteria of the subscription have been met, `timesSent` should be greater than `0`.
// A zero value would indicate that the `subject` of the subscription is incorrect or the subscription 
// has created with the wrong `fiware-service-path` or `fiware-service` header
// 
// The `lastNotification` should be a recent timestamp - if this is not the case, then the devices
// are not regularly sending data. Remember to unlock the **Smart Door** and switch on the **Smart Lamp**
// 
// The `lastSuccess` should match the `lastNotification` date - if this is not the case 
// then **Draco** is not receiving the subscription properly. Check that the host name
// and port are correct. 
// 
// Finally, check that the `status` of the subscription is `active` - an expired subscription
// will not fire.

@name("Orion - Delete Subscription")
DELETE "http://{{orion}}/v2/subscriptions/{{subscriptionId}}"
"fiware-service": "openiot"
"fiware-servicepath": "/"




