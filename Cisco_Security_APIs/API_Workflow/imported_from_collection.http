#!/usr/bin/env dothttp

// Get a listing of all the events for a specific computer when the quarantine failed

@name("1.) Find all events where Malware Executed")
GET "https://{{amp4e_host}}/v1/events"
? "connector_guid[]"= "{{amp4e_computer}}"
? "event_type[]"= "1107296272"


// Get a listing of all the computers in the network, looking specifically for what we want

@name("2.) Find Endpoint Details for Remediation")
GET "https://{{amp4e_host}}/v1/computers"


// Get all ANC Endpoints from ISE

@name("3.) Nuke the Endpoint to Prevent Further Breach")
PUT "https://{{ise_host}}/ers/config/ancendpoint/apply"
"Content-Type": "application/json"
"Accept": "application/json"
data('{
		"OperationAdditionalData": {
		"additionalData": [{
		"name": "macAddress",
		"value": "{{ise_mac}}"
		},
		{
		"name": "policyName",
		"value": "ANC-KickFromNetwork"
		}]
		}
		}')


// Request a TG analysis Report with a given SHA-256

@name("4.) Find samples in Threat Grid")
GET "https://{{threatgrid_host}}/api/v2/samples/search"
? "checksum_sample"= "{{threatgrid_sha}}"
? "api_key"= "{{threatgrid_key}}"


// Request all domains for a specific sample in TG and store them in an array to get more data out of them

@name("5.) Get all sample domains to analyze")
GET "https://{{threatgrid_host}}/api/v2/samples/feeds/domains"
? "sample"= "{{threatgrid_sample_id}}"
? "after"= "2017-02-01"
? "api_key"= "{{threatgrid_key}}"


@name("6.) Check all domains against Investigate")
POST "https://investigate.api.umbrella.com/domains/categorization/"
"Authorization": "Bearer {{investigate_token}}"
"Content-Type": "application/json"
data('[{{umbrella_domains}}]')


@name("7.) For suspect domains get more details")
GET "https://investigate.api.umbrella.com/security/name/{{umbrella_suspect}}.json"
"Authorization": "Bearer {{investigate_token}}"


// using the umbrella enforcement API add domains to the custom integration

@name("8.) Enforce on bad Domains in Umbrella")
POST "https://{{umbrella_host}}/1.0/events"
"Content-Type": "application/json"
? "customerKey"= "{{umbrella_key}}"
data('[{
    "alertTime": "2013-02-08T11:14:26.0Z",
    "deviceId": "ba6a59f4-e692-4724-ba36-c28132c761de",
    "deviceVersion": "13.7a",
    "dstDomain": "{{umbrella_blacklist_entry_0}}",
    "dstUrl": "http://{{umbrella_blacklist_entry_0}}/a-bad-url",
    "eventTime": "2013-02-08T09:30:26.0Z",
    "protocolVersion": "1.0a",
    "providerName": "Security Platform"
},{
    "alertTime": "2015-02-08T11:14:26.0Z",
    "deviceId": "ba6a59f4-e692-4724-ba36-c28132c761de",
    "deviceVersion": "13.7a",
    "dstDomain": "{{umbrella_blacklist_entry_1}}",
    "dstUrl": "{{umbrella_blacklist_entry_1}}",
    "eventTime": "2015-02-08T09:30:26.0Z",
    "protocolVersion": "1.0a",
    "providerName": "Security Platform"
}]')


// Grab a feed in STIX format for ransomware DNS

@name("9.) Research other Ransomware Domains to protect")
GET "https://{{threatgrid_host}}/api/v3/feeds/ransomware-dns_2017-12-08.stix"
? "api_key"= "{{threatgrid_key}}"


// FMC REST API call to generate authentication token for subsequent API calls

@name("Generate Authentication Token Copy")
POST "https://{{fmc_hostname}}/api/fmc_platform/v1/auth/generatetoken"
basicauth("{{fmc_user}}", "{{fmc_pasword}}")


// REST call to add a custom intelligence feed

@name("10.) Add custom intelligence Feed into FMC")
POST "https://{{fmc_hostname}}/api/fmc_tid/v1/domain/{{fmc_domain}}/tid/source"
"X-auth-access-token": "{{fmc_token}}"
"Content-Type": "application/json"
data('{
  "startHour": 2,
  "name": "Threat Grid Ransomware DNS ",
  "description": "Feed of Ransomware Domains from TG",
  "feedType": "stix",
  "feedContent": "stix",
  "delivery": "url",
  "uri": "{{threatgrid_feed}}",
  "refresh": 1440,
  "version": "1.0.0",
  "downloadOn": true,
  "params": {
    "selfSignedServerCertificate": "true",
    "hostnameVerifier": "allow_all"
  },
  "property": {
    "ttl": 90,
    "publish": true,
    "action": "monitor"
  }
}')



