#!/usr/bin/env dothttp

// This method installs the PTA Server.
@name("Install PTA")
GET "https://{{PTABaseURL}}/installer/api/installation"
"Authorization": "{{PTAAuthToken}}"
"Content-Type": "application/json"
data('{
    "currentPassword": "currentPass",
    "newPassword": "newpass",
    "timezone": "Israel",
    "epochTime": "1525246349",
    "ntp": "10.10.0.50",
    "vault": {
        "ip": "10.10.10.10, 10.10.10.11",
        "port": "10000",
        "ipDR": "10.10.50.10, 10.10.50.11",
        "timezone": "Israel",
        "adminUser": "admin",
        "adminPassword": "fkdshsfkd23392hk!",
        "daysActivity": "200"
    },
    "pvwa": {
        "connectionMethod": "http",
        "host": "pvwa-host",
        "port": "30456",
        "appContext": "PasswordVault"
    }
}')


// This method returns the status of the installation of the PTA server.
@name("PTA Installation Status")
GET "https://{{PTABaseURL}}/installer/api/installation"
"Authorization": "{{PTAAuthToken}}"
"Content-Type": "application/json"


// This method generates and returns an RSA encryption key as base 64 string that is used by the installer for encrypting sensitive fields.// // To encrypt the sensitive fields, encrypt the data value using the RSA algorithm that uses the generated key as the encryption key. Add an **{encrypted}** prefix string to the encrypted value to indicate to the PTA server to decrypt the data.
@name("Server Encryption Key")
GET "https://{{PTABaseURL}}/installer/api/encryptionkey"
"Authorization": "{{PTAAuthToken}}"
"Content-Type": "application/json"


// This method generates a token that enables the user to authenticate to the PTA Server using the machine credentials for the installation process. This method can be run with an encrypted or clear text password. To encrypt the password, see [Get Server encryption key](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/WebServices/ServerEncryption.htm).
@name("PTA Server Authentication")
POST "https://{{PTABaseURL}}/installer/api/getauthtoken"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "username": [
        "{{apiUsername}}"
    ],
    "password": [
        "{{apiPassword}}"
    ]
})



