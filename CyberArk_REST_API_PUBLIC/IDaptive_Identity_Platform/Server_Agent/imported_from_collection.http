#!/usr/bin/env dothttp

@name("{{baseUrl}}/ServerAgent/AddEnrollmentCode")
POST "https://{{baseUrl}}/ServerAgent/AddEnrollmentCode"
"Content-Type": "application/json"
json({
    "NeverExpire": "<boolean>",
    "MaxUseCount": "<integer>",
    "IPRange": [
        "<string>",
        "<string>"
    ],
    "Description": "<string>",
    "NoMaxUseCount": "<boolean>",
    "UseCount": "<integer>",
    "SetID": [
        "<string>",
        "<string>"
    ],
    "OwnerType": "<string>",
    "ConnectorID": [
        "<string>",
        "<string>"
    ],
    "Owner": "<string>",
    "OwnerID": "<string>",
    "SetName": [
        "<string>",
        "<string>"
    ]
})


@name("{{baseUrl}}/ServerAgent/DeleteEnrollmentCode")
POST "https://{{baseUrl}}/ServerAgent/DeleteEnrollmentCode"
"Content-Type": "application/json"
json({
    "EnrollmentCode": "<string>"
})


@name("{{baseUrl}}/ServerAgent/DisableFeatures")
POST "https://{{baseUrl}}/ServerAgent/DisableFeatures"
"Content-Type": "application/json"



@name("{{baseUrl}}/ServerAgent/EnableFeatures")
POST "https://{{baseUrl}}/ServerAgent/EnableFeatures"


@name("{{baseUrl}}/ServerAgent/EnableFeaturesV2")
POST "https://{{baseUrl}}/ServerAgent/EnableFeaturesV2"
"Content-Type": "application/json"
json({
    "Features": "<string>",
    "Uuid": "<string>",
    "ResourceName": "<string>",
    "AccountName": "<string>",
    "AgentAuthRoles": null
})


// Please use EnrollV2 instead.

@name("{{baseUrl}}/ServerAgent/Enroll")
POST "https://{{baseUrl}}/ServerAgent/Enroll"


// See  for enrolling using an enrollment code.

@name("{{baseUrl}}/ServerAgent/EnrollV2")
POST "https://{{baseUrl}}/ServerAgent/EnrollV2"
"Content-Type": "application/json"
json({
    "OperatingSystem": "<string>",
    "Name": "<string>",
    "AgentVersion": "<string>",
    "FQDN": "<string>",
    "ResourceSetting": "<string>",
    "Owner": "<string>",
    "CertificatePassword": "[default password]",
    "ResourcePolicy": null,
    "DeviceID": "",
    "ResourceName": "[value of Name]",
    "Suffix": "",
    "Overwrite": false
})


@name("{{baseUrl}}/ServerAgent/GetAllEnrollmentCodes")
POST "https://{{baseUrl}}/ServerAgent/GetAllEnrollmentCodes"
"Content-Type": "application/json"
json({
    "RRFormat": false
})


// The agent uses the certificate to establish an SslStream with a DirectAudit collector.

@name("{{baseUrl}}/ServerAgent/GetCertificate")
POST "https://{{baseUrl}}/ServerAgent/GetCertificate"
"Content-Type": "application/json"
json({
    "CertificatePassword": "",
    "ServerAuthentication": false
})


@name("{{baseUrl}}/ServerAgent/Register")
POST "https://{{baseUrl}}/ServerAgent/Register"


// See EnrollV2 for enrolling using user credentials.
//             Use the same arguments as EnrollV2 with the following modifications:
//                 Added: EnrollmentCode
//                 Disallowed: Owner
//                     Owner must be omitted or the empty string since the agent profile will be the owner
//                     of the enrollment code.

@name("{{baseUrl}}/ServerAgent/RegisterV2")
POST "https://{{baseUrl}}/ServerAgent/RegisterV2"
"Content-Type": "application/json"
json({
    "OperatingSystem": "<string>",
    "Name": "<string>",
    "AgentVersion": "<string>",
    "FQDN": "<string>",
    "ResourceSetting": "<string>",
    "EnrollmentCode": "<string>",
    "Owner": "<string>",
    "CertificatePassword": "[default password]",
    "ResourcePolicy": null,
    "DeviceID": "",
    "ResourceName": "[value of Name]",
    "Suffix": "",
    "Overwrite": false
})


@name("{{baseUrl}}/ServerAgent/Unenroll")
POST "https://{{baseUrl}}/ServerAgent/Unenroll"
"Content-Type": "application/json"
json({
    "Delete": "<boolean>",
    "Uuid": "<string>",
    "ResourceName": "<string>",
    "AccountName": "<string>"
})


// Verify that the given password is correct for the given user.
//             Similar to VerifyPassword, but this API is preferred.

@name("{{baseUrl}}/ServerAgent/VerifyPasswordV2")
POST "https://{{baseUrl}}/ServerAgent/VerifyPasswordV2"
"Content-Type": "application/json"
json({
    "Password": "<string>",
    "Uuid": "<string>",
    "AllowPasswordExpiration": "<boolean>"
})



