#!/usr/bin/env dothttp

// This method returns a list of all Safes in the Vault that the user has permissions for. To run this web user, the user must be a member of the Safes in the Vault that are returned in the list.
@name("Get All Safes")
GET "https://{{BaseURL}}/PasswordVault/api/Safes"
"Authorization": "{{CyberArkLogonResult}}"
"Content-Type": "application/json"
? "search"= "searchWord"
? "offset"= "0"
? "limit"= "25"
? "sort"= "safeName asc"
? "includeAccounts"= "false"
? "extendedDetails"= "true"


// This method returns all the safes according to the platform ID.
@name("Get Safe by Platform ID")
GET "https://{{BaseURL}}/PasswordVault/api/Platforms/{{PlatformName}}/Safes"
"Authorization": "{{CyberArkLogonResult}}"
"Content-Type": "application/json"


// This method returns information about a specific Safe in the Vault.
@name("Get Safe Details")
GET "https://{{BaseURL}}/PasswordVault/api/Safes/{{Safe}}"
"Authorization": "{{CyberArkLogonResult}}"
"Content-Type": "application/json"


// This method returns all the existing account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:// // * Add accounts// * Update account content// * Update account properties// * Create folders
@name("Get Safe Account Groups")
GET "https://{{BaseURL}}/PasswordVault/API/Safes/{{Safe}}/AccountGroups"


// This method adds a new Safe to the Vault.// // The user who runs this web service requires **Add Safes** permissions in the Vault.
@name("Add Safe")
POST "https://{{BaseURL}}/PasswordVault/api/Safes"
"Authorization": "{{CyberArkLogonResult}}"
"Content-Type": "application/json"
data('{
    "SafeName": "testSafe1",
    "Description": "Desc1",
    "OLACEnabled": false,
    "ManagingCPM": "PasswordManager",
    "NumberOfVersionsRetention": null,
    "NumberOfDaysRetention": 0,
    "AutoPurgeEnabled": false,
    "Location": "\\"
}')


// This method deletes a Safe from the Vault.// // The user who runs this web service requires **Manage Safe** permissions on the required Safe.
@name("Delete Safe")
DELETE "https://{{BaseURL}}/PasswordVault/api/Safes/{{Safe}}"
"Authorization": "{{CyberArkLogonResult}}"
"Content-Type": "application/json"




