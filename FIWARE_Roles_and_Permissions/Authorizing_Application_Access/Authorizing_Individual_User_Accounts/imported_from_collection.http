#!/usr/bin/env dothttp

// Granting User access via the GUI can be done in the same manner as for organizations.
// 
// Using the REST API, the role can be granted  making a PUT request as shown, including
// the `<application-id>`, `<role-id>` and `<user-id>` in the URL path and identifying
// themselves using an `X-Auth-Token` in the header.

@name("Grant a role to a user")
PUT "http://{{keyrock}}/v1/applications/{{application-id}}/users/{{user-id}}/roles/{{role-id}}"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"



// To list the roles granted to an Individual user, make a GET request to the
// `v1/applications/{{application-id}}/users/{{user-id}}/roles` endpoint
// 
// The response returns all roles assigned to the user

@name("List granted users roles")
GET "http://{{keyrock}}/v1/applications/{{application-id}}/users/{{user-id}}/roles"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"



// To revoke a role using the REST API make a DELETE request as shown, including
// the `<application-id>`, `<organization-id>` and `<role-id>` in the URL path and identifying
// themselves using an `X-Auth-Token` in the header.

@name("Revoke a role from a user")
DELETE "http://{{keyrock}}/v1/applications/{{application-id}}/users/{{user-id}}/roles/{{role-id}}"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"




