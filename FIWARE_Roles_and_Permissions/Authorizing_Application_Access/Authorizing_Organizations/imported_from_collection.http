#!/usr/bin/env dothttp

// To grant an organization access to an application, click on the appliation to get to the details
// page and scroll to the bottom of the page, click the **Authorize** button and select the relevant
// organization.
// 
// ![](https://fiware.github.io/tutorials.Roles-Permissions/img/add-role-to-org.png)
// 
// A Role can be granted to either `members` or `owners` of an Organization. Using
// the REST API, the role can be granted  making a PUT request as shown, including
// the `<application-id>`, `<role-id>` and `<organzation-id>` in the URL path and identifying
// themselves using an `X-Auth-Token` in the header.

@name("Grant a role to a organization")
PUT "http://{{keyrock}}/v1/applications/{{application-id}}/organizations/{{organization-id}}/roles/{{role-id}}/organization_roles/member"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"



// A full list of roles granted to an organization can be retrieved by making a GET request to the
// `/v1/applications/{{application-id}}/organizations/{{organization-id}}/roles` endpoint.
// 
// The response shows all roles assigned to the organization.

@name("List granted organization roles")
GET "http://{{keyrock}}/v1/applications/{{application-id}}/organizations/{{organization-id}}/roles"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"



// To revoke a role using the REST API make a DELETE request as shown, including
// the `<application-id>`, `<organization-id>` and `<role-id>` in the URL path and identifying
// themselves using an `X-Auth-Token` in the header.
// 
// The following example revokes a role to `members` of the organization.

@name("Revoke a role from an organization")
DELETE "http://{{keyrock}}/v1/applications/{{application-id}}/organizations/{{organization-id}}/roles/{{role-id}}/organization_roles/member"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"




