#!/usr/bin/env dothttp

// send a `POST` request to this route will log in a user. The body of the request must have the user email and password

@name("Login User")
POST "http://localhost/api/v2/auth/login"
"Content-Type": "application/json"
data('{
    "email": "mwangicharles@gmail.com",
    "password": "password123"
}')


// Sending a `POST` request to this route will register a user

@name("Register User")
POST "http://localhost/api/v2/auth/signup"
"Content-Type": "application/json"
data('{
    "firstname": "John",
    "lastname": "Karanja",
    "email": "test@gmail.com",
    "phonenumber": "0722867603",
    "username": "jkaranja",
    "password": "whatdoIknow"
}')


// send a `POST` request to this route will allow the user to RSVP a meetup. The required parameters are the MeetupID and the user response which is either 'YES', 'NO' or 'MAYBE'

@name("RSVP a meetup")
POST "http://localhost/api/v1/meetups/2/rsvps"
"Content-Type": "application/json"
data('{"meetup_id": 1, "topic": "Python", "status": "Yes"}')


// Sending a `POST` request as an Admin user will allow you to create a new meetup. 
// 

@name("Create new meetup")
GET "http://localhost/api/v2/auth/users"
"Content-Type": "application/json"
data('{"happeningOn": "2019-04-17 12:00", "location": "PAC University", "topic": "Python Data Structure", "tags": ["Databases", "Programming"]}')


// Sending a `GET` request to this route will return all meetups

@name("All Meetups")
GET "http://localhost/api/v1/meetups"


// Send a `GET` request to this route will return a specific meetup using the meetup ID

@name("Specific meetup")
GET "http://localhost/api/v1/meetups/1"


// Sending a `GET` request to this route will return all upcoming meetups whose date (gotten from `happeningOn` field) is in the future from today.

@name("All Upcoming Meetups")
GET "http://localhost/api/v1/meetups/upcoming/"


// The `HTTP PATCH` method is used to update resources on a server. 
// 
// This endpoint accepts an `HTTP PATCH` request and will upvote a question by increasing the question vote field by 1

@name("Downvote a question")
PATCH "http://localhost/api/v1/questions/1/downvote"
"Content-Type": "application/json"
data('{"question_id": 1}')


// Sending a `PATCH` request to this route will increment the vote field of a question by 1

@name("Upvote a question")
PATCH "http://localhost/api/v1/questions/1/upvote"
"Content-Type": "application/json"
data('{"question_id": 1}')



