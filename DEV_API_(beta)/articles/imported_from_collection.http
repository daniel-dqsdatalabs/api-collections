#!/usr/bin/env dothttp

// This endpoint allows the client to retrieve a list of articles.
// 
// "Articles" are all the posts that users create on DEV that typically
// show up in the feed. They can be a blog post, a discussion question,
// a help thread etc. but is referred to as article within the code.
// 
// By default it will return featured, published articles ordered
// by descending popularity.
// 
// It supports pagination, each page will contain `30` articles by default.

@name("Published articles")
GET "https://{{baseUrl}}/articles"
? "page"= "1"
? "per_page"= "30"
? "tag"= "incididunt Lorem"
? "tags"= "incididunt Lorem"
? "tags_exclude"= "incididunt Lorem"
? "username"= "incididunt Lorem"
? "state"= "rising"
? "top"= "79434938"
? "collection_id"= "-50824049"


// This endpoint allows the client to create a new article.
// 
// "Articles" are all the posts that users create on DEV that typically
// show up in the feed. They can be a blog post, a discussion question,
// a help thread etc. but is referred to as article within the code.
// 
// ### Rate limiting
// 
// There is a limit of 10 requests per 30 seconds.
// 
// ### Additional resources
// 
// - [Rails tests for Articles API](https://github.com/forem/forem/blob/master/spec/requests/api/v0/articles_spec.rb)

@name("Create a new article")
POST "https://{{baseUrl}}/articles"
"Content-Type": "application/json"
data('{
    "article": {
        "title": "Hello, World!",
        "published": true,
        "body_markdown": "Hello DEV, this is my first post",
        "tags": [
            "discuss",
            "help"
        ],
        "series": "Hello series",
        "canonical_url": "https://example.com/blog/hello"
    }
}')


// This endpoint allows the client to retrieve a single
// published article given its `path`.

@name("A published article by path")
GET "https://{{baseUrl}}/articles/:username/:slug"



