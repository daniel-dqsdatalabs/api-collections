#!/usr/bin/env dothttp

# {{baseUrl=api.github.com}}

@name("Get a repository")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/"


@name("Update a repository")
PATCH "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/"
"Content-Type": "application/json"
json({
    "name": "Hello-World",
    "description": "This is your first repository",
    "homepage": "https://github.com",
    "private": true,
    "has_issues": true,
    "has_projects": true,
    "has_wiki": true
})


@name("Delete a repository")
DELETE "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/"


@name("Compare two commits")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/compare/{{basehead}}/"
? "page"= "1"
? "per_page"= "30"


@name("List repository contributors")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/contributors"
? "anon"= "aliqua consectetur elit incididu"
? "per_page"= "30"
? "page"= "1"


@name("Create a repository dispatch event")
POST "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/dispatches"
"Content-Type": "application/json"
json({
    "event_type": "on-demand-test",
    "client_payload": {
        "unit": false,
        "integration": true
    }
})


@name("List repository events")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/events"
? "per_page"= "30"
? "page"= "1"


@name("Get a repository installation for the authenticated app")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/installation"


@name("List repository languages")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/languages"


@name("Get the license for a repository")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/license"


@name("Merge a branch")
POST "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/merges"
"Content-Type": "application/json"
json({
    "base": "master",
    "head": "cool_feature",
    "commit_message": "Shipped cool_feature!"
})


@name("List stargazers")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/stargazers"
? "per_page"= "30"
? "page"= "1"


@name("Create a commit status")
POST "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/statuses/{{sha}}/"
"Content-Type": "application/json"
json({
    "state": "success",
    "target_url": "https://example.com/build/status",
    "description": "The build succeeded!",
    "context": "continuous-integration/jenkins"
})


@name("List watchers")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/subscribers"
? "per_page"= "30"
? "page"= "1"


@name("List repository tags")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/tags"
? "per_page"= "30"
? "page"= "1"


@name("Download a repository archive (tar)")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/tarball/{{ref}}/"


@name("List repository teams")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/teams"
? "per_page"= "30"
? "page"= "1"


@name("Transfer a repository")
POST "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/transfer"
"Content-Type": "application/json"
json({
    "new_owner": "github",
    "team_ids": [
        12,
        345
    ]
})


@name("Download a repository archive (zip)")
GET "https://{{baseUrl}}/repos/{{owner}}/{{repo}}/zipball/{{ref}}/"



