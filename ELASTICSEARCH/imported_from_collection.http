#!/usr/bin/env dothttp

// <strong>Esquema:</strong>
// * (10.170.0.100:9200/Nombre del indice a crear?pretty)

@name("crear indice")
PUT "https://10.170.0.100/clientes"


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/_cat/indices?v</td></tr>
// </table>
// 
// <strong>Health:</strong>
// <br>
// <table>
// <tr><td>verde</td><td>todo está bien </td></tr>
// <tr><td>Amarillo</td><td>todos los datos están disponibles, pero algunas réplicas aún no están asignadas </td></tr>
// <tr><td>rojo</td><td>algunos datos no están disponibles </td></tr>
// </table>

@name("enlistar los indices")
GET "https://10.170.0.100/_cat/indices"


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/_aliases</td></tr>
// </table>
// 
// <strong>Health:</strong>
// <br>
// <table>
// <tr><td>index</td><td>Nombre del indice </td></tr>
// <tr><td>alias</td><td>alias del indice</td></tr>
// </table>

@name("Alias para indices")
POST "https://10.170.0.100/_aliases"
"Content-Type": "application/json"
data('{
    "actions": [
        {"add": {"index": "groupandcontacts", "alias": "groupandcontacts_alias"}}
    ]
}')


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/Nombre del indice/_settings</td></tr>
// </table>
// <br>
// <strong>body: </strong>
// <br>
// <table>
// <tr><td>
// Ejemplo: {
//     "index": {
//         "number_of_replicas": 2
//     }
// }</td><td>* Ingre el nuevo dato que se desea agregar<p> * ingresar el cambio a un data ya ingresado </td></tr>
// 
// <tr><td>"index":{...}</td><td>el para metro index debe siempre debe estar en el Json<p> ya que este, nos menciona que es un parametro de index para realizar modificaciones <p> dentro del "index" se señala el json con los datos a modificar o actualizar </td></tr>
// 
// </table>

@name("modificar index")
PUT "https://10.170.0.100/groupandcontacts/_settings"
"Content-Type": "application/json"
data('{
    "index": {
        "number_of_replicas": 2
    }
}')


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/Nombre del indice a borrar?pretty</td></tr>
// </table>

@name("Borrar un indice ")
DELETE "https://10.170.0.100/prueba"


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/_recovery?human</td><td>Para ver el estado de recuperación de todo el clúster(todos los indices)</td></tr>
// <tr><td>10.170.0.100:9200/Nombre indice a recuperar/_recovery?human</td><td>recuperar un dice en epsifico</td></tr>
// </table>

@name("Recuperar indice")
GET "https://10.170.0.100/groupandcontacts/_recovery"


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/Nombre del indice/_doc/Id del documento?pretty</td></tr>
// </table>
// <br>
// <strong>Body: </strong>
// <br>
// <table>
// <tr><td>EXAMPLE: <P>
// {<P>
//   "name" :"Jane Doe",<P>
//   "createdOn": "2019-04-08T11:28:20.906+0000",<P>
//   "startDate": "2019-04-08T11:28:20.906+0000"<P>
// }</td><td>Se ingresa por un JSON los datos que dese en el documento</td></tr>
// </table>

@name("crear documentos")
PUT "https://10.170.0.100/clientes/_doc/4"
"Content-Type": "application/json"
data('{
  "name" :"documento de pruebas _ version_3",
  "createdOn": "2019-04-08T11:28:20.906+0000",
  "startDate": "2019-04-08T11:28:20.906+0000"
}')


@name("crear documentos sin id")
POST "https://10.170.0.100/clientes/_doc"
"Content-Type": "application/json"
data('{ 
"account_number" : 0 , 
"balance" : 16623 ,
"firstname" : "Bradshaw" ,
"lastname" : "Mckenzie" ,
"age" : 29 ,
"gender" : "F" , 
"address" : "244 Columbus Lugar " ,
" empleador " : " Euron " ,
" correo electrónico " : " bradshawmckenzie@euron.com " ,
" ciudad " : " Hobucken " ,
"estado" : "CO" 
	
}
     ')


@name("cosultar  documento")
GET "https://10.170.0.100/clientes/_doc/1"


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/Nombre del indice/_doc/id del documento/_update?pretty</td></tr>
// </table>
// <br>
// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>
// Ejemplo: <p>
// {<p>
// 	"doc":{<p>
//   "name" :"Jane Doe",<p>
//   "last_name":"quintero",<p>
//   "script":"ctx._source.age + = 5",<p>
//   "createdOn": "2019-04-08T11:28:20.906+0000",<p>
//   "startDate": "2019-04-08T11:28:20.906+0000"<p>
// 	}<p>
// }</td><td>* Ingre el nuevo dato que se desea agregar<p> * ingresar el cambio a un data ya ingresado </td></tr>
// 
// <tr><td>"doc":{...}</td><td>el para metro doc debe siempre debe estar en el Json<p> ya que este, nos menciona que es un parametro de documento para realizar modificaciones <p> dentro del "doc" se señala el json contodos los datos a modificar o actualizar </td></tr>
// 
// </table>

@name("modificar documentos ")
POST "https://10.170.0.100/clientes/_doc/2/_update"
"Content-Type": "application/json"
data('{
	"doc":{
  "name" :"Jane Doe",
  "last_name":"quintero",
  "script":"ctx._source.age + = 5",
  "createdOn": "2019-04-08T11:28:20.906+0000",
  "startDate": "2019-04-08T11:28:20.906+0000"
	}
}')


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/customer/_doc/Id del documento a eliminar?pretty</td></tr>
// </table>

@name("Borrar documento ")
DELETE "https://10.170.0.100/customer/_doc/2"


// <strong>Busqueda: </strong>
// <br>
// <table>
// <tr><td>{
//   "query": {
//     "match_all": {}
//   },
//   "_source": [
//     "account_number",
//     "balance"
//   ]
// }</td><td>busque en todos los documentos esas dos colubnas(parametros) y me los muestre.</td></tr>
// 
// 
// <tr><td>
// {  
//   "query": {"match": {"address": "244"}}
// } </td><td>buscar por un dato - que solo me traiga el documento completo cuando seha  igual a "address": "244"</td></tr>
// 
// 
// 
// <tr><td>
// {
//   "query": {
//     "bool": {
//       "must": [
//         { "match": { "address": "244" } },
//         { "match": { "address": "lane" } }
//       ]
//     }
//   }
// }</td><td> * buscar los datos - que solo me traiga el documento completo cuando seha  igual a "address": "244" y "address": "lane"<p>
//  * bool must :  todas las consultas deben ser verdaderas - si no no trae nada <p>
//  * bool must_not : todas las consultas deben ser falsas - si lo es trae todos los documentos - si no (no trae ese documento)</td></tr>
// 
// 
// 
// <tr><td> 
// {
//   "query": {
//     "bool": {
//       "should": [
//         { "match": { "address": "244" } },
//         { "match": { "address": "lane" } }
//       ]
//     }
//   }
// }</td><td>bool should: metrae la consulta - si una de ellas es verdadera</td></tr>
// 
// 
// 
// </table>

@name("busqueda de datos")
GET "https://10.170.0.100/clientes/_search"
"Content-Type": "application/json"
data('{
  "query": {
    "bool": {
      "must_not": [
        { "match": { "address": "mill" } },
        { "match": { "address": "lane" } }
      ]
    }
  }
}')


// 1. configurar el servidor    (/tmp/elastic/bk/)
// 2. crear el repositorio  
// 2.1. ( 10.170.0.100:9200/_snapshot/nombre del repositorio )
// 
// <strong>Parametros del cuerpo:</strong>
// <br>
// <br>
// <table>
// <th>Parametro</th><th> Descripcion</th>
// <tr><td> "type": "fs" </td>
// <td> 
// 1.repositorio del sistema de archivos compartido <p>
// 2.utiliza el sistema de archivos compartido para almacenar Snapshot
// </td> 
// </tr>
// <tr><td>Location</td><td>Ubicación de las instantáneas. Obligatorio.</td></tr>
// <tr><td>compress</td><td>Activa el comprimido de los archivos de instantáneas.<p>La compresión se aplica solo a los archivos de metadatos(index mapping y settings)</td></tr>
// <tr><td>chunk_size</td><td>Los archivos grandes se pueden dividir en trozos durante las instantáneas si es necesario.<p>El tamaño del fragmento se puede especificar en bytes o usando la notación del valor de tamaño, es decir, 1g, 10m, 5k</td></tr>
// <tr><td>max_restore_bytes_per_sec</td><td>Limitaciones por tasa de restauración de nodo.<p> Por defecto a 40mbpor segundo.</td></tr>
// <tr><td>max_snapshot_bytes_per_sec</td><td>Reguladores por tasa de instantáneas de nodo.<p> Por defecto a 40mbpor segundo.</td></tr>
// <tr><td>readonly</td><td>Hace repositorio de solo lectura.<p> El valor predeterminado es false.</td></tr>
// </table>

@name("repositorio")
PUT "https://10.170.0.100/_snapshot/my_backup"
"Content-Type": "application/json"
data('{
  "type": "fs",
  "settings": {
    "location": "/tmp/elastic/bk/",
    "compress" : true
  }
}')


// Cuando se registra un repositorio, se verifica de inmediato en todos los nodos maestros y de datos para asegurarse de que funciona en todos los nodos actualmente presentes en el clúster
// 
// Respuesta: 
// * Devuelve una lista de nodos donde el repositorio se verificó exitosamente o un mensaje de error si el proceso de verificación falló.

@name("verificacion del repositorio ")
POST "https://10.170.0.100/_snapshot/my_backup/_verify"


// <table type="color:black" border="2" >
// <tr><td>
// 10.170.0.100:9200/_snapshot/my_backup</td> <td> (llamar un repositorio en especifico)</td>
// </tr><td>
// 10.170.0.100:9200/_snapshot/_all </td><td>   (llamar todos lor repositorios)</td>
// </table>

@name("Consulta del repositorio")
GET "https://10.170.0.100/_snapshot/_all"


// <strong>Esquema:</strong> 
// * 10.170.0.100:9200/_snapshot/nombre del repositorio a eliminar

@name("Borrar un repositorio")
DELETE "https://10.170.0.100/_snapshot/my_backu"


// 1. Un repositorio puede contener varios snapshot del mismo clúster.
// 2. Los snapshot se identifican por nombres únicos dentro del clúster. 
// 
// 
// <br><strong>Esquema:</strong> 
// * _snapshot / nombre repositorio / nombre del snapshot 
// * 10.170.0.100:9200/_snapshot/my_backup/snapshot_0.1?wait_for_completion=true
// 
// <br>
// <table>
// <tr><td>wait_for_completion</td><td> especifica si la solicitud debe devolverse o no inmediatamente después de la inicialización del snapshot <p> o esperar a que se complete el snapshot.</td>
// </table>
// <br>
// se crea un snapshot  de todos los índices abiertos e iniciados en el clúster.
// <p>
// Este comportamiento se puede cambiar especificando la lista de índices en el cuerpo de la solicitud del snapshot.
// <br>
// <br>
// body:
// <br>
//  {
//   "indices": "index_1, index_2",
//   "ignore_unavailable": true,
//   "include_global_state": false
// }
// 
// <br><strong>Errores:</strong>
// 
// * El snapshot  completo fallará si uno o más índices que participan en el snapshot no tienen todos los fragmentos primarios disponibles.

@name("crear Snapshot")
PUT "https://10.170.0.100/_snapshot/my_backup/snapshot_indice_0.3"



// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/_snapshot/nombre del repositorio/nombre del snapshot a consultar</td><td>consultar un snapshot</td></tr>
// <tr><td>10.170.0.100:9200/_snapshot/nombre del repositorio/_all</td><td>consultar todos los snapshot</td></tr>
// </table>
// <br>
// <strong>Respuesta: </strong>
// <br>
// Este comando devuelve información básica sobre el snapshot, incluida la hora de inicio y finalización, la versión de Elasticsearch que creó el snapshot, la lista de índices incluidos, el estado actual del snapshot y la lista de fallas que se produjeron durante el snapshot.
// <br>
// <br>
// <em>State:</em>
// <br>
// <table>
// <tr><td>IN_PROGRESS</td><td>El snapshot se está ejecutando actualmente.</td>
// <tr><td>SUCCESS</td><td>La instantánea terminó y todos los fragmentos se almacenaron correctamente.</td>
// <tr><td>FAILED</td><td>La instantánea terminó con un error y no pudo almacenar ningún dato.</td>
// <tr><td>PARTIAL</td><td>La instantánea terminó con un error y no pudo almacenar ningún dato. <P>El comando failures debe contener información más detallada sobre los fragmentos que no se procesaron correctamente.</td>
// <tr><td>INCOMPATIBLE</td><td>La instantánea se creó con una versión anterior de Elasticsearch y, por lo tanto, es incompatible con la versión actual del clúster.</td>
// </table>

@name("consultar snapshot")
GET "https://10.170.0.100/_snapshot/my_backup/_all"


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/_snapshot/_status</td><td>consultar el estado de los snapshot actualmente en ejecuciòn</td></tr>
// <tr><td>10.170.0.100:9200/_snapshot/nombre del repositorio/_status</td><td>consultar el estado detallado para los snapshot dentro del repositorio dado<p> incluso si no se está ejecutando actualmente</td></tr>
// <tr><td>10.170.0.100:9200/_snapshot/nombre del repositorio/nombre del snapshot/_status</td><td>consultar el estado detallado para el snapshot consultado dentro del repositorio dado</td></tr>
// </table>

@name("Estado del snapshot")
GET "https://10.170.0.100/_snapshot/my_backup/snapshot_0.1/_status"


// <strong>Esquema:</strong> 
// * 10.170.0.100:9200/_snapshot/nombre del repositorio/nombre del snapshot a eliminar

@name("Borrar un snapshot ")
DELETE "https://10.170.0.100/_snapshot/my_backup/snapshot_indice_0.3"


// <strong>Esquema: </strong>
// <br>
// <table>
// <tr><td>10.170.0.100:9200/_snapshot/nombre del repositorio/nombre del snapshot a consultar/_restore</td><td>Restaurara todo el snapshot</td></tr>
// </table>
// De forma predeterminada, todos los índices del snapshot se restauran. 
// 
// <strong>Restaurar por indices:</strong>
// <br>
// * Body :
//  {
//   "indices": "index_1, index_2",
//   "ignore_unavailable": true,
//   "include_global_state": true,
//   "rename_pattern": " index_ (. +)",
//   "Rename_replacement": " restore_index_ $ 1 "
// }

@name("Restaurar snapshot")
POST "https://10.170.0.100/_snapshot/my_backup/snapshot_indice_0.3/_restore"




