#!/usr/bin/env dothttp

// This API enables you to send an SMS to a single number, group of numbers and a contact group. 
// 
// # What can you do with this API?
// Send SMS to a phone number or group of phone numbers through our API. HTTP API sends a text message using POST and form-encoded data. The URL you use to send a text message has a required field called api_key, which is unique and assigned to your account.
// 
// **If you wish to send SMS globally, the Base URL is listed below.**
// 
// >https://api-global.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX
// # Prerequisites
// 
// 1. An API Key
// 2. Sender ID
// 3. 'To' Phone Number
// 4. Message content
// 
// # API Parameter Specifications
// 
// The API parameter specifications are described in the following sections. Mandatory parameters are must to send an SMS, while optional parameters are defined as per the user's requirement.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter           | Description     | 	Expected Value		|
// |---------------------|-----------------|-----------------------|
// | dlrurl		| The encoded URL to receive delivery reports. Spiffing custom in the DLR url is mandatory.		| delivery reports URL 	|
// | custom	| Custom message ID by customer, comma separated	| Alphanumeric (max 40 char)	|
// | time	| Date and time for scheduling an SMS	| EX Format: YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	|
// | unicode	| To specify that the message to be sent is in unicode format. Also can be used for automatic detection of unicode SMS.	| 1 / 0 / auto	|
// | flash		| To specify that the message is to be sent in the flash format		| To specify that the message is to be sent in the flash format	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// 
// ## Advanced Parameters(Optional)
// The advanced parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable		| XML/JSON/JSONP. Default response will be in JSON	|
// | callback	| Callback function for JSONP response format	| String	|
// | custom1 and custom2	| Custom reference fields	| Alphanumeric (max 40 char)	|
// | port	| Port number to which SMS has to be sent	| Valid integer port number above 2000	|
// 
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send an SMS")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{sms}}"
? "message"= "{{hello}}"
? "to"= "{{phone_number}}"
? "sender"= "{{sender_id}}"


// # What can you do with this API?
// You can schedule the SMS to a specified time and trigger it to a phone number or a group.This API can let user schedule SMS to single as well as multiple recipients at anytime.
// 
// **Message Schedule Time lapses**
// > SMS cannot be scheduled before 5 minutes and after 3 months from the date of scheduling the SMS.
// 
// **If you wish to send SMS globally, the Base URL is listed below.**
// 
// > https://api-global.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX
// 
// # Prerequisites
// 
// 1. An API Key
// 2. Sender ID
// 3. An active Internet connection
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections. Mandatory parameters are must to send an SMS, while optional parameters are defined as per the user's requirement.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter		| Description	| Expected Value	|
// |---------------|---------------|-------------------|
// | dlrurl	| The encoded URL to receive delivery reports. Spiffing custom in the DLR url is mandatory.	| delivery reports URL	|
// | custom	| Custom message ID by customer, comma separated	| Alphanumeric (max 40 char)	| 
// | time	| Date and time for scheduling an SMS	| EX Format: YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	|
// | unicode	| To specify that the message to be sent is in unicode format. Also can be used for automatic detection of unicode SMS.	| 1 / 0 / auto	|
// | flash		| To specify that the message is to be sent in the flash format	| To specify that the message is to be sent in the flash format	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// ## Advanced Parameters (Optional)
// The advanced parameters in the HTTP API are tabulated below:
// 
// | Parameter		| Description	| Expected Value	|
// |---------------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/JSON/JSONP. Default response will be in JSON	|
// | callback	| callback Callback function for JSONP response format	| String	|
// | custom1 and custom2	| Custom reference fields	| Alphanumeric (max 40 char)	|
// | port	| Port number to which SMS has to be sent	| Valid integer port number above 2000	|
// 
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Schedule an SMS")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{sms}}"
? "message"= "{{hello}}"
? "to"= "{{to}}"
? "sender"= "{{sender_id}}"
? "time"= "YYYY-MM-DD HH:MM PM"


// # What can you do with this API?
// Once you create an SMS and schedule it, you'll be able to edit the schedule of the SMS through this API.
// To edit a scheduled slot, there should a minimum gap of 5 minutes before its execution.
// > Application must have a scheduled SMS campaign to further modify it and user must save a Group ID of an SMS campaign to be rescheduled
// # Prerequisites
// 1. API Key
// 2. An active Internet connection
// 3. Group ID of the scheduled SMS
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter		| Description	| Expected Value	|
// |---------------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// 
// 
// 
// ## Response Data
// 
// | Field	| Description	|
// |-------|---------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message. |
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Edit Scheduled SMS")
GET "https://{{base_url}}/{{version}}/index.php"
? "api_key"= "{{api_key}}"
? "groupid"= "{{groupid}}"
? "time"= "{{time}}"
? "task"= "modify"
? "method"= "{{schedule}}"


// # What can you do with this API?
// Through this API, you can delete a scheduled SMS from your account.To delete a scheduled slot, there should a minimum gap of 5 minutes before its execution. 
// 
// >Your account must have a scheduled SMS campaign to further modify it and also use must save a Group ID of an SMS campaign to be deleted.
// # Prerequisites
// 1. API Key
// 2. Group ID of the scheduled SMS
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Response Data
// 
// | Field	| Description	|
// |-----------|-----------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// 
// ## Mandatory Parameters

@name("Delete Scheduled SMS ")
GET "https://{{base_url}}/{{version}}/index.php"
? "api_key"= "{{api_key}}"
? "method"= "{{schedule}}"
? "groupid"= "{{groupid}}"
? "task"= "delete"


// You can send a Unicode SMS to a phone number or a group, in the language of your choice. To send a Unicode SMS, follow the steps below:
// 
// **If you wish to send SMS globally, the Base URL is listed below.**
// 
// > https://api-global.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX
// 
// ## Unicode Character Counts
// 
// 1. Put Unicode=1 if you want to send message in Unicode format. Even if its English, credits will be charged as per Unicode characters.
// 
// 2. Put Unicode=0 if you don`t want to send Unicode message.
// 
// 3. Put Unicode=auto for automatic detection of Unicode SMS. Based on language, system will detect language and charge accordingly.
// 
// # Prerequisites
// 1. An API Key
// 2. Sender ID
// 3. An active Internet connection
// 
// # API Parameter Specifications
// 
// The API parameter specifications are described in the following sections. Mandatory parameters are must to send an SMS, while optional parameters are defined as per the user's requirement.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | dlrurl	| The encoded URL to receive delivery reports. Spiffing custom in the DLR url is mandatory.	| delivery reports URL	|
// | custom	| Custom message ID by customer, comma separated	| Alphanumeric (max 40 char)	|
// | time	| Date and time for scheduling an SMS	| EX Format: YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	|
// | unicode	| To specify that the message to be sent is in unicode format. Also can be used for automatic detection of unicode SMS.	| 1 / 0 / auto	|
// | flash	| To specify that the message is to be sent in the flash format	| To specify that the message is to be sent in the flash format	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// ## Advanced Parameters(Optional)
// The advanced parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/JSON/JSONP. Default response will be in JSON	|
// | callback	| callback Callback function for JSONP response format	| String	|
// | custom1 and custom2	| Custom reference fields	| Alphanumeric (max 40 char)	|
// | port	| Port number to which SMS has to be sent	| Valid integer port number above 2000	|
// 
// 
// ## Response Data
// 
// | Parameter	| Description	|
// |-----------|---------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | group_id	| Website group id for your reference. Which is the current date	|
// | data	| All the response is wrapped in side data	|
// | sms	| Each number will be wrapped inside sms	|
// | id	| Website message id for your reference	|
// | customid	| Custom message id if you provide one	|
// | customid1	| Custom message id 1 if you provide one	|
// | customid2	| Custom message id 2 if you provide one	|
// | mobile	| Receiver Mobile number	|
// | status	| status of the message	|
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send a Unicode SMS")
GET "https://{{base_url}}/{{version}}/index.php"
? "api_key"= "{{api_key}}"
? "method"= "{{sms}}"
? "unicode"= "1"
? "message"= "{{hello}}"
? "sender"= "{{sender_id}}"
? "to"= "{{to}}"


// Using the below API, one can send a normal or Unicode SMS to a particular port. Application port numbers can be used in SMS messages to deliver a particular SMS to an application on a mobile phone.
// 
// If any application is present and running in that particular port, the text will be received as port SMS, else the message will hit the native inbox of the mobile phone.
// 
// > NOTE: The API tries to hit the application(port) for 10 seconds, if unsuccessful the message is delivered on the native inbox
// 
// # Prerequisites
// 
// 1. An API Key
// 2. Sender ID
// 3. Port number
// 
// #API Parameter Specifications
// 
// The API parameter specifications are described in the following sections. Mandatory parameters are must to send an SMS, while optional parameters are defined as per the user's requirement.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | dlrurl	| The encoded URL to receive delivery reports. Spiffing custom in the DLR url is mandatory.	| delivery reports URL	|
// | custom	| Custom message ID by customer, comma separated	| Alphanumeric (max 40 char)	|
// | time	| Date and time for scheduling an SMS	| EX Format: YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	|
// | unicode	| To specify that the message to be sent is in unicode format. Also can be used for automatic detection of unicode SMS.	| 1 / 0 / auto	|
// | flash	| To specify that the message is to be sent in the flash format	| To specify that the message is to be sent in the flash format	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// ## Advanced Parameters(Optional)
// The advanced parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/JSON/JSONP. Default response will be in JSON	|
// | callback	| Callback function for JSONP response format	| String	|
// | custom1 and custom2	| Custom reference fields	| Alphanumeric (max 40 char)	|
// | port	| Port number to which SMS has to be sent	| Valid integer port number above 2000	|
// 
// ## Response Data
// 
// | Parameter	| Description	|
// |-----------|---------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | group_id	| Website group id for your reference. Which is the current date	|
// | data	| All the response is wrapped in side data	|
// | sms	| Each number will be wrapped inside sms	|
// | id	| Website message id for your reference	|
// | customid	| Custom message id if you provide one	|
// | customid1	| Custom message id 1 if you provide one	|
// | customid2	| Custom message id 2 if you provide one	|
// | mobile	| Receiver Mobile number	|
// | status	| status of the message	|
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send a Port SMS ")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{sms}}"
? "message"= "{{hello world}}"
? "to"= "{{to}}"
? "sender"= "{{sender_id}}"
? "port"= "8XXX"


// # What can you do with this API?
// This API enables you to send an SMS using XML programming language. 
// 
// # Prerequisites
// 1. An API Key
// 2. Sender ID
// 3. XML Data
// 
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional parameters
// The Optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/JSON/JSONP. Default JSON	|
// | callback	| Callback function for JSONP response format	| Javascript function name standards	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// ## XML Tag Parameters
// >NOTE: If message,sender and dlrurl is specified within both SMS tag and XML tag, the former overrides the later.
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | xml version="1.0 "encoding="UTF-8"	| XML Header	| Version and Encoding	|
// | api	| Document Root	| Document Root	|
// | flash	| Global node for flash	| 1/0	|
// | campaign	| Global campaign name tag	| campaign name	|
// | sms	| SMS Node(can repeat)	| SMS Node	|
// | to	| Mobile number in sms node	| Comma separated 10 digit mobile numbers	|
// | custom	| Message ID for sms	| comma separated message ID's	|
// | custom1	| Custom reference 1 (comma separate)	| comma separated custom 1 references	|
// | custom2	| Custom reference 2 (comma separate)	| comma separated custom 2 references	|
// | sender	| Sender ID assigned to your account	| Sender ID	|
// | message	| Message to be sent. In case of any special characters in your message, enclose it within CDATA a s in the example	| Message text	|
// | dlrurl	| The URL to receive delivery reports. Spiffing reference id is mandatory	| EX:http://www.example.com/dlr.php	|
// | unicode	| To specify that the message to be sent is in unicode format.Also can be used for automatic detection of unicode SMS	| 1/0/auto	|
// | time	| Global schedule time	| EX Format: YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// 
// In case of special characters in the content within any of the XML tags, enclose it within CDATA as in following examples.
// 
// ## Sending to multiple numbers with same message
// 	<?xml version="1.0" encoding="UTF-8"?>
// 	<api>
// 	<campaign>campaign</campaign>
// 	<dlrurl><![CDATA[http://domain.com/receive?msgid={msgid}&sid={sid}&status={status}&custom1={custom1}]]></dlrurl>
// 	<time>2014-12-2604:00pm</time>
// 	<unicode>0</unicode>
// 	<flash>0</flash>
// 	<sender>senderid</sender>
// 	<message><![CDATA[smstext]]></message>
// 	<sms><to>9190********</to></sms>
// 	<sms><to>9191********</to></sms>
// 	</api>
// ## Sending to multiple numbers with different message
// 	<api>
// 	<campaign>campaign</campaign>
// 	<time>2014-12-26 04:00pm</time>
// 	<unicode>0</unicode>
// 	<flash>0</flash>
// 	<sms>
// 	<to>9190********</to>
// 	<sender>senderid</sender>
// 	<message>smstext</message>
// 	<custom>2</custom>
// 	<dlrurl>
// 	<![CDATA[http://domain.com/receive?msgid={msgid}&sid={sid}&status={status}&custom1={custom1}]]>
// 	</dlrurl> 
// 	</sms>
// 	<sms>
// 	<to>9191********</to>
// 	<sender>senderid</sender>
// 	<message><![CDATA[smstext]]></message>
// 	<custom>2</custom>
// 	<dlrurl>
// 	<![CDATA[http://domain.com/receive?msgid={msgid}&sid={sid}&status={status}&custom1={custom1}]]>
// 	</dlrurl> 
// 	</sms>
// 	</api>
// 	
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send SMS using XML Data")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{sms.xml}}"
? 'xml'= '<?xml version="1.0" encoding="UTF-8"?>
<api>
<campaign></campaign>
<unicode>0</unicode>
<flash>0</flash>
<sender>INFINI</sender>
<message><![CDATA[Message from xml v4]]></message>
<sms>
   <to>9986136317</to>
</sms>
</api>'


// # What can you do with this API?
// This API enables you to send an SMS using JSON data to send similar message to multiple numbers or different messages to different numbers.
// 
// > SMS can be sent using the JSON API by posting values to the preceding URL by the POST method with URL encoded JSON data.
// 
// **If you wish to send SMS globally, the Base URL is listed below.**
// 
// > https://api-global.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX
// # Prerequisites
// 1. An API Key
// 2. Sender ID
// 3. JSON Data
// 
// # Example Data
// In case of special characters in the content within any of the JSON tags, enclose it within CDATA as in following examples.
// 
// ## Sending to multiple numbers with same message
// 
// 	{
// 	"message": "test json",
// 	"sender": "AAAAAA",
// 	"sms":[
// 	{
// 	"to": "95XXXXXXXX",
// 	"msgid": "1",
// 	"message": "test sms",
// 	"custom1": "11",
// 	"custom2": "22",
// 	"sender": "AAAAAA"
// 	},
// 	{
// 	"to": "99XXXXXXXX",
// 	"msgid": "2",
// 	"custom1": "1",
// 	"custom2": "2" 
// 	}],
// 	"unicode": 1,
// 	"flash": 1,
// 	"dlrurl": "http://www.example.com/dlr.php" 
// 	}
// 
// 	
// ## Sending to multiple numbers with different message
// 
// 
// 	"message": "test json",
// 	"sms":[
// 	{
// 	"to": "95XXXXXXXX",
// 	"msgid": "1",
// 	"message": "test sms",
// 	"custom1": "11",
// 	"custom2": "22",
// 	"sender": "AAAAAA" },
// 	{
// 	"to": "99XXXXXXXX",
// 	"msgid": "2",
// 	"message": "json test sms",
// 	"custom1": "1",
// 	"custom2": "2"
// 	}],
// 	"unicode": 1,
// 	"flash": 1,
// 	"dlrurl": "http://www.example.com/dlr.php"
// 	}
// 	
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional parameters
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// | callback	| Callback function for JSONP response format	| Javascript function name standards	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// 
// ## JSON Tag Parameters
// If message, sender and dlrurl is specified within both SMS tag and JSON tag, the former overrides the later.
// 
// | Parameter	| Description	| Expected Value	| 	|
// |-----------|---------------|-------------------|---|
// | flash	| Global node for flash	| 1/0	| Optional	|
// | sms	| SMS Node(can repeat)	| SMS Node	| Mandatory	|
// | to	| Mobile number in sms node	| Comma separated 10 digit mobile numbers	| required	|
// | custom	| Message ID for sms	| comma separated message ID's	| Optional	|
// | custom1	| Custom reference 1 (comma separate)	| comma separated custom 1 references	| Optional	|
// | custom2	| Custom reference 2 (comma separate)	| comma separated custom 2 references	| Optional	|
// | sender	| Sender ID assigned to your account	| Sender ID	| Mandatory	|
// | message	| Message to be sent. In case of any special characters in your message, enclose it within CDATA a s in the example	| Message text	| Mandatory	|
// | dlrurl	| The URL to receive delivery reports. Spiffing reference id is mandatory	| EX: http://www.example.com/dlr.php	| Optional	|
// | unicode	| To specify that the message to be sent is in unicode format. Also can be used for automatic detection of unicode SMS	| 1/0/auto	| Optional	|
// | time	| Global schedule time	| EX Format: YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	| Optional	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// 
// ## API Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send SMS using  JSON Data ")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{sms.json}}"
? 'json'= '{
    "sender": "{{sender_id}}",
    "unicode": 0,
    "flash": 0,
    "sms": [{
        "to": "{{to}}",
        "msgid": "1",
        "message": "duplicate check 123456789",
        "custom1": "11",
        "custom2": "22",
        "sender": "{{sender_id}}"
    }]
}'


// # What can you do with this API?
// 
// Through this API, you can send exclusive messages to your subscriber / Opt in list.
// 
// To send an SMS to an opt in group,one must create a optin group and keyword associated with it in your account. Also, need to add numbers for those optin keywords to a group i.e. Optin group.
// 
// # Prerequisites
// 
// 1. An API Key
// 2. Sender ID
// 3. Optin Group ID/ Name
// 4. Message
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// |time	| Date and time for scheduling an SMS	| EX Format: YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	|
// | unicode	| To specify that the message to be sent is in unicode format. Also can be used for automatic detection of unicode SMS.	| 1 / 0 / auto	|
// | flash	| To specify that the message is to be sent in the flash format	| 1 or 0	|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// | callback	| Callback function for JSONP response format	| String	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// ## Error Codes
// 
// | Status	| Message	|
// |-----------|-----------|
// | A430	| Group name/id missing	|
// | A431	| Group is empty	|
// | A432	| Invalid mobile number	|
// | A433	| Keyword name/number missing	|
// | A434	| Keyword not found	|
// | A435	| Keyword is not active	|
// | A436	| No sender found!	|
// 
// 
// ### Example Error Response (JSON)
// 
// 	{
//     "status": "ERROR",
//     "code": "A431",
//     "message": "Group is empty"
// 	}
// 
// ### Example Error Response (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8" ?>
// 	<api>
//     <status>ERROR</status>
//     <code>A431</code>
//     <message>Group is empty</message>
// 	</api>
// 	
// ## Response Data
// 
// | Field	| Description	|
// |-----------|-----------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | group_id	| Website group id for your reference which is the current date	|
// | data	| All the response is wrapped in side data	|
// | optin	| Each number will be wrapped inside optin group	|
// | id	| Website message id for your reference	|
// | customid	| Custom message id if you provide one	|
// | customid1	| Custom message id 1 if you provide one	|
// | customid2	| Custom message id 2 if you provide one	|
// | mobile	| Mobile number the sms will be sent	|
// | status	| status of the message	|
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send SMS to an Optin Group")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{optin}}"
? "sender"= "{{sender_id}}"
? "message"= "{{message}}"
? "name"= "optingroup"


// # What can you do with this API?
// This API enables you to create a group of contacts from your account, so that you can simply use the group name to send SMS instead of adding multiple numbers manually. 
// # Prerequisites
// 1. API Key
// 2. Sender ID
// 3. An active Internet connection
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// The Optional parameter in the HTTP API is tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// | entity_id		| The Entity ID that is registered with DLT Platform		| The Entity ID that is registered with DLT Platform	|
// | template_id		| The Template ID that is registered with DLT Platform		| The Template ID that is registered with DLT Platform	|
// 
// 
// 
// ## Example Error Response (JSON)
// 
// 	{
//     "status": "ERROR",
//     "message": "Group name already exists.",
//     "data": []
// 	}
// 	
// 
// ## 	Example Error Response (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8" ?>
// 	<api>
//     <status>A401A</status>
//     <message>Method Not Implemented</message>
// 	</api>
// 
// ## Response Data
// 
// | Field	| Description	|
// |-----------|-----------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | data	| All the responses are wrapped inside data	|
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Create an SMS Group")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{create.group}}"
? "task"= "save"
? "app"= "1"
? "data[name]"= "{{name}}"


// # What can you do with this API?
// Through this API, you can add contacts to the SMS group you have created.
// # Prerequisites
// 
// 1. An API Key
// 2. Sender ID
// 3. SMS Group Name
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | fullname	| name of the contact to be added	| name of the contact	|
// | email	| email of the contact to be added	| email of the contact	|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// | action	| Flag to specify the action	| add/delete; Add action is Default	|
// 
// ## Example Error Response (JSON)
// 
// 	{
//       "status": "ERROR",
//       "code": "A424",
//       "message": "Group Name does not exist!"
// 	}
// 	
// ## Example Error Response (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8" ?>
// 	<api>
//     <status>ERROR</status>
//     <code>A424</code>
//     <message>Group Name does not exist!</message>
// 	</api>
// 	
// ## Response Data
// 
// | Status	| Message	|
// |-----------|-----------|
// | status	| It indicates the success or failure of your request.	|
// | Code	| Error code	|
// | message | It indicates the success or failure message.	|
// 
// ## API Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Add Contacts to an SMS Group")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{add.contacts}}"
? "number"= "{{phone_number}}"
? "name"= "{{name}}"
? "action"= "add"
? "fullname"= "{{name}}"
? "email"= "{{emailid}}"


// # What can you do with this API?
// Through this API, you can add a single contact or multiple contacts to a group using JSON / XML data.
// 
// >You need to create a group in your account to add multiple contacts to an existing valid group before using the API
// 
// # Prerequisites
// 1. JSON/ XML Data
// 2. Group name to which contacts needs to be added
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## API Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// | action	| Flag to specify the action	| add/delete. Add action is Default	|
// 
// 
// ## JSON/XML Tags
// 
// | Parameter	| Description	|
// |-----------|---------------|
// | number	| mobile number of the contact to be added	|
// | fullname	| full name of the contact	|
// | email	| email address of the contact	|
// 
// ## Sample Data (JSON)
// 
// 	{
//     "contacts": 
//     [{ 
//         "number": "9xxxxxxxx", 
//         "fullname": "xyz", 
//         "email": "xyz@email.com"  
//       }, 
//       {
//         "number":"91xxxxxxxx",   
//         "fullname":"xyz1",
//         "email":"xyz1@email.com"  
//       }] 
// 	}
// 	
// ## Sample Data (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8"?>
// 	<xmlapi>
// 	<contacts>
//     <number>95xxxxxxxx</number>
//     <fullname>xyz</fullname>
//     <email>x@email.com</email>
// 	</contacts>
// 	<contacts>  
//     <number>99xxxxxxxx</number>
//     <fullname>xyz1</fullname>
//     <email>y@email.com</email>
// 	</contacts>
// 	</xmlapi>
// 
// ## Response Data
// 
// | Status	| Response	|
// |-----------|-----------|
// | status	| It indicates the success or failure of your request.	|
// | Code	| Error code	|
// | message	| It indicates the success or failure message.	|
// 
// ## API Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Add Contacts to SMS Group using JSON")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{groups.json}}"
? "name"= "{{name}}"
? "action"= "add"
? 'json'= '{"sms": [{ "to": "9xxxxxxxx......}] }'


// # What can you do with this API?
// Through this API, you can add a single contact or multiple contacts to a group using JSON / XML data.
// 
// >You need to create a group in your account to add multiple contacts to an existing valid group before using the API
// 
// # Prerequisites
// 1. JSON/ XML Data
// 2. Group name to which contacts needs to be added
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## API Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// | action	| Flag to specify the action	| add/delete. Add action is Default	|
// 
// 
// ## JSON/XML Tags
// 
// | Parameter	| Description	|
// |-----------|---------------|
// | number	| mobile number of the contact to be added	|
// | fullname	| full name of the contact	|
// | email	| email address of the contact	|
// 
// ## Sample Data (JSON)
// 
// 	{
//     "contacts": 
//     [{ 
//         "number": "9xxxxxxxx", 
//         "fullname": "xyz", 
//         "email": "xyz@email.com"  
//       }, 
//       {
//         "number":"91xxxxxxxx",   
//         "fullname":"xyz1",
//         "email":"xyz1@email.com"  
//       }] 
// 	}
// 	
// ## Sample Data (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8"?>
// 	<xmlapi>
// 	<contacts>
//     <number>95xxxxxxxx</number>
//     <fullname>xyz</fullname>
//     <email>x@email.com</email>
// 	</contacts>
// 	<contacts>  
//     <number>99xxxxxxxx</number>
//     <fullname>xyz1</fullname>
//     <email>y@email.com</email>
// 	</contacts>
// 	</xmlapi>
// 
// ## Response Data
// 
// | Status	| Response	|
// |-----------|-----------|
// | status	| It indicates the success or failure of your request.	|
// | Code	| Error code	|
// | message	| It indicates the success or failure message.	|
// 
// ## API Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Add Contacts to SMS Group using XML Data")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{groups.xml}}"
? "name"= "{{name}}"
? "action"= "add"
? 'xml'= '{"sms": [{ "to": "9xxxxxxxx......}] }'


// # What can you do with this API?
// Through this API, you'll be able to send an SMS to a group, anytime.In case, you have not added the group yet, you can create one by referring to the **[SMS Manual](https://www.kaleyra.com/PDF/alerts-user-manual.pdf)**
// 
// In your account, there must be an existing group and numbers under that group to send any message to a group. 
// **The following URL enables you to integrate the URL through which you can send customized messages to the group:**
// 
// >https://api-alerts.kaleyra.com/v4/?api_key=Af59xxxxxxxxxx&method=groups&name=MyGroupName&sender=AAAAAA&message=Dear {name}, Your email is {email}
// 
// In this case, {name} and {email} would be variable parameters and will be picked up from the existing group MYGROUP which is corresponding to each mobile number.
// >Response formats would be same for simple message to a group or a customized one.
// 
// **If you wish to send SMS globally, the Base URL is listed below.**
// >https://api-global.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX
// 
// # Prerequisites
// 
// 1. An API Key
// 2. Sender ID
// 3. Group Name/ ID
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Example Error Response (JSON)
// 
// 	{
//     "status": "ERROR",
//     "code": "A421",
//     "message": "Group is empty/Invalid group"
// 	}
// 
// ## Response Data
// 
// | Field	| Description	|
// |-------|---------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | group_id	| Website group id for your reference	|
// | data	| All the response is wrapped in side data	|
// | groups	| Each number will be wrapped inside groups	|
// | id	| Website message id for your reference	|
// | customid	| Custom message id if you provide one	|
// | customid1	| Custom message id 1 if you provide one	|
// | customid2	| Custom message id 2 if you provide one	|
// | mobile	| Mobile number the sms will be sent	|
// | status	| status of the message	|
// 
// ## API Error Codes
// 
// | Code	| Description	|
// |-------|---------------|
// | A420	| Group name/id missing	|
// | A421	| Group is empty/Invalid group	|
// | A422	| Invalid mobile number	|
// | A423	| Group name/number missing	|
// | A424	| Group Name does not exist!	|
// | A425	| Number does not Exist	|
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send SMS to a Group")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{groups}}"
? "name"= "{{name}}"
? "sender"= "{{sender_id}}"
? "message"= "{{hello world}}"


// # What can you do with this API?
// 
// Through this API, user will be able to check the available credits in his/her account.
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameter
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// 
// ## Example Error Response (JSON)
// 
// 	{
//     "status": "A401A",
//     "message": "Method Not Implemented"
// 	}
// 	
// ## Example Error Response (XML)	
// 
// 	<api>
//     <status>A401A</status>
//     <message>Method Not Implemented</message>
// 	</api>
// 
// ## Response Data
// 
// | Field	| Description	|
// |-------|---------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | data	| All the response is wrapped in side data	|
// | credits	| Displays the credits available in the account	|
// 
// ## Mandatory Parameters

@name("Check Credit Status")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{account.credits}}"


// # What can you do with this API?
// 
// Through this API, user will be able to check the credits usage in his/her account.
// 
// > “from” date is mandatory field. if user misses providing “to” date in API, by default API will fetch data till yesterday's date
// 
// > Past 6 months data will be available

@name("Check Credit Usage")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{credit_usage}}"
? "from"= "2019-01-01"
? "to"= "2019-01-30"
? "format"= "json"


// # What can you do with this API?
// To check status of any sent SMS campaign, you must have message id only (not group ID) of the respective message(s). You can only check status for messages which have been sent on the same day.
// 
// > If using POST method for pulling messages status, then statuses for maximum 500 messages can be pulled at a time.
// # Prerequisites
// 
// 1. API key
// 2. Sender ID
// 3. Message ID
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/JSON/JSONP. Default response will be in JSON	|
// | numberinfo	| Flag to query service provider and location data	| 1 or 0	|
// | page	| Page number to fetch status details from a particular page	| 1 or more (1 page can contain maximum 500 entries)	|
// 
// ## Example Error Response (JSON)
// 
// 	{
//     "status": "A417",
//     "message": "Invalid Message ID/Mobile. No details found"
// 	}
// 
// ## Example Error Response (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8" ?>
// 	<api>
//     <status>A416</status>
//     <message>Invalid Message ID/Mobile</message>
// 	</api>
// 
// ## Response Data
// 
// | Field	| Description	|
// |-------|---------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | data	| All the response is wrapped in side data	|
// | sms	| Each number will be wrapped inside sms	|
// | id	| Website message id for your reference	|
// | custom1	| Custom message id 1 if you provide one	|
// | custom2	| Custom message id 2 if you provide one	|
// | mobile	| Mobile number the sms will be sent	|
// | status	| status of the message	|
// | custom	| Custom message id if you provide one	|
// | senttime | message sent time	|
// | dlrtime	| message delivered time	|
// | provider	| provider of the mobile numer	|
// | location	| Registered location of the mobile number	|
// 
// ## Mandatory Parameters

@name("Check Pull SMS Status")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{sms.status}}"
? "id"= "{{id}}"



// # What can you do with this API?
// Through this API, you'll be able to look up for HLR (Home Location Register) information for any valid mobile number. After performing lookup, you will be able to access HLR information only on your account. HLR information will include information about number network operator, Home Location, roaming network, ported network etc.,
// 
// ## API to initiate HLR on Global application
// **API 1: To trigger this API for global application, follow the API below:**
// > https://api-global.kaleyra.com/v4/?api_key=Axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx5&method=hlr&to=xxxxxxxxxxxx&format=xml
// 
// **API 2: An optional API is provided with same parameters, listed below:**
// > https://api-global.kaleyra.com/v4/?api_key=Axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx5&method=hlr&to=xxxxxxxxxxxx&format=xml
// 
// ### Difference between API 1 & API 2:
// 	The only difference between the above mentioned API are the response in the delivery status of the SMS.
// 
// 	In the API where,
// 	method=hlr, the delivery status is "DELIVERED"
// 
// 	whereas in the API where,
// 	method=lookup, the delivery status is "AWAITED DLR"
// 
// 
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Example Error Response (JSON)
// 
// 	{
//     "status":"A400",
//     "message":"Api Not Implemented"
// 	}
// 
// ## Example Error Response (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8" ?>
// 	<api>
//     <status>E608</status>
//     <message>No Valid mobile numbers found</message>
// 	</api>
// 
// ## Response Data
// 
// | Field	| Description	|
// |-----------|-----------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | data	| All the responses are wrapped inside data	|
// | Mobile	| Mobile number	|
// | id	| External message ID	|
// 
// ## API Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Look up Using HLR Information")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{lookup}}"
? "to"= "{{phone_number}}"


// # What can you do with this API?
// Through this API, you'll be able to perform LookUp to access HLR information for single or multiple numbers using XML/JSON data.
// 
// ## API to Lookup using JSON Data
// 	
// 	https://api-alerts.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX&method=lookup.json&to=92xxxxxxxx&json=%3A%2F%2Fdomain.net%2F.......
// 
// ## API to Lookup using XML Data
// 	
// 	https://api-alerts.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX&method=lookup.xml&to=92xxxxxxxx&xml=%3A%2F%2Fdomain.net%2F.......
// # Prerequisites
// 
// 1. Valid Mobile Number(s)
// 2. XMl/JSON Data
// 
// ## Sample DLR URL
// 	
// 	http%3A%2F%2Fdomain.net%2Fdlr%2Ftrigger.php%3Forig_network%3D%7Borig_network%7D%26orig_country%3D%7Borig_country%7D%26orig_circle%3D%7Borig_circle%7D%26%0D%0Aorig_cprefix%3D%7Borig_cprefix%7D%26orig_nprefix%3D%7Borig_nprefix%7D%26orig_code%3D%7Borig_code%7D%26is_roaming%3D%7Bis_roaming%7D%26roaming_network%3D%7Broaming_network%7D%26roaming_country%3D%7Broaming_country%7D%26roaming_circle%3D%7Broaming_circle%7D%26roaming_cprefix%3D%7Broaming_cprefix%7D%26roaming_nprefix%3D%7Broaming_nprefix%7D%26roaming_code%3D%7Broaming_code%7D%26is_ported%3D%7Bis_ported%7D%26ported_network%3D%7B+ported_network%7D%26ported_country%3D%7Bported_country%7D%26ported_circle%3D%7Bported_circle%7D%26ported_cprefix%3D%7Bported_cprefix%7D%26ported_nprefix%3D%7Bported_nprefix%7D%26ported_code%3D%7Bported_code%7D%26mcc%3D%7Bmcc%7D%26mnc%3D%7Bmnc%7D%26imsi%3D%7Bimsi%7D%26status%3D%7Bstatus%7D%26smsc%3D%7Bsmsc%7D%26err_code%3D%7Berr_code%7D
// 
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional API Parameters
// The Optional parameter in HTTP API is tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// 
// 
// ## Custom XML/JSON Tags
// 
// | Field Name	| Description	|
// |-----------|-------------------|
// | {orig_country}	| Original Country Name	|
// | {orig_circle}	| From which circle, number does belong originally	|
// | {orig_cprefix}	| Original Country Prefix	|
// | {orig_nprefix}	| Original Network Prefix	|
// | {orig_code}	| Original geographical circle code	|
// | {is_roaming}	| Whether number is in roaming or not	|
// | {roaming_network}	| Roaming Network Name	|
// | {roaming_country}	| Roaming Country Name	|
// | {roaming_circle}	| In which circle current number is under roaming	|
// | {orig_network}	| Original Network Name	|
// | {roaming_cprefix}	| Roaming Country Prefix	|
// | {roaming_nprefix}	| Roaming Network Prefix	|
// | {roaming_code}	| Geographical roaming circle code	|
// | {is_ported}	| Whether number has been ported or not	|
// | {ported_network}	| Ported Network Name	|
// | {ported_country}	| Ported Country Name	|
// | {ported_nprefix}	| Ported Network Prefix	|
// | {ported_code}	| Geographical ported circle code	|
// | {mcc}	| Mobile country code used in the combination of mobile network code to uniquely identify an operator	|
// | {mnc}	| Mobile country code used in the combination of mobile network code to uniquely identify an operator	|
// | {imsi}	| 15-digit IMSI number of the mobile subscriber's phone number (MSISDN)	|
// | {ported_circle}	| To which circle this number has been ported	|
// | {ported_cprefix}	| Ported Country Prefix	|
// | {status}	| It indicates the success or failure of your request.	|
// | {smsc}	| SMS Centre number	|
// | {err_code}	| If there is any error or not	|
// 
// 
// ## Response Data
// 
// | Field Name	| Description	|
// |-----------|-------------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | data	| All the responses is wrapped inside data	|
// | Mobile	| Mobile number	|
// | id	| External message ID	|
// 
// ## Mandatory API Specifications
// The mandatory parameters in the HTTP API are tabulated below:

@name("Look up using JSON Data")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{lookup.json}}"
? "to"= "{{to}}"
? 'json'= '{"lookup": [{
"to": "{{to}}"
}, {
"to": "{{to}}"
}], "dlrurl": "http://www.example.com/dlr.php/......"
}'


// # What can you do with this API?
// Through this API, you'll be able to perform LookUp to access HLR information for single or multiple numbers using XML/JSON data.
// 
// ## API to Lookup using JSON Data
// 	
// 	https://api-alerts.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX&method=lookup.json&to=92xxxxxxxx&json=%3A%2F%2Fdomain.net%2F.......
// 
// ## API to Lookup using XML Data
// 	
// 	https://api-alerts.kaleyra.com/v4/?api_key=Ad9e5XXXXXXXXXXXXX&method=lookup.xml&to=92xxxxxxxx&xml=%3A%2F%2Fdomain.net%2F.......
// # Prerequisites
// 
// 1. Valid Mobile Number(s)
// 2. XMl/JSON Data
// 
// ## Sample DLR URL
// 	
// 	http%3A%2F%2Fdomain.net%2Fdlr%2Ftrigger.php%3Forig_network%3D%7Borig_network%7D%26orig_country%3D%7Borig_country%7D%26orig_circle%3D%7Borig_circle%7D%26%0D%0Aorig_cprefix%3D%7Borig_cprefix%7D%26orig_nprefix%3D%7Borig_nprefix%7D%26orig_code%3D%7Borig_code%7D%26is_roaming%3D%7Bis_roaming%7D%26roaming_network%3D%7Broaming_network%7D%26roaming_country%3D%7Broaming_country%7D%26roaming_circle%3D%7Broaming_circle%7D%26roaming_cprefix%3D%7Broaming_cprefix%7D%26roaming_nprefix%3D%7Broaming_nprefix%7D%26roaming_code%3D%7Broaming_code%7D%26is_ported%3D%7Bis_ported%7D%26ported_network%3D%7B+ported_network%7D%26ported_country%3D%7Bported_country%7D%26ported_circle%3D%7Bported_circle%7D%26ported_cprefix%3D%7Bported_cprefix%7D%26ported_nprefix%3D%7Bported_nprefix%7D%26ported_code%3D%7Bported_code%7D%26mcc%3D%7Bmcc%7D%26mnc%3D%7Bmnc%7D%26imsi%3D%7Bimsi%7D%26status%3D%7Bstatus%7D%26smsc%3D%7Bsmsc%7D%26err_code%3D%7Berr_code%7D
// 
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional API Parameters
// The Optional parameter in HTTP API is tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// 
// 
// ## Custom XML/JSON Tags
// 
// | Field Name	| Description	|
// |-----------|-------------------|
// | {orig_country}	| Original Country Name	|
// | {orig_circle}	| From which circle, number does belong originally	|
// | {orig_cprefix}	| Original Country Prefix	|
// | {orig_nprefix}	| Original Network Prefix	|
// | {orig_code}	| Original geographical circle code	|
// | {is_roaming}	| Whether number is in roaming or not	|
// | {roaming_network}	| Roaming Network Name	|
// | {roaming_country}	| Roaming Country Name	|
// | {roaming_circle}	| In which circle current number is under roaming	|
// | {orig_network}	| Original Network Name	|
// | {roaming_cprefix}	| Roaming Country Prefix	|
// | {roaming_nprefix}	| Roaming Network Prefix	|
// | {roaming_code}	| Geographical roaming circle code	|
// | {is_ported}	| Whether number has been ported or not	|
// | {ported_network}	| Ported Network Name	|
// | {ported_country}	| Ported Country Name	|
// | {ported_nprefix}	| Ported Network Prefix	|
// | {ported_code}	| Geographical ported circle code	|
// | {mcc}	| Mobile country code used in the combination of mobile network code to uniquely identify an operator	|
// | {mnc}	| Mobile country code used in the combination of mobile network code to uniquely identify an operator	|
// | {imsi}	| 15-digit IMSI number of the mobile subscriber's phone number (MSISDN)	|
// | {ported_circle}	| To which circle this number has been ported	|
// | {ported_cprefix}	| Ported Country Prefix	|
// | {status}	| It indicates the success or failure of your request.	|
// | {smsc}	| SMS Centre number	|
// | {err_code}	| If there is any error or not	|
// 
// 
// ## Response Data
// 
// | Field Name	| Description	|
// |-----------|-------------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | data	| All the responses is wrapped inside data	|
// | Mobile	| Mobile number	|
// | id	| External message ID	|
// 
// ## Mandatory API Specifications
// The mandatory parameters in the HTTP API are tabulated below:

@name("Look up using XML Data")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{lookup.xml}}"
? "to"= "{{phone_number}}"
? 'xml'= '<?xml version="1.0" encoding="UTF-8"?>
<xmlapi>
<dlrurl>
   <![CDATA[http://domain.com/dlr.php]]>
</dlrurl>
<lookup>
  <to>{{to}}</to>
</lookup>
</xmlapi>'


// # What can you do with this API?
// Txtly is basically a shortened URL which can be used within text messages so that SMS would not exceed the specified characters.
// 
// > NOTE: It is mandatory to either provide a URL or attachment that has to be compressed to a short link
// ### Txtly {advanced} token
// 
// If Txtly URL has been sent via SMS to customers with analytics enabled, then this will be valid only for 3days. After 3 days, user will be redirected to the valid URL but their mobile numbers would not be captured.
// 
// # Prerequisites
// 
// 1. An API Key
// 2. Sender ID
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional API Parameters
// The Optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | Format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// | Token	| http://msg.mn/heel Here heel is the token. It is unique for each txtly	| This can be customized word representing your brand/company. If not provided a random unique token is generated	|
// | Title	| A significant title to your txtly	| If not provided, your txtly will not contain any title	|
// | Advanced	| advanced analytics gives an option to track who (Recipient mobile numbers) visited the page	| 1- will enable advanced analytics/0(default) - will disable advanced analytics.	|
// | Track	| Location Track gives the city and state details of URL visitor	| 1- will enable location tracking/0(default) - will disable location tracking	|
// | Attach	| Media file that requires to be compressed to a short link.	| Provide the media file in a CURL request	|
// 
// ## Example Error Response (JSON)
// 
// 	{
//     "status": "E500",
//     "message": "Please provide url to redirect"
// 	}
// 
// ## Example Error Response (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8" ?>
// 	<api>
//     <status>E500</status>
//     <message>Please provide url to redirect</message>
// 	</api>
// 
// ## Response Data
// 
// | Field	| Description	|
// |-------|---------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | token	| Returns the unique token of that txtly	|
// | txtly	| compressed url that is ready to use	|
// | id	| ID of the txtly created	|
// 
// 
// ## Mandatory API Specifications
// The mandatory parameters in the HTTP API are tabulated below:

@name("Create a Txtly Link")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{txtly.create}}"
? "url"= "txtly_url"
? "token"= "{{name}}"
? "title"= "{{name}}"
? "advanced"= "1"


// # What can you do with this API?
// Through this API, you can extract the reports of all the Txtly links that have been shortened in your account. At once, user may pull maximum 25 Txtly reports.
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional API Parameters
// The Optional parameter in the HTTP API is tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// | page	| Page number to fetch Txtly reports from a particular page	| 1 or more (1 page can contain maximum 25 Txtly reports)	|
// 
// ## Mandatory API Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Extract Txtly Reports")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{txtly}}"
? "app"= "1"



// # What can you do with this API?
// Through this API, you can pull out event logs for a particular Txtly URL. You must have created and executed any Txtly campaign so as to track its views/clicked logs.
// 
// 
// # Prerequisites
// 1. An active API Key
// 2. Txtly ID
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Mandatory API Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Pull Individual Txtly Logs")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{txtly.logs}}"
? "id"= "{{id}}"
? "app"= "1"



// # What can you do with this API?
// This API enables you to delete the created Txtly web link. If Txtly URL got deleted, then user wont be able to use it and redirect anywhere.
// 
// > User must have a Txtly ID to delete the associated Txtly URL from the database.
// 
// # Prerequisites
// 1. An active API Key
// 2. Txtly ID
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional API parameters
// The Optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | format	| Output format should be as specified by this variable	| XML/PHP/JSON/JSONP. Default response will be in JSON	|
// 
// ## Example Error Response (JSON)
// 
// 	{
//     "status": "ERROR",
//     "message": "Id entered not exits with this api user", "data": []
// 	}
// 
// ## Example Error Response (XML)
// 
// 	<?xml version="1.0" encoding="UTF-8" ?>
// 	<api>
//     <status>ERROR</status>
//     <message>Id entered not exits with this api user</message>
//     <data></data>
// 	</api>
// 
// ## Response Data
// 
// | Field	| Description	|
// |-------|---------------|
// | status	| It indicates the success or failure of your request.	|
// | message	| It indicates the success or failure message.	|
// | data	| All the responses is wrapped inside data	|
// 
// ## Mandatory API Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Delete a Txtly Link")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{txtly}}"
? "task"= "delete"
? "id"= "{{id}}"
? "app"= "1"



// # What can you do with this API?
// Through Email API, you can send email to multiple contacts, schedule emails and track analytics of such emails. You can use any of the following email content parameters while executing email campaigns:
// ### Email Content Parameters
// 1. Text - plain text content to be sent
// 2. Html - full html content to be sent
// 3. Template – pre-defined template to be used
// ### Multiple Email ID
// 
// > If you have added multiple email IDs in a single parameter, then system will pick the last email ID.
// 	
// Example: To[0][email]= recipient_one@example.com , To[0][email]= recipient_two@example.com To[0][email]= recipient_three@example.com To[0][email]= recipient_four@example.com, then in this case, system will send an email to recipient_four@example.com.
// 	
// ### Email Sequencing
// 
// > Email IDs must be in the following format & sequence only:
// To[0][email]= recipient_one@example.com , To[1][email]= recipient_two@example.com To[2][email]= recipient_three@example.com To[3][email]= recipient_four@example.com
// 
// ### Mapping Email Parameters
// 
// > Parameters will be be mapped in the following way while sending emails: To[0][email]= recipient_one@example.com & to[0][name]=Recipient One To[1][email]= recipient_two@example.com & to[1][name]=Recipient Two
// 
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | To[0][name]	| Name of recipient to be shown in email; Can also be used for multiple recipients associated with email IDs like To[1][name], to[2][name],etc	| To whom you want to send email(s); Recipient name(s)	|
// | From[name]	| Who has sent this email(s) i.e. Sender Name to be shown in email	| Sender name so that recipients must know that you have sent email(s)	|
// | format	| XML/PHP/JSON/JSONP.	| In which format you want to see the response. Default response will be in JSON	|
// | time	| YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	| Date and time need to be mentioned; when you want to schedule an email.	|
// | name	| Campaign name	| You may give any name to this email campaign	|
// 
// ## Mandatory API Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send an Email")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{email}}"
? "task"= "delete"
? "id"= "{{id}}"
? "app"= "1"



// # What can you do with this API?
// Through this API, you'll be able to send an email using a predefined Template format.
// 
// Here is an API format to send email using the pre-defined templates created using “Template” feature under E mailer menu. If you use any specific templates, then you may skip Text or HTML parameter i.e. Body of an email as system will pick the template content for body of an email. 
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | Template[id]	| Template ID (numeric value) for specific template	| Use this template ID for pre-defined templates created in the application; template will be applied to outgoing email campaign	|
// | Files[]	| Attachment upto 10Mb	| Attach any file to be sent to recipients; Recipients will receive emails along with the attachments upto 10Mb	|
// | To[0][name]	| Name of recipient to be shown in email; Can also be used for multiple recipients associated with email IDs like To[1][name], to[2][name],etc	| To whom you want to send email(s); Recipient name(s)	|
// | From[name]	| Who has sent this email(s) i.e. Sender Name to be shown in email	| Sender name so that recipients must know that you have sent email(s)	|
// | format	| XML/PHP/JSON/JSONP.	| In which format you want to see the response. Default response will be in JSON	|
// | time	| YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	| Date and time need to be mentioned; when you want to schedule an email.	|
// | name	| Campaign name	| You may give any name to this email campaign	|
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send an Email Template")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{email}}"
? "format"= "xml"
? "subject"= "Kaleyraemail"
? "to[0][email]"= "{{emailid}}"
? "to[0][name]"= "{{name}}"
? "from[email]"= "{{emailid}}"



// # What can you do with this API?
// You can send an email with media and attachments through this API. 
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | Files[]	| Attachment upto 10Mb	| Attach any file to be sent to recipients; Recipients will receive emails along with the attachments upto 10Mb	|
// | To[0][name]	| Name of recipient to be shown in email; Can also be used for multiple recipients associated with email IDs like To[1][name], to[2][name],etc	| To whom you want to send email(s); Recipient name(s)	|
// | From[name]	| Who has sent this email(s) i.e. Sender Name to be shown in email	| Sender name so that recipients must know that you have sent email(s)	|
// | format	| XML/PHP/JSON/JSONP.	| In which format you want to see the response. Default response will be in JSON	|
// | time	| YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	| Date and time need to be mentioned; when you want to schedule an email.	|
// | name	| Campaign name	| You may give any name to this email campaign	|
// 
// ## Mandatory API Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send an Email with Attachment")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{email}}"
? "format"= "xml"
? "subject"= "Kaleyraemail"
? "to[0][email]"= "{{emailid}}"
? "to[0][name]"= "{{name}}"
? "from[email]"= "{{emailid}}"
? "text"= "{{hello world}} world}}"
? "from[name]"= "{{name}}"
? "files[]"= "sdfrt12.png'"



// # What can you do with this API?
// Through this API, you can apply CSS styles to such HTML content based emails and your outgoing mail will adopt these styles across all recipients.
// 
// # API Parameter Specifications
// The API parameter specifications are described in the following sections.
// 
// ## Optional Parameters
// The optional parameters in the HTTP API are tabulated below:
// 
// | Parameter	| Description	| Expected Value	|
// |-----------|---------------|-------------------|
// | Template[id]	| Template ID (numeric value) for specific template	| Use this template ID for pre-defined templates created in the application; template will be applied to outgoing email campaign	|
// | Files[]	| Attachment upto 10Mb	| Attach any file to be sent to recipients; Recipients will receive emails along with the attachments upto 10Mb	|
// | To[0][name]	| Name of recipient to be shown in email; Can also be used for multiple recipients associated with email IDs like To[1][name], to[2][name],etc	| To whom you want to send email(s); Recipient name(s)	|
// | From[name]	| Who has sent this email(s) i.e. Sender Name to be shown in email	| Sender name so that recipients must know that you have sent email(s)	|
// | format	| XML/PHP/JSON/JSONP.	| In which format you want to see the response. Default response will be in JSON	|
// | time	| YYYY-MM-DD HH:mm:SS OR YYYY-MM-DD HH:MM AM/PM	| Date and time need to be mentioned; when you want to schedule an email.	|
// | name	| Campaign name	| You may give any name to this email campaign	|
// 
// ## Expected API Error Codes
// 
// | Code	| Description	|
// |-------|---------------|
// | E601	| Missing recipient	|
// | E602	| Invalid Template	|
// | E603	| Missing message	|
// | E604	| Invalid schedule time. Minimum 5minutes time gap is required.	|
// | E606	| Unable to find gateway to send email	|
// | E607	| No valid email address found	|
// | E609	| Unable to write to temp files	|
// | E610	| Unable to process your request. try again	|
// | E599	| Missing From address	|
// | A401B	| Method not found	|
// | E600	| Missing Subject	|
// | A402	| API key not found	|
// 
// ## Mandatory Parameters
// The mandatory parameters in the HTTP API are tabulated below:

@name("Send a HTML Email")
GET "https://{{base_url}}/{{version}}/"
? "api_key"= "{{api_key}}"
? "method"= "{{email}}"
? "format"= "xml"
? "subject"= "Kaleyraemail"
? "to[0][email]"= "{{emailid}}"
? "to[0][name]"= "{{name}}"
? "from[email]"= "{{emailid}}"
? "from[name]"= "{{name}}"
? "files[]"= "sdfrt12.png"
? "template[id]"= "{{id}}"
? 'html'= ' <div class="form-group"> <label for="password"> Password </label> <input type="password" name="password" class="form-control" required="required" placeholder="Enter your password" autocomplete="off" /> <a href="http://<domainURL/members/resetpass" id="forgot-password">Forgot?</a> </div>'




