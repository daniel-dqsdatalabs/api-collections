#!/usr/bin/env dothttp

// To invoke the `ring` command, the `ring` attribute must be updated in the context.
// 
// If you are viewing the device monitor page, you can also see the state of the bell change.
// 
// ![](https://fiware.github.io/tutorials.IoT-Agent/img/bell-ring.gif)

@name("Turn on the Irrigation System")
PATCH "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:Device:water001/attrs/on"
"NGSILD-Tenant": "openiot"
"NGSILD-Path": "/"
"Content-Type": "application/json"
"Link": "<{{ngsi-context.jsonld}}>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json""
data('{ 

		"type": "Property", 
		"value": " " 

}')


// To invoke the `ring` command, the `ring` attribute must be updated in the context.
// 
// If you are viewing the device monitor page, you can also see the state of the bell change.
// 
// ![](https://fiware.github.io/tutorials.IoT-Agent/img/bell-ring.gif)

@name("Turn off the Irrigation System")
PATCH "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:Device:water001/attrs/off"
"NGSILD-Tenant": "openiot"
"NGSILD-Path": "/"
"Content-Type": "application/json"
"Link": "<{{ngsi-context.jsonld}}>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json""
data('{ 

		"type": "Property", 
		"value": " " 

}')


// The result of the command to ring the bell can be read by querying the entity within the Orion Context Broker. 
// 
// The `TimeInstant` shows last the time any command associated with the entity has been invoked. the result of `ring` command can be see in the value of the `ring_info` attribute

@name("Irrigation Status")
GET "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:Device:water001"
"NGSILD-Tenant": "openiot"
"NGSILD-Path": "/"
"Link": "<{{ngsi-context.jsonld}}>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json""
"Accept": "application/json"



