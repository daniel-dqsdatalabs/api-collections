#!/usr/bin/env dothttp

// This endpoint retrieves POS terminal data by its terminal ID.// // // #### URL Parameters// // | Parameter |Type |Description  |// |--|--|--|// | bterminalID|string |`Required` The terminal ID of the POS device|
@name("Get POS by Terminal Id")
GET "https://{{url}}/v1/pos/{terminalId}"
"Content-Type": "application/json"


// This endpoint retrieves data of POS terminals beloging to a specific merchant identified by the merchant ID.// // // #### URL Parameters// // | Parameter |Type |Description  |// |--|--|--|// | merchantID|string |`Required` The unique identifier for the merchant who owns the POS device|
@name("Get POS by Merchant Id")
GET "https://{{url}}/v1/pos/merchant/{merchantId}"


// This endpoint retrieves data of POS terminals tied to a specific branch identified by its branch ID.// // `This endpoint supports paging`// // // #### URL Parameters// // | Parameter |Type |Description  |// |--|--|--|// | branchID|string |`Required` This is a ID of the branch whose POS terminals you want to get|
@name("Get POS by Branch")
GET "https://{{url}}/v1/pos/branch/{branchId}"


// This endpoint retrieves data of POS terminals within a specific location identied by its longtitude and lattitude.// // `This endpoint supports paging`// // // #### Query Parameters// | Parameter|Type |Description  |// |--|--|--|// | longitude |Decimal |`Optional`  geographic coordinates|// | latitude |Decimal |`Optional`  geographic coordinates|// | radius|integer |`Optional`   circular distance, in meters, around the co-ordinate|
@name("Get POS by Location")
GET "https://{{url}}/v1/pos"
"Content-Type": "application/json"
? "latitude"= "{{latitude}}"
? "longitude"= "{{longitude}}"
? "radius"= "{{radius}}"



