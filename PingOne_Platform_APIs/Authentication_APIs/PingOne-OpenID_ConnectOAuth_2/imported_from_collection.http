#!/usr/bin/env dothttp

@name("Discovery OpenID Configuration")
GET "https://{{authPath}}/{{envID}}/as/.well-known/openid-configuration"


@name("Authorize (authorization_code)")
GET "https://{{authPath}}/{{envID}}/as/authorize"
? "response_type"= "code"
? "client_id"= "{{appID}}"
? "redirect_uri"= "https://example.com"
? "scope"= "openid profile p1:read:user"
? "nonce"= "<nonce value>"
? "state"= "<state value>"
? "prompt"= "login"
? "max_age"= "3600"
? "acr_values"= "Single_Factor"


@name("Authorize (authorization_code)")
POST "https://{{authPath}}/{{envID}}/as/authorize"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "response_type": [
        "code"
    ],
    "client_id": [
        "{{appID}}"
    ],
    "redirect_uri": [
        "https://example.com"
    ],
    "scope": [
        "openid profile p1:read:user"
    ],
    "state": [
        "<state value>"
    ],
    "response_mode": [
        "fragment"
    ],
    "nonce": [
        "<nonce value>"
    ],
    "prompt": [
        "login"
    ],
    "max_age": [
        "3600"
    ],
    "acr_values": [
        "Single_Factor"
    ]
})


@name("Authorize (implicit)")
GET "https://{{authPath}}/{{envID}}/as/authorize"
? "response_type"= "token"
? "client_id"= "{{appID}}"
? "redirect_uri"= "{{redirectURI}}"
? "scope"= "openid profile p1:read:user"
? "nonce"= "123"
? "state"= "<state value>"
? "prompt"= "login"
? "max_age"= "3600"
? "acr_values"= "Single_Factor"


@name("Authorize (implicit)")
POST "https://{{authPath}}/{{envID}}/as/authorize"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "response_type": [
        "token"
    ],
    "client_id": [
        "{{appID}}"
    ],
    "redirect_uri": [
        "https://example.com"
    ],
    "scope": [
        "openid profile p1:read:user"
    ],
    "nonce": [
        "123"
    ],
    "state": [
        "<state value>"
    ],
    "prompt": [
        "login"
    ],
    "max_age": [
        "3600"
    ],
    "acr_values": [
        "Single_Factor"
    ]
})


@name("Admin User /authorize")
GET "https://{{authPath}}/{{envID}}/as/authorize"
? "response_type"= "token"
? "client_id"= "adminui"
? "redirect_uri"= "https://console.pingone.com/index.html"
? "scope"= "openid"


@name("Resume")
GET "https://{{authPath}}/{{envID}}/as/resume"
"Cookie": "{{sessionToken}}"
? "flowId"= "{{flowID}}"


@name("Token (authorization_code)")
POST "https://{{authPath}}/{{envID}}/as/token"
basicauth("{{appID}}", "{{appSecret}}")
"Content-Type": "application/x-www-form-urlencoded"
data({
    "grant_type": [
        "authorization_code"
    ],
    "code": [
        "{{authCode}}"
    ],
    "redirect_uri": [
        "https://example.com"
    ],
    "client_id": [
        "{{appID}}"
    ],
    "client_secret": [
        "{{appSecret}}"
    ]
})


@name("Token Admin App (client_credentials)")
POST "https://{{authPath}}/{{envID}}/as/token"
basicauth("{{adminAppID}}", "{{adminAppSecret}}")
"Content-Type": "application/x-www-form-urlencoded"
data({
    "grant_type": [
        "client_credentials"
    ],
    "client_id": [
        "{{adminAppID}}"
    ],
    "client_secret": [
        "{{adminAppSecret}}"
    ]
})


@name("Token Introspection (Access Token)")
POST "https://{{authPath}}/{{envID}}/as/introspect"
basicauth("{{appID}}", "{{appSecret}}")
"Content-Type": "application/x-www-form-urlencoded"
data({
    "token": [
        "{{accessToken}}"
    ],
    "client_id": [
        "{{appID}}"
    ],
    "client_secret": [
        "{{appSecret}}"
    ]
})


@name("Token Introspection (ID Token)")
POST "https://{{authPath}}/{{envID}}/as/introspect"
basicauth("{{appID}}", "{{appSecret}}")
"Content-Type": "application/x-www-form-urlencoded"
data({
    "token": [
        "{{idToken}}"
    ],
    "client_id": [
        "{{appID}}"
    ],
    "client_secret": [
        "{{appSecret}}"
    ]
})


@name("Token Introspection (Refresh Token)")
POST "https://{{authPath}}/{{envID}}/as/introspect"
basicauth("{{appID}}", "{{appSecret}}")
"Content-Type": "application/x-www-form-urlencoded"
data({
    "token": [
        "{{refreshToken}}"
    ],
    "client_id": [
        "{{appID}}"
    ],
    "client_secret": [
        "{{appSecret}}"
    ]
})


@name("Token Revocation")
POST "https://{{authPath}}/{{envID}}/as/revoke"
basicauth("{{appID}}", "{{appSecret}}")
"Content-Type": "application/x-www-form-urlencoded"
data({
    "token": [
        "{{oauthToken}}"
    ],
    "client_id": [
        "{{appID}}"
    ],
    "client_secret": [
        "{{appSecret}}"
    ]
})


@name("Userinfo")
GET "https://{{authPath}}/{{envID}}/as/userinfo"


@name("Userinfo")
POST "https://{{authPath}}/{{envID}}/as/userinfo"



// This will only sign off a session if a valid Session Token cookie (ST={sessionToken}) is included with the request. If one is not included, then the 2nd test will fail.

@name("Signoff")
GET "https://{{authPath}}/{{envID}}/as/signoff"
"Cookie": "{{sessionToken}}"
? "id_token_hint"= "{{idToken}}"
? "post_logout_redirect_uri"= "https://example.com"
? "state"= "<state value>"


@name("READ JWKS")
GET "https://{{authPath}}/{{envID}}/as/jwks"



