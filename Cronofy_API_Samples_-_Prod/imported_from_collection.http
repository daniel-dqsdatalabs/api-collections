#!/usr/bin/env dothttp

// Get information about the Cronofy account. 
// 
// Use this to obtain the `sub` value for the account and update in the environment variables.
// 
// https://docs.cronofy.com/developers/api/identity/userinfo/

@name("UserInfo")
GET "https://api.cronofy.com/v1/userinfo"


// Read the list of calendars across all the users calendar profiles.
// 
// https://docs.cronofy.com/developers/api/calendars/list-calendars/

@name("List Calendars")
GET "https://api.cronofy.com/v1/calendars"
"Authorization": "Bearer {{token}}"


// Read Events for all calendars between two **dates**.
// 
// Includes managed events, ie events created by your application.
// 
// https://docs.cronofy.com/developers/api/events/read-events/

@name("Read Events")
GET "https://api.cronofy.com/v1/events"
"Authorization": "Bearer {{token}}"
? "tzid"= "{{tzid}}"
? "from"= "{{from}}"
? "to"= "{{to}}"
? "include_managed"= "1"


// Upsert an event into a user's calendar.
// 
// To use this sample you will need to choose a `calendar_id` from the result of the Read Calendars sample and update the `calendar_id` environment value.
// 
// https://docs.cronofy.com/developers/api/events/upsert-event/

@name("Create or Update Event")
POST "https://api.cronofy.com/v1/calendars/{{calendar_id}}/events"
"Authorization": "Bearer {{token}}"
"Content-Type": "application/json"
data('{
    "event_id":"E1234567892",
    "summary":"Meeting about Cronofy 2.0",
    "description":"To discuss about cronofy 2.0",
    "start": "2020-06-07T16:00:00Z",
    "end": "2020-06-07T17:00:00Z",
    "tzid":"{{tzid}}",
    "location":{
        "description":"Phone call"
    },
    "reminders": [
    	{ "minutes": 30 },
    	{ "minutes": 1440 },
    	{ "minutes": 0 }
  ],
  "attendees": {
    "invite": [
      {
        "email": "rajeshkanna@mallow-tech.com",
        "display_name": "Rajesh Kanna R From Mallow"
      }
    ]
  },
  "organizer": {
  	"email": "nylas.rajesh@gmail.com",
    "display_name": "Rajesh Organizer"
  }
}')


// Free busy query for a user across all of their calendars
// 
// https://docs.cronofy.com/developers/api/events/free-busy/

@name("Free Busy")
GET "https://api.cronofy.com/v1/free_busy"
"Authorization": "Bearer {{token}}"
? "tzid"= "{{tzid}}"
? "from"= "{{from}}"
? "to"= "{{to}}"


// Discover availability for one or more people or resources.
// 
// You will need to set the `sub` environment variable obtained from the `UserInfo` request.
// 
// https://docs.cronofy.com/developers/scheduling/

@name("Availability")
POST "https://api.cronofy.com/v1/availability"
"Content-Type": "application/json"
data('{
  "response_format": "periods",
  "participants": [
    {
      "members": [
        { 
        	"sub": "acc_5ed09c11026f9900fc175c1d",
        	"calendar_ids": ["cal_XtiAq8tOBQBiiFCp_6s5HD0B9nis8o6UDNWgTlw"],
          "availability_rule_ids": ["0b8b1c176393948f7"],
          "managed_availability": true,
          "buffer": {
            "before": { "minutes": 15 },
            "after": { "minutes": 15 }
            }
        }
      ],
      "required": "all"
    }
  ],
  "required_duration": { "minutes": 60 },
  "available_periods": [
    {"end": "2020-06-23T17:00:00Z", "start": "2020-06-22T09:00:00Z"},
    {"end": "2020-06-24T17:00:00Z", "start": "2020-06-23T17:00:00Z"}
  ],
  "tzid": "Asia/Kolakata"
}')


// Generate a real-time booking link to send to people.
// 
// https://docs.cronofy.com/developers/api/scheduling/real-time-scheduling/

@name("Real-Time Scheduling")
POST "https://api.cronofy.com/v1/real_time_scheduling"
"Content-Type": "application/json"
data('{
  "client_id": "{{client_id}}",
  "client_secret": "{{client_secret}}",
  "oauth": {
    "redirect_uri": "https://save-post.herokuapp.com"
  },
  "event": {
    "event_id":"E1234567810",
    "summary":"Cronofy Official Meeting 10.0",
    "tzid": "{{tzid}}"
},
  "availability": {
    "participants": [
      {
        "members": [
          {
            "sub": "{{sub}}",
    		"calendar_id": "{{calendar_id}}"
          }
        ],
        "required": "all"
      }
    ],
    "required_duration": { "minutes": 60 },
    "available_periods": [
      {
      	"start": "2020-06-10T09:00:00Z", 
      	"end": "2020-06-20T18:00:00Z"
      }
    ],
    "buffer": {
    	"before": { "minutes": 15 },
    	"after": { "minutes": 15 }
	}
  },
  "target_calendars": [
    {
      "sub": "{{sub}}",
      "calendar_id": "{{calendar_id}}"
    }
  ],
  "callback_url": "https://great-aep-jumpstart.herokuapp.com/webhooks/send_reminder"
}')


// Generate an authentication token to be used with UI Elements.
// 
// https://docs.cronofy.com/developers/ui-elements/authentication/

@name("Generate UI Element Token")
POST "https://api.cronofy.com/v1/element_tokens"
"Content-Type": "application/json"
data('{
  "version": "1",
  "permissions": ["agenda"],
  "subs": ["{{sub}}"],
  "origin": "http://localhost"
}')


@name("Auth Token")
POST "https://app.cronofy.com/oauth/token"
"Content-Type": "application/json"
? "client_id"= "{{client_id}}"
? "client_secret"= "{{client_secret}}"
? "grant_type"= "authorization_code"
? "code"= "wVD2rZn5xpuuGJeg9JG8gRSXUjBJFLYy"
? "redirect_uri"= "https://save-post.herokuapp.com"


@name("available_periods")
GET "https://api.cronofy.com/v1/available_periods"
"Content-Type": "application/json"



@name("Account identity")
GET "https://api.cronofy.com/v1/account"


@name("Profiles identity")
GET "https://api.cronofy.com/v1/profiles"


@name("List Channel")
GET "https://api.cronofy.com/v1/channels"
"Content-Type": "application/json"



@name("Change participant status")
POST "https://api.cronofy.com/v1/calendars/cal_XtiAq8tOBQBiiFCp_6s5HD0B9nis8o6UDNWgTlw/events/evt_partner_5ef0e33ff756303cec75acb1/participation_status"
"Content-Type": "application/json"
"charset": ""
data('{
    "status": "accepted"
}')



