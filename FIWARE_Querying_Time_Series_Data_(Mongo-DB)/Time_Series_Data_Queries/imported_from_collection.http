#!/usr/bin/env dothttp

// This example shows the first 3 sampled `luminosity` values from `Lamp:001`. 
// 
// To obtain the short term history of a context entity attribute, send a GET request to
// `../STH/v1/contextEntities/type/<Entity>/id/<entity-id>/attributes/<attribute>`
// 
// the `hLimit` parameter restricts the result to N values. `hOffset=0` will start with the first value.

@name("List  the first N Sampled Values")
GET "http://{{sth-comet}}/STH/v1/contextEntities/type/Lamp/id/Lamp:001/attributes/luminosity"
"Content-Type": "application/json"
"fiware-service": "openiot"
"fiware-servicepath": "/"
? "hLimit"= "3"
? "hOffset"= "0"



// This example shows the fourth, fifth and sixth sampled `count` values from `Motion:001`. 
// 
// To obtain the short term history of a context entity attribute, send a GET request to
// `../STH/v1/contextEntities/type/<Entity>/id/<entity-id>/attributes/<attribute>`
// 
// the `hLimit` parameter restricts the result to N values. 
// Setting `hOffset` to a non-zero value will start from the Nth measurement

@name("List N Sampled Values at an Offset")
GET "http://{{sth-comet}}/STH/v1/contextEntities/type/Motion/id/Motion:001/attributes/count"
"Content-Type": "application/json"
"fiware-service": "openiot"
"fiware-servicepath": "/"
? "hLimit"= "3"
? "hOffset"= "3"



// This example shows latest three sampled `count` values from `Motion:001`. 
// 
// To obtain the short term history of a context entity attribute, send a GET request to
// `../STH/v1/contextEntities/type/<Entity>/id/<entity-id>/attributes/<attribute>`
// 
// if the `lastN` parameter is set, the result will return the N latest measurements only.

@name("List the latest N sampled Values")
GET "http://{{sth-comet}}/STH/v1/contextEntities/type/Motion/id/Motion:001/attributes/count"
"Content-Type": "application/json"
"fiware-service": "openiot"
"fiware-servicepath": "/"
? "lastN"= "3"



// This example shows total `count` values from `Motion:001` over each minute
// 
// To obtain the short term history of a context entity attribute, send a GET request to
// `../STH/v1/contextEntities/type/<Entity>/id/<entity-id>/attributes/<attribute>`
// 
// The `aggrMethod` parameter determines the type of aggregation to perform over the time series, 
// the `aggrPeriod` is one of `second`, `minute`, `hour` or `day`. 
// 
// Always select the most appropiate time period based on the frequency of your data collection.
// `minute` has been selected because the `Motion:001` is firing a few times within each minute.

@name("List the Sum of Values over a time period")
GET "http://{{sth-comet}}/STH/v1/contextEntities/type/Motion/id/Motion:001/attributes/count"
"Content-Type": "application/json"
"fiware-service": "openiot"
"fiware-servicepath": "/"
? "aggrMethod"= "sum"
? "aggrPeriod"= "minute"
? "dateFrom"= "2018-01-01T00:00:00.000Z"
? "dateTo"= "2019-12-31T00:00:00.000Z"



// This example shows minimum `luminosity` values from `Lamp:001` over each minute
// 
// To obtain the short term history of a context entity attribute, send a GET request to
// `../STH/v1/contextEntities/type/<Entity>/id/<entity-id>/attributes/<attribute>`
// 
// The `aggrMethod` parameter determines the type of aggregation to perform over the time series, 
// the `aggrPeriod` is one of `second`, `minute`, `hour` or `day`. 
// 
// The luminocity of the **Smart Lamp** is continually changing and therefore tracking the minimum value makes sense.
// The **Motion Sensor** is not suitable for this as it only offers binary values.

@name("List the Minimum Values over a time period")
GET "http://{{sth-comet}}/STH/v1/contextEntities/type/Lamp/id/Lamp:001/attributes/luminosity"
"Content-Type": "application/json"
"fiware-service": "openiot"
"fiware-servicepath": "/"
? "aggrMethod"= "min"
? "aggrPeriod"= "minute"
? "dateFrom"= "2018-01-01T00:00:00.000Z"
? "dateTo"= "2019-12-31T00:00:00.000Z"



// This example shows maximum `luminosity` values from `Lamp:001` over each minute
// 
// To obtain the short term history of a context entity attribute, send a GET request to
// `../STH/v1/contextEntities/type/<Entity>/id/<entity-id>/attributes/<attribute>`
// 
// The `aggrMethod` parameter determines the type of aggregation to perform over the time series, 
// the `aggrPeriod` is one of `second`, `minute`, `hour` or `day`.

@name("List the Maximum Values over a time period")
GET "http://{{sth-comet}}/STH/v1/contextEntities/type/Lamp/id/Lamp:001/attributes/luminosity"
"Content-Type": "application/json"
"fiware-service": "openiot"
"fiware-servicepath": "/"
? "aggrMethod"= "max"
? "aggrPeriod"= "minute"
? "dateFrom"= "2018-01-01T00:00:00.000Z"
? "dateTo"= "2019-12-31T00:00:00.000Z"



// Querying for the mean value within a time period is not directly supported.
// This example shows sum of `luminosity` values from `Lamp:001` over each minute.
// When combined with the number of samples the within the time period an average can be calculated from the data.
// 
// To obtain the short term history of a context entity attribute, send a GET request to
// `../STH/v1/contextEntities/type/<Entity>/id/<entity-id>/attributes/<attribute>`
// 
// The `aggrMethod` parameter determines the type of aggregation to perform over the time series, 
// the `aggrPeriod` is one of `second`, `minute`, `hour` or `day`.

@name("List Average Values over a time period")
GET "http://{{sth-comet}}/STH/v1/contextEntities/type/Lamp/id/Lamp:001/attributes/luminosity"
"Content-Type": "application/json"
"fiware-service": "openiot"
"fiware-servicepath": "/"
? "aggrMethod"= "sum"
? "aggrPeriod"= "minute"
? "dateFrom"= "2018-01-01T00:00:00.000Z"
? "dateTo"= "2019-12-31T00:00:00.000Z"




