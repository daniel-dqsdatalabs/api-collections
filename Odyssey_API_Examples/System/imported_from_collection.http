#!/usr/bin/env dothttp

// # Get Module Access
// ---
// 
// This method will allow you to determine whether your organization has access to a given module.
// 
// # Parameters
// ---
// 
// **Module** - Type *String* **:**
// The two-character module code.
// 
// **CompanyID** - Type *String* **:** 
// This is the Company that you are logging into. Your user that you are logging into Odyssey with must have access to this company. You can fetch records from any company, based your query.

@name("/GetModuleAccess")
POST "https://{{ServerPath}}/System/GetModuleAccess"
"X-API-Key": "{{APIKey}}"
"Content-Type": "application/json"
data('{
  "CompanyID": "{{CompanyID}}",
  "Module": "SC"
}')


// # Print Queue Complete Status
// ---
// 
// This method marks the given print job as complete.
// 
// # Parameters
// ---
// 
// **JobID** - Type *Integer* **:** 
// The print job ID to complete.
// 
// **CompanyID** - Type *String* **:** 
// This is the Company that you are logging into. Your user that you are logging into Odyssey with must have access to this company. You can fetch records from any company, based your query.

@name("/PrintQueueAdmin/Complete")
POST "https://{{ServerPath}}/System/PrintQueueAdmin/Complete"
"X-API-Key": "{{APIKey}}"
"Content-Type": "application/json"
data('{
  "JobID": 1234,
  "CompanyID":"{{CompanyID}}"
}')


// # Print Queue Start Job
// ---
// 
// This endpoint attempts to start the given print job.
// 
// # Parameters
// ---
// 
// **JobID** - Type *Integer* **:** 
// The print job ID to start.
// 
// **CompanyID** - Type *String* **:** 
// This is the Company that you are logging into. Your user that you are logging into Odyssey with must have access to this company. You can fetch records from any company, based your query.

@name("/PrintQueueAdmin/StartJob")
POST "https://{{ServerPath}}/System/PrintQueueAdmin/StartJob"
"X-API-Key": "{{APIKey}}"
"Content-Type": "application/json"
data('{
  "JobID": 1234,
  "CompanyID":"{{CompanyID}}"
}')


// # Get the System Time
// ---
// 
// This endpoint returns UTC date and time of the server in ISO format
// 
// # Parameters
// ---
// 
// **CompanyID** - Type *String* **:** 
// This optional parameter defines the CompanyID to use for APIKey validation, if using a global APIKey. If your APIKey was generated for a specific company, you do not have to supply this parameter.

@name("/ServerTime")
GET "https://{{ServerPath}}/System/ServerTime"
"X-API-Key": "{{APIKey}}"
"Content-Type": "application/json"
? "CompanyID"= "{{CompanyID}}"



// # Get Error Message Information
// ---
// 
// Gets detailed information about the given Error Message
//     
// # Parameters
// ---
// 
// **ErrorID** - Type *String* **:** 
// The ID of the error message you wish to get information about
// 
// **CompanyID** - Type *String* **:** 
// This optional parameter defines the CompanyID to use for APIKey validation, if using a global APIKey. If your APIKey was generated for a specific company, you do not have to supply this parameter.

@name("/ErrorMessage/{ErrorID}")
GET "https://{{ServerPath}}/System/ErrorMessage/0020"
"X-API-Key": "{{APIKey}}"
"Content-Type": "application/json"
? "CompanyID"= "{{CompanyID}}"



// # Get the API Version
// ---
// 
// This endpoint returns version information about the API.
// 
// This endpoint does not require an APIKey or any validation.
// 
// # Parameters
// ---
// 
// No parameter are required to use this endpoint.

@name("/Version")
GET "https://{{ServerPath}}/System/Version"
"X-API-Key": "{{APIKey}}"
"Content-Type": "application/json"



// # Validate User Credentials
// ---
// 
// This method checks a user ID and password, to see if it is valid.
// 
// # Parameters
// ---
// 
// **Username** - Type *String* **:**
// The username of the user whose credentials you are validating.
// 
// **Password** - Type *String* **:** 
// The password of the user whose credentials you are validating.

@name("/ValidateUsername")
POST "https://{{ServerPath}}/System/ValidateUsername"
"X-API-Key": "{{APIKey}}"
"Content-Type": "application/json"
data('{
  "Username": "userId",
  "Password": "password"
}')



