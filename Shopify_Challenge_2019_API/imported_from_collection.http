#!/usr/bin/env dothttp

// Adds a product to the market and updates the database accordingly.
// 
// Uses querying to send the required parameters:
// 
// name: The name of the product to add
// 
// inventoryCount: the number of products available
// 
// price: the price of the products
// 
// Note: You can't add two items with the same name.

@name("localhost:3000/add?name=${nameOfItem}&inventoryCount=${inventoryCountOfItem}&price=${priceOfItem}")
POST "https://localhost/add"
? "name"= "${nameOfItem}"
? "inventoryCount"= "${inventoryCountOfItem}"
? "price"= "${priceOfItem}"


// list one/multiple product(s) from the market after fetching from database. Displays the information as a JSON
// 
// Uses querying to send the required parameters:
// 
// name(optional): The name of the product to list
// 
// filtered(optional): filter the searches to only in-stock items (boolean)
// 
// Note: -Without a name the server will display all products.
// 	- Without a filtered boolean the default value is false
// 	
// Sample:
// 
// <!--
// {
//     "chair": {
//         "inventoryCount": 0,
//         "name": "chair",
//         "price": "20"
//     },
//     "table": {
//         "inventoryCount": "1",
//         "name": "table",
//         "price": "20"
//     }
// }-->

@name("localhost:3000/list?name=${name}&filtered=${boolean}")
GET "https://localhost/list"
? "name"= "${name}"
? "filtered"= "${boolean}"


// Orders a product from the market and updates the database accordingly.
// 
// Uses querying to send the required parameters:
// 
// name: The name of the product to add
// 
// 
// Note: You can't order an item that is out of stock

@name("localhost:3000/orderItem?name=${name}")
POST "https://localhost/orderItem"
? "name"= "${name}"


// Deletes an item from the market and updates the database accordingly
// 
// Uses querying to send the required parameters:
// 
// name: The name of the product to delete

@name("localhost:3000/delete?name=table")
POST "https://localhost/delete"
? "name"= "${name}"


// Update a product in the market and updates the database accordingly.
// 
// Uses querying to send the required parameters:
// 
// name: The name of the product to updates
// 
// inventoryCount(optional): the number of products available
// 
// price(optional): the new price of the products

@name("localhost:3000/?update=table&price=10")
POST "https://localhost/update"
? "name"= "${name}"
? "price"= "${new price}"
? "inventoryCount"= "${newInventoryCount}"



