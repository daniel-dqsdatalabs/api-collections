#!/usr/bin/env dothttp

// create user using username, password and email

@name("user register")
POST "https://{{baseUrl}}/users/register/"
"Content-Type": "application/json"
json({
    "username": "mohsen",
    "password": "qwer1234",
    "email": "em@em.com"
})


// optain token for a user using username and password

@name("users login")
POST "https://{{baseUrl}}/users/login/"
"Content-Type": "application/json"
"Authorization": ""
json({
    "username": "mohsen",
    "password": "qwer1234"
})


// create a new flight schedule

@name("create flights")
POST "https://{{baseUrl}}/flights/"
"Content-Type": "application/json"
"Authorization": "JWT {{token}}"
json({
    "flight_name": "thr-ist",
    "flight_number": 7777,
    "scheduled_datetime": "2019-06-14T14:17:00",
    "expected_arrival_datetime": "2019-06-14T19:17:00",
    "departure": "thr",
    "destination": "ist",
    "fare": 100,
    "flight_duration": "05:00"
})


// update a flight schedule

@name("update flights")
PUT "https://{{baseUrl}}/flights/{{flightId}}/"
"Authorization": "JWT {{token}}"
"Content-Type": "application/json"
json({
    "flight_name": "ist-osd",
    "flight_number": 7777,
    "scheduled_datetime": "2019-06-14T14:17:00",
    "expected_arrival_datetime": "2019-06-14T19:17:00",
    "departure": "ist",
    "destination": "osd",
    "fare": 100,
    "flight_duration": "05:00"
})


// remove a flight schedule

@name("delete flights")
DELETE "https://{{baseUrl}}/flights/{{flightId}}/"
"Authorization": "JWT {{token}}"


@name("get  a flights")
GET "https://{{baseUrl}}/flights/{{flightId}}/"
"Authorization": "JWT {{token}}"


// search for a flight schedule, user can pass ```flight_name```, ```scheduled_date```
// ```departure```, ```destination``` as url params to search them.

@name("search flights")
GET "https://{{baseUrl}}/flights/"
"Authorization": "JWT {{token}}"
? "flight_name"= "ist-osd"



