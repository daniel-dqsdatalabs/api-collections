#!/usr/bin/env dothttp

// Get a paged list of deals matching any number of criteria, all the following filtering parameters are optional.// // + Parameters// //     + **storeID** `(optional, string)`//     //     Comma separated list of store ID's to filter on, omit for deals from any store//     + **pageNumber** `(optional, integer)` Default `0`//     //     The requested page number, value is 0 indexed.<br/>The `X-Total-Page-Count` HTTP header on the response will give you the max value for this parameter.//     + **pageSize** `(optional, integer)` Default `60`//     //     The size of pages returned, up to `60`//     + **sortBy** `(optional, string)` Default `Deal Rating`//     //     Criteria to sort the list by, possible values -//         + `Deal Rating`//         + `Title`//         + `Savings`//         + `Price`//         + `Metacritic`//         + `Reviews`//         + `Release`//         + `Store`//         + `recent`           // //     + **desc** `(optional, boolean)` Default `0`// // 	Determines sort direction//     + **lowerPrice** `(optional, integer)` Default `0`// // 	Only returns deals with a price *greater than* this value//     + **upperPrice** `(optional, integer)`// // 	Only returns deals with a price *less than or equal* to this value (`50` acts the same as no limit)//     + **metacritic** `(optional, integer)`// // 	Minimum Metacritic rating for a game//     + **steamRating** `(optional, integer)`// // 	Minimum Steam reviews rating for a game//     + **steamAppID** `(optional, string)`// // 	Look for deals on specific games, comma separated list of Steam App ID (still bound by `pageSize`)//     + **title** `(optional, string)`// // 	Looks for the string contained anywhere in the game name//     + **exact** `(optional, boolean)` Default `0`// // 	Flag to allow only exact string match for `title` parameter//     + **AAA** `(optional, boolean)` Default `0`// // 	Flag to include only deals with retail price `> $29`//     + **steamworks** `(optional, boolean)` Default `0`// // 	Flag to include only deals that redeem on Steam (best guess, depends on store support)//     + **onSale** `(optional, boolean)` Default `0`// // 	Flag to include only games that are currently on sale//     + **output** `(optional, string)`// // 	Option to output deals in RSS format (overrides page number/size to `0/100`)
@name("List of Deals")
GET "https://{{host}}/api/1.0/deals"
? "storeID"= "1"
? "upperPrice"= "15"


// Get info for a specific deal. Response includes game info, any cheaper current deals, and the cheapest historical price. As elsewhere, dealID is encoded
@name("Deal Lookup")
GET "https://{{host}}/api/1.0/deals"
? "id"= "X8sebHhbc1Ga0dTkgg59WgyM506af9oNZZJLU9uSrX8="




