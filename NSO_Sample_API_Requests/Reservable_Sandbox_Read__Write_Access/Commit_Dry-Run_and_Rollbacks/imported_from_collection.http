#!/usr/bin/env dothttp

// This is using an example for an IOS interface, with the configuration in the payload, but could be any config. The key thing is having the query params ?dry-run=native so NSO knows to not commit it and to respond back with the dry-run data in CLI format. Postman has the query param in the headers tab.

@name("Commit Dry-run outformat native")
POST "{{PROTOCOL}}://{{NSO_IP}}/restconf/data/tailf-ncs:devices/device={{SAMPLE_IOS_DEVICE}}/config/tailf-ned-cisco-ios:interface"
basicauth("{{username}}", "{{password}}")
"Accept": "application/yang-data+json"
"Content-Type": "application/yang-data+xml"
? "dry-run"= "native"
data(' <Loopback>
   <name>1337</name>
   <description>RESTCONF CREATED LOOPBACK</description>
   <ip>
     <address>
       <primary>
         <address>10.20.50.4</address>
         <mask>255.255.255.255</mask>
       </primary>
     </address>
   </ip>
 </Loopback>')


// This is using an example for an IOS interface, with the configuration in the payload, but could be any config. The key thing is having the query params ?dry-run=native so NSO knows to not commit it and to respond back with the dry-run data in CLI format. Postman has the query param in the headers tab.

@name("Commit Dry-run outformat native Copy")
POST "{{PROTOCOL}}://{{NSO_IP}}/restconf/data/tailf-ncs:devices/device={{SAMPLE_IOS_DEVICE}}/config/tailf-ned-cisco-ios:interface"
basicauth("{{username}}", "{{password}}")
"Accept": "application/yang-data+json"
"Content-Type": "application/yang-data+xml"
? "dry-run"= "native"
? "dry-run-reverse"= "native"
data(' <Loopback>
   <name>1337</name>
   <description>RESTCONF CREATED LOOPBACK</description>
   <ip>
     <address>
       <primary>
         <address>10.20.50.4</address>
         <mask>255.255.255.255</mask>
       </primary>
     </address>
   </ip>
 </Loopback>')


@name("Commit-Dry Run Remove IP address from interface")
DELETE "{{PROTOCOL}}://{{NSO_IP}}/restconf/data/tailf-ncs:devices/device={{SAMPLE_IOS_DEVICE}}/config/tailf-ned-cisco-ios:interface/GigabitEthernet=4/ip/address"
basicauth("{{username}}", "{{password}}")
"Accept": "application/yang-data+json"
"Content-Type": "application/yang-data+xml"
? "dry-run"= "native"
data('
')



