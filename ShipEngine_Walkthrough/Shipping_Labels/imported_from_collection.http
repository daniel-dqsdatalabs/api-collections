#!/usr/bin/env dothttp

// This request shows how to create a label by specifying all the information in a single request.  It's the easiest way to create a label if you already know exactly what you want...

@name("Create a label from scratch")
POST "https://api.shipengine.com/v1/labels"
"Content-Type": "application/json"
data('{
	"shipment": {
		"service_code": "usps_priority_mail",
		"ship_from": {
			"name": "John Doe",
			"company_name": "Example Corp.",
			"address_line1": "4009 Marathon Blvd",
			"city_locality": "Austin",
			"state_province": "TX",
			"postal_code": "78756",
			"country_code": "US",
			"phone": "512-555-5555"
		},
		"ship_to": {
			"name": "Amanda Miller",
			"address_line1": "525 S Winchester Blvd",
			"city_locality": "San Jose",
			"state_province": "CA",
			"postal_code": "95128",
			"country_code": "US"
		},
		"packages": [
			{
				"weight": {
					"value": 17,
					"unit": "pound"
				},
				"dimensions": {
					"length": 36,
					"width": 12,
					"height": 24,
					"unit": "inch"
				}
			}
		]
	}
}')


// If you've previously gotten a rate quote from ShipEngine, then you can create a label from that rate quote without having to specify any of the shipment details again.

@name("Create a label from a rate")
POST "https://api.shipengine.com/v1/labels/rates/{{rate_id}}"


// If you've previously created a shipment on ShipEngine, then you can create a label from that shipment without having to specify any of the shipment details again.

@name("Create a label from a shipment")
POST "https://api.shipengine.com/v1/labels/shipment/{{shipment_id}}"


// Return labels are created just like outgoing labels, but with an additional `is_return_label` flag. You can also optionally specify an `rma_number` (Return Merchandise Authorization)

@name("Create a return label")
POST "https://api.shipengine.com/v1/labels"
"Content-Type": "application/json"
data('{
	"is_return_label": true,
	"rma_number": "123456789",
	"shipment": {
		"service_code": "usps_priority_mail",
		"ship_from": {
			"name": "Amanda Miller",
			"address_line1": "525 S Winchester Blvd",
			"city_locality": "San Jose",
			"state_province": "CA",
			"postal_code": "95128",
			"country_code": "US"
		},
		"ship_to": {
			"company_name": "Example Corp.",
			"address_line1": "4009 Marathon Blvd",
			"city_locality": "Austin",
			"state_province": "TX",
			"postal_code": "78756",
			"country_code": "US",
			"phone": "512-555-5555"
		},
		"packages": [
			{
				"weight": {
					"value": 17,
					"unit": "pound"
				},
				"dimensions": {
					"length": 36,
					"width": 12,
					"height": 24,
					"unit": "inch"
				}
			}
		]
	}
}')


// By default, whenever you create a label in ShipEngine we'll give you several URLs to download the label in various file formats. However, this requires a second HTTP request to download a label. You can perform both steps in a single request by specifying `label_download_type: "inline"` and specifying your desired `label_format` and `label_layout`.

@name("Create & download a label")
POST "https://api.shipengine.com/v1/labels"
"Content-Type": "application/json"
data('{
	"label_format": "png",
	"label_layout": "4x6",
	"label_download_type": "inline",
	"shipment": {
		"service_code": "usps_priority_mail",
		"ship_from": {
			"name": "John Doe",
			"company_name": "Example Corp.",
			"address_line1": "4009 Marathon Blvd",
			"city_locality": "Austin",
			"state_province": "TX",
			"postal_code": "78756",
			"country_code": "US",
			"phone": "512-555-5555"
		},
		"ship_to": {
			"name": "Amanda Miller",
			"address_line1": "525 S Winchester Blvd",
			"city_locality": "San Jose",
			"state_province": "CA",
			"postal_code": "95128",
			"country_code": "US"
		},
		"packages": [
			{
				"weight": {
					"value": 17,
					"unit": "pound"
				},
				"dimensions": {
					"length": 36,
					"width": 12,
					"height": 24,
					"unit": "inch"
				}
			}
		]
	}
}')


// Label messages can be used for a number of reasons; but, primarily are used for reference numbers or internal tracking messages. You can add separate label messages to each package in a shipment.

@name("Label messages (reference fields)")
POST "https://api.shipengine.com/v1/labels"
"Content-Type": "application/json"
data('{
	"shipment": {
		"service_code": "usps_priority_mail",
		"ship_from": {
			"name": "John Doe",
			"company_name": "Example Corp.",
			"address_line1": "4009 Marathon Blvd",
			"city_locality": "Austin",
			"state_province": "TX",
			"postal_code": "78756",
			"country_code": "US",
			"phone": "512-555-5555"
		},
		"ship_to": {
			"name": "Amanda Miller",
			"address_line1": "525 S Winchester Blvd",
			"city_locality": "San Jose",
			"state_province": "CA",
			"postal_code": "95128",
			"country_code": "US"
		},
		"packages": [
			{
				"weight": {
					"value": 17,
					"unit": "pound"
				},
				"dimensions": {
					"length": 36,
					"width": 12,
					"height": 24,
					"unit": "inch"
				},
				"label_messages": {
					"reference1": "AAAAAAAAAAAAAAA",
					"reference2": "BBBBBBBBBBBBBBB",
					"reference3": "CCCCCCCCCCCCCCC"
				}
			}
		]
	}
}')


// Some carriers (like USPS) charge for labels even if the package is never actually mailed. So if you decide not to ship a package, then you'll need to void the label to get your money back.  This request shows you how.

@name("Void a label")
PUT "https://api.shipengine.com/v1/labels/{{label_id}}/void"


// This request shows how to list labels that match certain criteria, such as the carrier, service, date, warehouse, status, etc.

@name("List your labels")
GET "https://api.shipengine.com/v1/labels"
? "label_status"= "voided"
? "carrier_id"= "{{stamps_com}}"
? "service_code"= "usps_priority_mail"
? "tracking_number"= "{{tracking_number}}"
? "page"= "1"
? "page_size"= "10"
? "sort_by"= "created_at"
? "sort_dir"= "desc"



