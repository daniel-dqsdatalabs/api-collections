#!/usr/bin/env dothttp

// extract text as a new text file from a FAAST document with ABBYY FineReader Engine. It also saves the new text file as a new FAAST document.

@name("/extractDocumentText")
POST "https://{{baseUrl}}/extractDocumentText"
"jwt": "Duis consequat sed exercitation"
"Content-Type": "application/json"
json({
    "dGuid": "dolor aute culpa occaecat",
    "outputFile": {
        "filePath": "elit consequat ex sed",
        "fileName": "in in",
        "fileExtension": "occaecat ipsum consequat consectetur non"
    }
})


// It batch-processes a bulk of FAAST documents with ABBYY FineReader Engine. The supported documents are pdf/tif/jpg/png.

@name("/extractBulkDocuments")
POST "https://{{baseUrl}}/extractBulkDocuments"
"jwt": "Duis consequat sed exercitation"
"Content-Type": "application/json"
data('"do culpa in"')


// It trains document classification with document smaples for ABBYY FineReader Engine.

@name("/runClassificationTraining")
POST "https://{{baseUrl}}/runClassificationTraining"
"jwt": "Duis consequat sed exercitation"
"Content-Type": "application/json"
data('"non dolore"')


// It batch-classifies a bulk of FAAST documents with ABBYY FineReader Engine. The supported documents are pdf/tif/jpg/png.

@name("/classifyBulkDocuments")
POST "https://{{baseUrl}}/classifyBulkDocuments"
"jwt": "Duis consequat sed exercitation"
"Content-Type": "application/json"
data('"in esse"')


// It retrieves existing or trained classification names with ABBYY FineReader Engine.

@name("/getTrainedClassNames")
GET "https://{{baseUrl}}/getTrainedClassNames"
"jwt": "Duis consequat sed exercitation"


// extract text from a file with ABBYY FineReader Engine. The extractText API is for demo purpose. New APIs such as extractDocumentText will replace this API with FAAST business and database rules

@name("/extractText")
POST "https://{{baseUrl}}/extractText"
"jwt": "Duis consequat sed exercitation"
"Content-Type": "application/json"
json({
    "inputFile": {
        "filePath": "proident",
        "fileName": "adipisicing nisi Ut minim",
        "fileExtension": "minim sint"
    },
    "outputFile": {
        "filePath": "Excepteur fugiat",
        "fileName": "in",
        "fileExtension": "minim ut in amet"
    },
    "responseOptions": {
        "addToResponseFlag": "adipisicing cupidatat ad",
        "maxResponseLength": -65048092
    },
    "dbConnection": {
        "addTextToDBFlag": "Excepteur",
        "dGuid": "consequat sunt ipsum",
        "addMetadataToDBFlag": "Excepteur ex"
    }
})


// It batch-processes a bulk of office documents. Currently, supported documents are doc/docx/xls/xlsx.

@name("/extractOfficeDocuments")
POST "https://{{baseUrl}}/extractOfficeDocuments"
"jwt": "Duis consequat sed exercitation"
"Content-Type": "application/json"
data('"do culpa in"')



