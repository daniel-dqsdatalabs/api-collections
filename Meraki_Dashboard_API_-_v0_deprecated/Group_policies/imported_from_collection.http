#!/usr/bin/env dothttp

// List the group policies in a network

@name("getNetworkGroupPolicies")
GET "https://{{baseUrl}}/networks/:networkId/groupPolicies"
"Accept": "*/*"



// Create a group policy
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// name| string| The name for your group policy. Required.
// scheduling| object|     The schedule for the group policy. Schedules are applied to days of the week.
// 
// bandwidth| object|     The bandwidth settings for clients bound to your group policy.
// 
// firewallAndTrafficShaping| object|     The firewall and traffic shaping rules and settings for your policy.
// 
// contentFiltering| object| The content filtering settings for your group policy
// splashAuthSettings| string| Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
// vlanTagging| object| The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.
// bonjourForwarding| object| The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.

@name("createNetworkGroupPolicy")
POST "https://{{baseUrl}}/networks/:networkId/groupPolicies"
"Accept": "*/*"
"Content-Type": "application/json"
json({
    "name": "No video streaming",
    "scheduling": {
        "enabled": true,
        "monday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "tuesday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "wednesday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "thursday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "friday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "saturday": {
            "active": false,
            "from": "0:00",
            "to": "24:00"
        },
        "sunday": {
            "active": false,
            "from": "0:00",
            "to": "24:00"
        }
    },
    "bandwidth": {
        "settings": "custom",
        "bandwidthLimits": {
            "limitUp": 1000000,
            "limitDown": 1000000
        }
    },
    "firewallAndTrafficShaping": {
        "settings": "custom",
        "trafficShapingRules": [
            {
                "definitions": [
                    {
                        "type": "host",
                        "value": "google.com"
                    },
                    {
                        "type": "port",
                        "value": "9090"
                    },
                    {
                        "type": "ipRange",
                        "value": "192.1.0.0"
                    },
                    {
                        "type": "ipRange",
                        "value": "192.1.0.0/16"
                    },
                    {
                        "type": "ipRange",
                        "value": "10.1.0.0/16:80"
                    },
                    {
                        "type": "localNet",
                        "value": "192.168.0.0/16"
                    },
                    {
                        "type": "applicationCategory",
                        "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                        }
                    },
                    {
                        "type": "application",
                        "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                        }
                    }
                ],
                "perClientBandwidthLimits": {
                    "settings": "custom",
                    "bandwidthLimits": {
                        "limitUp": 1000000,
                        "limitDown": 1000000
                    }
                },
                "dscpTagValue": null,
                "pcpTagValue": null
            }
        ],
        "l3FirewallRules": [
            {
                "comment": "Allow TCP traffic to subnet with HTTP servers.",
                "policy": "allow",
                "protocol": "tcp",
                "destPort": 443,
                "destCidr": "192.168.1.0/24"
            }
        ],
        "l7FirewallRules": [
            [
                {
                    "policy": "deny",
                    "type": "application",
                    "value": {
                        "id": "meraki:layer7/application/67",
                        "name": "Xbox LIVE"
                    }
                },
                {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                },
                {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                },
                {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                },
                {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                },
                {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                        "US"
                    ]
                }
            ]
        ]
    },
    "contentFiltering": {
        "allowedUrlPatterns": {
            "settings": "network default",
            "patterns": []
        },
        "blockedUrlPatterns": {
            "settings": "append",
            "patterns": [
                "http://www.example.com",
                "http://www.betting.com"
            ]
        },
        "blockedUrlCategories": {
            "settings": "override",
            "categories": [
                "meraki:contentFiltering/category/1",
                "meraki:contentFiltering/category/7"
            ]
        }
    },
    "splashAuthSettings": "bypass",
    "vlanTagging": {
        "settings": "custom",
        "vlanId": "1"
    },
    "bonjourForwarding": {
        "settings": "custom",
        "rules": [
            {
                "description": "A simple bonjour rule",
                "vlanId": "1",
                "services": [
                    "All Services"
                ]
            }
        ]
    }
})


// Display a group policy

@name("getNetworkGroupPolicy")
GET "https://{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId"
"Accept": "*/*"



// Update a group policy
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// name| string| The name for your group policy.
// scheduling| object|     The schedule for the group policy. Schedules are applied to days of the week.
// 
// bandwidth| object|     The bandwidth settings for clients bound to your group policy.
// 
// firewallAndTrafficShaping| object|     The firewall and traffic shaping rules and settings for your policy.
// 
// contentFiltering| object| The content filtering settings for your group policy
// splashAuthSettings| string| Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
// vlanTagging| object| The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.
// bonjourForwarding| object| The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.

@name("updateNetworkGroupPolicy")
PUT "https://{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId"
"Accept": "*/*"
"Content-Type": "application/json"
json({
    "name": "No video streaming",
    "scheduling": {
        "enabled": true,
        "monday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "tuesday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "wednesday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "thursday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "friday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
        },
        "saturday": {
            "active": false,
            "from": "0:00",
            "to": "24:00"
        },
        "sunday": {
            "active": false,
            "from": "0:00",
            "to": "24:00"
        }
    },
    "bandwidth": {
        "settings": "custom",
        "bandwidthLimits": {
            "limitUp": 1000000,
            "limitDown": 1000000
        }
    },
    "firewallAndTrafficShaping": {
        "settings": "custom",
        "trafficShapingRules": [
            {
                "definitions": [
                    {
                        "type": "host",
                        "value": "google.com"
                    },
                    {
                        "type": "port",
                        "value": "9090"
                    },
                    {
                        "type": "ipRange",
                        "value": "192.1.0.0"
                    },
                    {
                        "type": "ipRange",
                        "value": "192.1.0.0/16"
                    },
                    {
                        "type": "ipRange",
                        "value": "10.1.0.0/16:80"
                    },
                    {
                        "type": "localNet",
                        "value": "192.168.0.0/16"
                    },
                    {
                        "type": "applicationCategory",
                        "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                        }
                    },
                    {
                        "type": "application",
                        "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                        }
                    }
                ],
                "perClientBandwidthLimits": {
                    "settings": "custom",
                    "bandwidthLimits": {
                        "limitUp": 1000000,
                        "limitDown": 1000000
                    }
                },
                "dscpTagValue": null,
                "pcpTagValue": null
            }
        ],
        "l3FirewallRules": [
            {
                "comment": "Allow TCP traffic to subnet with HTTP servers.",
                "policy": "allow",
                "protocol": "tcp",
                "destPort": 443,
                "destCidr": "192.168.1.0/24"
            }
        ],
        "l7FirewallRules": [
            [
                {
                    "policy": "deny",
                    "type": "application",
                    "value": {
                        "id": "meraki:layer7/application/67",
                        "name": "Xbox LIVE"
                    }
                },
                {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                },
                {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                },
                {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                },
                {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                },
                {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                        "US"
                    ]
                }
            ]
        ]
    },
    "contentFiltering": {
        "allowedUrlPatterns": {
            "settings": "network default",
            "patterns": []
        },
        "blockedUrlPatterns": {
            "settings": "append",
            "patterns": [
                "http://www.example.com",
                "http://www.betting.com"
            ]
        },
        "blockedUrlCategories": {
            "settings": "override",
            "categories": [
                "meraki:contentFiltering/category/1",
                "meraki:contentFiltering/category/7"
            ]
        }
    },
    "splashAuthSettings": "bypass",
    "vlanTagging": {
        "settings": "custom",
        "vlanId": "1"
    },
    "bonjourForwarding": {
        "settings": "custom",
        "rules": [
            {
                "description": "A simple bonjour rule",
                "vlanId": "1",
                "services": [
                    "All Services"
                ]
            }
        ]
    }
})


// Delete a group policy

@name("deleteNetworkGroupPolicy")
DELETE "https://{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId"
"Accept": "*/*"




