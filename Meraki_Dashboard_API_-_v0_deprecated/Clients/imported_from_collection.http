#!/usr/bin/env dothttp

// List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.

@name("getDeviceClients")
GET "https://{{baseUrl}}/devices/:serial/clients"
"Accept": "*/*"
? "t0"= "{{t0}}"
? "timespan"= "{{timespan}}"



// List the clients that have used this network in the timespan

@name("getNetworkClients")
GET "https://{{baseUrl}}/networks/:networkId/clients"
"Accept": "*/*"
? "t0"= "{{t0}}"
? "timespan"= "{{timespan}}"
? "perPage"= "{{perPage}}"
? "startingAfter"= "{{startingAfter}}"
? "endingBefore"= "{{endingBefore}}"



// Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// mac| string| The MAC address of the client. Required.
// name| string| The display name for the client. Optional. Limited to 255 bytes.
// devicePolicy| string| The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Blocked', 'Per connection' or 'Normal'. Required.
// groupPolicyId| string| The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
// policiesBySecurityAppliance| object| An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)
// policiesBySsid| object| An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy

@name("provisionNetworkClients")
POST "https://{{baseUrl}}/networks/:networkId/clients/provision"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "mac": "00:11:22:33:44:55",
  "name": "Miles\'s phone",
  "devicePolicy": "Group policy",
  "groupPolicyId": "101"
}')


// Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.

@name("getNetworkClient")
GET "https://{{baseUrl}}/networks/:networkId/clients/:clientId"
"Accept": "*/*"



// Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.

@name("getNetworkClientEvents")
GET "https://{{baseUrl}}/networks/:networkId/clients/:clientId/events"
"Accept": "*/*"
? "perPage"= "{{perPage}}"
? "startingAfter"= "{{startingAfter}}"
? "endingBefore"= "{{endingBefore}}"



// Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.

@name("getNetworkClientLatencyHistory")
GET "https://{{baseUrl}}/networks/:networkId/clients/:clientId/latencyHistory"
"Accept": "*/*"
? "t0"= "{{t0}}"
? "t1"= "{{t1}}"
? "timespan"= "{{timespan}}"
? "resolution"= "{{resolution}}"



// Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.

@name("getNetworkClientPolicy")
GET "https://{{baseUrl}}/networks/:networkId/clients/:clientId/policy"
"Accept": "*/*"



// Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// devicePolicy| string| The policy to assign. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
// groupPolicyId| string| [optional] If 'devicePolicy' is set to 'Group policy' this param is used to specify the group policy ID.

@name("updateNetworkClientPolicy")
PUT "https://{{baseUrl}}/networks/:networkId/clients/:clientId/policy"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "mac": "00:11:22:33:44:55",
  "type": "Group policy",
  "groupPolicyId": "101"
}')


// Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.

@name("getNetworkClientSplashAuthorizationStatus")
GET "https://{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus"
"Accept": "*/*"



// Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// ssids| object| The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency. Not all networks support configuring all SSIDs

@name("updateNetworkClientSplashAuthorizationStatus")
PUT "https://{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "ssids": {
    "0": {
      "isAuthorized": true
    },
    "2": {
      "isAuthorized": false
    }
  }
}')


// Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.

@name("getNetworkClientTrafficHistory")
GET "https://{{baseUrl}}/networks/:networkId/clients/:clientId/trafficHistory"
"Accept": "*/*"
? "perPage"= "{{perPage}}"
? "startingAfter"= "{{startingAfter}}"
? "endingBefore"= "{{endingBefore}}"



// Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.

@name("getNetworkClientUsageHistory")
GET "https://{{baseUrl}}/networks/:networkId/clients/:clientId/usageHistory"
"Accept": "*/*"




