#!/usr/bin/env dothttp

// List the HTTP servers for a network
@name("getNetworkHttpServers")
GET "https://{{baseUrl}}/networks/:networkId/httpServers"
"Accept": "*/*"



// Add an HTTP server to a network//  #### Body Parameters // **Parameter**|**Type**|**Description** //  :-------------: |:-------------: |:-------------: // name| string| A name for easy reference to the HTTP server// url| string| The URL of the HTTP server// sharedSecret| string| A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
@name("createNetworkHttpServer")
POST "https://{{baseUrl}}/networks/:networkId/httpServers"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "name": "My HTTP server",
  "url": "https://www.example.com/webhooks",
  "sharedSecret": "foobar"
}')


// Send a test webhook for a network//  #### Body Parameters // **Parameter**|**Type**|**Description** //  :-------------: |:-------------: |:-------------: // url| string| The URL where the test webhook will be sent
@name("createNetworkHttpServersWebhookTest")
POST "https://{{baseUrl}}/networks/:networkId/httpServers/webhookTests"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "url": "https://www.example.com/path"
}')


// Return the status of a webhook test for a network
@name("getNetworkHttpServersWebhookTest")
GET "https://{{baseUrl}}/networks/:networkId/httpServers/webhookTests/:id"
"Accept": "*/*"



// Return an HTTP server for a network
@name("getNetworkHttpServer")
GET "https://{{baseUrl}}/networks/:networkId/httpServers/:id"
"Accept": "*/*"



// Update an HTTP server//  #### Body Parameters // **Parameter**|**Type**|**Description** //  :-------------: |:-------------: |:-------------: // name| string| A name for easy reference to the HTTP server// url| string| The URL of the HTTP server// sharedSecret| string| A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
@name("updateNetworkHttpServer")
PUT "https://{{baseUrl}}/networks/:networkId/httpServers/:id"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "name": "My HTTP server",
  "url": "https://www.example.com/webhooks",
  "sharedSecret": "foobar"
}')


// Delete an HTTP server from a network
@name("deleteNetworkHttpServer")
DELETE "https://{{baseUrl}}/networks/:networkId/httpServers/:id"
"Accept": "*/*"




