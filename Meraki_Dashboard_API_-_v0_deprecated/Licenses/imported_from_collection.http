#!/usr/bin/env dothttp

// List the licenses for an organization
@name("getOrganizationLicenses")
GET "https://{{baseUrl}}/organizations/:organizationId/licenses"
"Accept": "*/*"
? "perPage"= "{{perPage}}"
? "startingAfter"= "{{startingAfter}}"
? "endingBefore"= "{{endingBefore}}"
? "deviceSerial"= "{{deviceSerial}}"
? "networkId"= "{{networkId}}"
? "state"= "{{state}}"



// Assign SM seats to a network. This will increase the managed SM device limit of the network//  #### Body Parameters // **Parameter**|**Type**|**Description** //  :-------------: |:-------------: |:-------------: // licenseId| string| The ID of the SM license to assign seats from// networkId| string| The ID of the SM network to assign the seats to// seatCount| integer| The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license
@name("assignOrganizationLicensesSeats")
POST "https://{{baseUrl}}/organizations/:organizationId/licenses/assignSeats"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "licenseId": "1234",
  "networkId": "N_24329156",
  "seatCount": 20
}')


// Move licenses to another organization. This will also move any devices that the licenses are assigned to//  #### Body Parameters // **Parameter**|**Type**|**Description** //  :-------------: |:-------------: |:-------------: // destOrganizationId| string| The ID of the organization to move the licenses to// licenseIds| array| A list of IDs of licenses to move to the new organization
@name("moveOrganizationLicenses")
POST "https://{{baseUrl}}/organizations/:organizationId/licenses/move"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "destOrganizationId": "2930418",
  "licenseIds": [
    "123",
    "456"
  ]
}')


// Move SM seats to another organization//  #### Body Parameters // **Parameter**|**Type**|**Description** //  :-------------: |:-------------: |:-------------: // destOrganizationId| string| The ID of the organization to move the SM seats to// licenseId| string| The ID of the SM license to move the seats from// seatCount| integer| The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
@name("moveOrganizationLicensesSeats")
POST "https://{{baseUrl}}/organizations/:organizationId/licenses/moveSeats"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "destOrganizationId": "2930418",
  "licenseId": "1234",
  "seatCount": 20
}')


// Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license//  #### Body Parameters // **Parameter**|**Type**|**Description** //  :-------------: |:-------------: |:-------------: // licenseIdToRenew| string| The ID of the SM license to renew. This license must already be assigned to an SM network// unusedLicenseId| string| The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
@name("renewOrganizationLicensesSeats")
POST "https://{{baseUrl}}/organizations/:organizationId/licenses/renewSeats"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "licenseIdToRenew": "123",
  "unusedLicenseId": "1234"
}')


// Display a license
@name("getOrganizationLicense")
GET "https://{{baseUrl}}/organizations/:organizationId/licenses/:licenseId"
"Accept": "*/*"



// Update a license//  #### Body Parameters // **Parameter**|**Type**|**Description** //  :-------------: |:-------------: |:-------------: // deviceSerial| string| The serial number of the device to assign this license to. Set this to null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license.
@name("updateOrganizationLicense")
PUT "https://{{baseUrl}}/organizations/:organizationId/licenses/:licenseId"
"Accept": "*/*"
"Content-Type": "application/json"
data('{}')



