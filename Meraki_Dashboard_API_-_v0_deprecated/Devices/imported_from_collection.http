#!/usr/bin/env dothttp

// Cycle a set of switch ports
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// ports| array| List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]

@name("cycleDeviceSwitchPorts")
POST "https://{{baseUrl}}/devices/:serial/switch/ports/cycle"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "ports": [
    "1",
    "2-5",
    "1_MA-MOD-8X10G_1",
    "1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8"
  ]
}')


// List the devices in a network

@name("getNetworkDevices")
GET "https://{{baseUrl}}/networks/:networkId/devices"
"Accept": "*/*"



// Claim devices into a network
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// serials| array| A list of serials of devices to claim
// serial| string| [DEPRECATED] The serial of a device to claim

@name("claimNetworkDevices")
POST "https://{{baseUrl}}/networks/:networkId/devices/claim"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "serials": [
    "Q234-ABCD-0001",
    "Q234-ABCD-0002",
    "Q234-ABCD-0003"
  ]
}')


// Return a single device

@name("getNetworkDevice")
GET "https://{{baseUrl}}/networks/:networkId/devices/:serial"
"Accept": "*/*"



// Update the attributes of a device
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// name| string| The name of a device
// tags| string| The tags of a device
// lat| number| The latitude of a device
// lng| number| The longitude of a device
// address| string| The address of a device
// notes| string| The notes for the device. String. Limited to 255 characters.
// moveMapMarker| boolean| Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.
// switchProfileId| string| The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template.
// floorPlanId| string| The floor plan to associate to this device. null disassociates the device from the floorplan.

@name("updateNetworkDevice")
PUT "https://{{baseUrl}}/networks/:networkId/devices/:serial"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "name": "My AP",
  "lat": 37.4180951010362,
  "lng": -122.098531723022,
  "serial": "Q234-ABCD-5678",
  "mac": "00:11:22:33:44:55",
  "tags": " recently-added "
}')


// Blink the LEDs on a device
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// duration| integer| The duration in seconds. Must be between 5 and 120. Default is 20 seconds
// period| integer| The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
// duty| integer| The duty cycle as the percent active. Must be between 10 and 90. Default is 50.

@name("blinkNetworkDeviceLeds")
POST "https://{{baseUrl}}/networks/:networkId/devices/:serial/blinkLeds"
"Accept": "*/*"
"Content-Type": "application/json"
data('{
  "duration": 20,
  "period": 160,
  "duty": 50
}')


// List LLDP and CDP information for a device

@name("getNetworkDeviceLldp_cdp")
GET "https://{{baseUrl}}/networks/:networkId/devices/:serial/lldp_cdp"
"Accept": "*/*"
? "timespan"= "{{timespan}}"



// Get the uplink loss percentage and latency in milliseconds for a wired network device.

@name("getNetworkDeviceLossAndLatencyHistory")
GET "https://{{baseUrl}}/networks/:networkId/devices/:serial/lossAndLatencyHistory"
"Accept": "*/*"
? "t0"= "{{t0}}"
? "t1"= "{{t1}}"
? "timespan"= "{{timespan}}"
? "resolution"= "{{resolution}}"
? "uplink"= "{{uplink}}"
? "ip"= "{{ip}}"



// Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.

@name("getNetworkDevicePerformance")
GET "https://{{baseUrl}}/networks/:networkId/devices/:serial/performance"
"Accept": "*/*"



// Reboot a device

@name("rebootNetworkDevice")
POST "https://{{baseUrl}}/networks/:networkId/devices/:serial/reboot"
"Accept": "*/*"



// Remove a single device

@name("removeNetworkDevice")
POST "https://{{baseUrl}}/networks/:networkId/devices/:serial/remove"
"Accept": "*/*"



// Return the uplink information for a device.

@name("getNetworkDeviceUplink")
GET "https://{{baseUrl}}/networks/:networkId/devices/:serial/uplink"
"Accept": "*/*"



// List the devices in an organization

@name("getOrganizationDevices")
GET "https://{{baseUrl}}/organizations/:organizationId/devices"
"Accept": "*/*"
? "perPage"= "{{perPage}}"
? "startingAfter"= "{{startingAfter}}"
? "endingBefore"= "{{endingBefore}}"
? "configurationUpdatedAfter"= "{{configurationUpdatedAfter}}"




