#!/usr/bin/env dothttp

// This endpoint will encode your original url into a new catURL, returning the new path.
// 
// For example, try submitting `https://www.getpostman.com` as the `originalUrl` in the request body. The response is a json object containing a `catpath` composed of cat words and emojis like `"stalk.sleepy-bombay-scratch.whisker"`. You can also review the saved example.
// 
// Now change the value of `originalUrl` to a different URL, hit send, and inspect the response.

@name("urlize")
POST "https://{{url}}/encode"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "originalUrl": [
        "https://www.getpostman.com"
    ]
})


// This endpoint will begin redirecting your cat URL to your originally submitted URL. We will stop it before following the redirect to verify the redirection is going to the originally submitted URL.
// 
// For example, update the `path` environment variable with the cat path you received in the previous request. You will be redirected to your originally submitted URL.
// 
// *Note*: Make sure you have Postman set up properly to [not follow the redirect](#test-the-redirect). Then, when you send this request, look under the Headers tab of the response viewer down at the bottom. Find the Location header to inspect the target for the redirect.

@name("redirect test")
GET "https://{{url}}/{{path}}"


// This endpoint will redirect your cat URL to your originally submitted URL.
// 
// *Note*: To run this request, make sure you have `Automatically follow redirects` toggled ON under your general Postman settings.
// 
// For example, update the `path` environment variable with the cat path you received in the previous request. You will be redirected to your originally submitted URL, and can review the webpage in the response body.

@name("redirect allow")
GET "https://{{url}}/{{path}}"



