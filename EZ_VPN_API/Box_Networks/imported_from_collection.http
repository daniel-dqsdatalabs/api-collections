#!/usr/bin/env dothttp

// Get the Additional Networks for a specific Box by uuid.

@name("Get Box Networks")
GET "https://{{server-url}}/{{version}}/boxNetworks/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"


// Add a Remote Network to a specific Box by uuid.
// 
// If the `network` is an address included in the subnet, it will be automatically normalized to the real network (e.g. `192.168.10.44` with `netmask` `255.255.255.0` is automatically converted to `192.168.10.0`).
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Add Box Remote Network")
POST "https://{{server-url}}/{{version}}/boxNetworks/addRemoteNetwork/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"alias" : "{{alias}}",
	"network" : "{{network}}",
	"netmask" : "{{netmask}}",
	"grantedUsers" : [
		"{{grantedUser1}}",
		"{{grantedUser2}}"
	]
}')


// Delete a Remote Network from a specific Box by uuid.
// 
// The JSON payload identifies the network to be removed, by `network` and `netmask`.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Delete Box Remote Network")
DELETE "https://{{server-url}}/{{version}}/boxNetworks/delRemoteNetwork/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}"
}')


// Add the Remote Network Alias for a specific Box by uuid.
// 
// The Remote Network is identified by `network` and `netmask`.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Edit Box Remote Network Alias")
PUT "https://{{server-url}}/{{version}}/boxNetworks/editRemoteNetworkAlias/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}",
	"alias" : "{{alias}}"
}')


// Add an Internet Network to a specific Box by uuid.
// 
// Allowed netmasks are 255.255.255.240 (28 bits) to 255.255.255.255 (32 bits). Wider netmasks are not allowed.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Add Box Internet Network")
POST "https://{{server-url}}/{{version}}/boxNetworks/addInternetNetwork/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"alias" : "{{alias}}",
	"network" : "{{network}}",
	"netmask" : "{{netmask}}",
	"grantedUsers" : [
		"{{grantedUser1}}",
		"{{grantedUser2}}"
	]
}')


// Delete an Internet Network from a specific Box by uuid.
// 
// The JSON payload identifies the network to be removed, by `network` and `netmask`.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Delete Box Internet Network")
DELETE "https://{{server-url}}/{{version}}/boxNetworks/delInternetNetwork/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}"
}')


// Add the Internet Network Alias for a specific Box by uuid.
// 
// The Internet Network is identified by `network` and `netmask`.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Edit Box Internet Network Alias")
PUT "https://{{server-url}}/{{version}}/boxNetworks/editInternetNetworkAlias/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}",
	"alias" : "{{alias}}"
}')


// Get the Additional Network Users for a specific Box by uuid.
// 
// The Remote Network is identified by `network` and `netmask`.

@name("Get Box Remote Network Users")
GET "https://{{server-url}}/{{version}}/boxNetworks/remoteNetworkUsers/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}"
}')


// Get the Additional Network Users for a specific Box by uuid.
// 
// The Internet Network is identified by `network` and `netmask`.

@name("Get Box Internet Network Users")
GET "https://{{server-url}}/{{version}}/boxNetworks/internetNetworkUsers/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}"
}')


// Grant username access to the Remote Network for a specific Box by uuid.
// 
// The Remote Network is identified by `network` and `netmask`.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Grant Username to Remote Network")
PUT "https://{{server-url}}/{{version}}/boxNetworks/grantAccessRemoteNetwork/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}",
	"username" : "{{username}}"
}')


// Deny username access to the Remote Network for a specific Box by uuid.
// 
// The Remote Network is identified by `network` and `netmask`.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Deny Username to Remote Network")
PUT "https://{{server-url}}/{{version}}/boxNetworks/denyAccessRemoteNetwork/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}",
	"username" : "{{username}}"
}')


// Grant username access to the Internet Network for a specific Box by uuid.
// 
// The Remote Network is identified by `network` and `netmask`.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Grant Username to Internet Network")
PUT "https://{{server-url}}/{{version}}/boxNetworks/grantAccessInternetNetwork/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}",
	"username" : "{{username}}"
}')


// Deny username access to the Internet Network for a specific Box by uuid.
// 
// The Remote Network is identified by `network` and `netmask`.
// 
// If successful, returned HTTP status code is 202 (Accepted).

@name("Deny Username to Internet Network")
PUT "https://{{server-url}}/{{version}}/boxNetworks/denyAccessInternetNetwork/{{uuid}}"
"Authorization": "Bearer {{token}}"
"UserUUID": "{{useruuid}}"
"Content-Type": "application/json"
data('{
	"network" : "{{network}}",
	"netmask" : "{{netmask}}",
	"username" : "{{username}}"
}')



