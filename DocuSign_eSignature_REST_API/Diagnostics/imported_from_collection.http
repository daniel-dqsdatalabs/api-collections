#!/usr/bin/env dothttp

// Retrieves the available REST API versions.// // DocuSign Production system: https://www.docusign.net/restapi/service_information// DocuSign Demo system: https://demo.docusign.net/restapi/service_information// // You do not need an integrator key to view the REST API versions and resources.
@name("Retrieves the available REST API versions.")
GET "https://{{baseUrl}}/service_information"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


// Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.// // If the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.// // If the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below. 
@name("Gets the API request logging log files.")
GET "https://{{baseUrl}}/v2.1/diagnostics/request_logs"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "encoding"= "{{encoding}}"


// Deletes the request log files.
@name("Deletes the request log files.")
DELETE "https://{{baseUrl}}/v2.1/diagnostics/request_logs"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


// Retrieves information for a single log entry.// // **Request**// The `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.// // **Response**// If the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
@name("Gets a request logging log file.")
GET "https://{{baseUrl}}/v2.1/diagnostics/request_logs/{{requestLogId}}"
"Accept": "text/plain"
"Authorization": "Bearer {{accessToken}}"


// Retrieves the current API request logging setting for the user and remaining log entries.// // **Response**// The response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
@name("Gets the API request logging settings.")
GET "https://{{baseUrl}}/v2.1/diagnostics/settings"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


// Enables or disables API request logging for troubleshooting.// // When enabled (`apiRequestLogging` is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.// // You can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.// // Private information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.// // ###### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn't logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
@name("Enables or disables API request logging for troubleshooting.")
PUT "https://{{baseUrl}}/v2.1/diagnostics/settings"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "apiRequestLogging": "sample string 1",
  "apiRequestLogMaxEntries": "sample string 2",
  "apiRequestLogRemainingEntries": "sample string 3"
}')



