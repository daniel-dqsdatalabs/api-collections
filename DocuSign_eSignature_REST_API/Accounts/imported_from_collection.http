#!/usr/bin/env dothttp

// Creates new DocuSign service accounts.
// 
// This is used to create multiple DocuSign accounts with one call. It uses the same information and formats as the normal a  [Accounts:create](accounts_create) call with the information included within a `newAccountRequests` element. A maximum of 100 new accounts can be created at one time.
// 
// Note that the structure of the XML request is slightly different than the JSON request, in that the new account information is included in a `newAccountDefinition` property inside the `newAccountRequests` element.
// Response
// 
// The response returns the new account ID, password and the default user information for each newly created account.
// 
// A 201 code is returned if the call succeeded.  While the call may have succeed, some of the individual account requests may have failed. In the case of failures to create the account,  an `errorDetails` node is added in the response to each specific request that failed.

@name("Creates new accounts.")
POST "https://{{baseUrl}}/v2.1/accounts"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "preview_billing_plan"= "{{preview_billing_plan}}"
data('{
  "accountName": "sample string 1",
  "distributorCode": "sample string 2",
  "distributorPassword": "sample string 3",
  "planInformation": {
    "planId": "sample string 1",
    "planFeatureSets": [
      {
        "featureSetId": "sample string 1",
        "isActive": "sample string 2",
        "name": "sample string 3",
        "fixedFee": "sample string 4",
        "envelopeFee": "sample string 5",
        "seatFee": "sample string 6",
        "isEnabled": "sample string 7",
        "is21CFRPart11": "sample string 8",
        "currencyFeatureSetPrices": [
          {
            "currencyCode": "sample string 1",
            "fixedFee": "sample string 2",
            "seatFee": "sample string 3",
            "envelopeFee": "sample string 4",
            "currencySymbol": "sample string 5"
          }
        ]
      }
    ],
    "addOns": [
      {
        "id": "sample string 1",
        "addOnId": "sample string 2",
        "name": "sample string 3",
        "active": "sample string 4"
      }
    ],
    "recipientDomains": [
      {
        "recipientDomainId": "sample string 1",
        "domainCode": "sample string 2",
        "domainName": "sample string 3",
        "active": "sample string 4"
      }
    ],
    "currencyCode": "sample string 2",
    "freeTrialDaysOverride": "sample string 3"
  },
  "creditCardInformation": {
    "cardNumber": "sample string 1",
    "expirationMonth": "sample string 2",
    "expirationYear": "sample string 3",
    "nameOnCard": "sample string 4",
    "cardType": "sample string 5",
    "address": {
      "street1": "sample string 1",
      "street2": "sample string 2",
      "city": "sample string 3",
      "state": "sample string 4",
      "zip": "sample string 5",
      "phone": "sample string 6",
      "fax": "sample string 7",
      "country": "sample string 8",
      "zipPlus4": "sample string 9"
    }
  },
  "referralInformation": {
    "enableSupport": "sample string 1",
    "includedSeats": "sample string 2",
    "saleDiscountPercent": "sample string 3",
    "saleDiscountAmount": "sample string 4",
    "saleDiscountFixedAmount": "sample string 5",
    "saleDiscountPeriods": "sample string 6",
    "saleDiscountSeatPriceOverride": "sample string 7",
    "planStartMonth": "sample string 8",
    "referralCode": "sample string 9",
    "referrerName": "sample string 10",
    "advertisementId": "sample string 11",
    "publisherId": "sample string 12",
    "shopperId": "sample string 13",
    "promoCode": "sample string 14",
    "groupMemberId": "sample string 15",
    "idType": "sample string 16",
    "industry": "sample string 17",
    "externalOrgId": "sample string 18"
  },
  "accountSettings": [
    {}
  ],
  "initialUser": {
    "userName": "sample string 1",
    "userId": "sample string 2",
    "userType": "sample string 3",
    "isAdmin": "sample string 4",
    "userStatus": "sample string 5",
    "uri": "sample string 6",
    "email": "sample string 7",
    "password": "sample string 8",
    "title": "sample string 9",
    "createdDateTime": "sample string 10",
    "firstName": "sample string 11",
    "middleName": "sample string 12",
    "lastName": "sample string 13",
    "suffixName": "sample string 14",
    "permissionProfileId": "sample string 15",
    "permissionProfileName": "sample string 16",
    "countryCode": "sample string 17",
    "subscribe": "sample string 18",
    "userSettings": [
      {}
    ],
    "accountManagementGranular": {
      "canManageUsers": "sample string 1",
      "canManageAdmins": "sample string 2",
      "canManageGroups": "sample string 3",
      "canManageSharing": "sample string 4",
      "canManageAccountSettings": "sample string 5",
      "canManageReporting": "sample string 6",
      "canManageAccountSecuritySettings": "sample string 7",
      "canManageSigningGroups": "sample string 8",
      "canViewUsers": "sample string 9",
      "canManageUsersMetadata": {
        "rights": "sample string 1",
        "uiHint": "sample string 2",
        "uiType": "sample string 3",
        "uiOrder": "sample string 4",
        "is21CFRPart11": "sample string 5",
        "options": [
          "sample string 1"
        ]
      },
      "canManageAdminsMetadata": {},
      "canManageGroupsMetadata": {},
      "canManageSharingMetadata": {},
      "canManageAccountSettingsMetadata": {},
      "canManageReportingMetadata": {},
      "canManageAccountSecuritySettingsMetadata": {},
      "canManageSigningGroupsMetadata": {},
      "canViewUsersMetadata": {}
    },
    "sendActivationOnInvalidLogin": "sample string 19",
    "activationAccessCode": "sample string 20",
    "enableConnectForUser": "sample string 21",
    "forgottenPasswordInfo": {
      "forgottenPasswordQuestion1": "sample string 1",
      "forgottenPasswordAnswer1": "sample string 2",
      "forgottenPasswordQuestion2": "sample string 3",
      "forgottenPasswordAnswer2": "sample string 4",
      "forgottenPasswordQuestion3": "sample string 5",
      "forgottenPasswordAnswer3": "sample string 6",
      "forgottenPasswordQuestion4": "sample string 7",
      "forgottenPasswordAnswer4": "sample string 8"
    },
    "groupList": [
      {
        "groupId": "sample string 1",
        "groupName": "sample string 2",
        "permissionProfileId": "sample string 3",
        "groupType": "sample string 4",
        "users": [
          {
            "userName": "sample string 1",
            "userId": "sample string 2",
            "email": "sample string 3",
            "userType": "sample string 4",
            "userStatus": "sample string 5",
            "uri": "sample string 6",
            "loginStatus": "sample string 7",
            "sendActivationEmail": "sample string 8",
            "activationAccessCode": "sample string 9"
          }
        ]
      }
    ],
    "workAddress": {
      "address1": "sample string 1",
      "address2": "sample string 2",
      "city": "sample string 3",
      "stateOrProvince": "sample string 4",
      "postalCode": "sample string 5",
      "phone": "sample string 6",
      "fax": "sample string 7",
      "country": "sample string 8"
    },
    "homeAddress": {},
    "loginStatus": "sample string 22",
    "passwordExpiration": "sample string 23",
    "lastLogin": "sample string 24",
    "sendActivationEmail": "sample string 25",
    "customSettings": [
      {}
    ],
    "profileImageUri": "sample string 26",
    "userProfileLastModifiedDate": "sample string 27",
    "signatureImageUri": "sample string 28",
    "initialsImageUri": "sample string 29",
    "jobTitle": "sample string 30"
  },
  "addressInformation": {
    "address1": "sample string 1",
    "address2": "sample string 2",
    "city": "sample string 3",
    "state": "sample string 4",
    "postalCode": "sample string 5",
    "phone": "sample string 6",
    "fax": "sample string 7",
    "country": "sample string 8",
    "firstName": "sample string 9",
    "lastName": "sample string 10",
    "email": "sample string 11",
    "supportedCountries": [
      {
        "isoCode": "sample string 1",
        "provinceValidated": "sample string 2",
        "name": "sample string 3",
        "provinces": [
          {
            "isoCode": "sample string 1",
            "name": "sample string 2"
          }
        ]
      }
    ]
  },
  "socialAccountInformation": {
    "provider": "sample string 1",
    "email": "sample string 2",
    "socialId": "sample string 3",
    "userName": "sample string 4"
  },
  "PaymentProcessorInformation": {
    "billingAgreementId": "sample string 1",
    "email": "sample string 2",
    "address": {}
  },
  "envelopePartitionId": null
}')


// Retrieves the account information for the specified account.
// 
// **Response**
// The `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API. 

@name("Retrieves the account information for the specified account.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "include_account_settings"= "{{include_account_settings}}"


// This closes the specified account. You must be an account admin to close your account. Once closed, an account must be reopened by DocuSign.

@name("Deletes the specified account.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


// Retrieves the list of recurring and usage charges for the account. This can be used to determine the charge structure and usage of charge plan items. 
// 
// Privileges required: account administrator 

@name("Gets list of recurring and usage charges for the account.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/billing_charges"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "include_charges"= "{{include_charges}}"


// Retrieves the list of brand profiles associated with the account and the default brand profiles. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`)  must be set to **true** for the account to use this call.

@name("Gets a list of brand profiles.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "exclude_distributor_brand"= "{{exclude_distributor_brand}}"
? "include_logos"= "{{include_logos}}"


// Creates one or more brand profile files for the account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSig`) must be set to **true** for the account to use this call.
// 
// An error is returned if `brandId` property for a brand profile is already set for the account. To upload a new version of an existing brand profile, you must delete the profile and then upload the newer version.
// 
// When brand profile files are being uploaded, they must be combined into one zip file and the `Content-Type` must be `application/zip`.

@name("Creates one or more brand profile files for the account.")
POST "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "brandCompany": "sample string 1",
  "brandId": "sample string 2",
  "brandName": "sample string 3",
  "colors": [
    {}
  ],
  "isOverridingCompanyName": "sample string 4",
  "isSendingDefault": "sample string 5",
  "isSigningDefault": "sample string 6",
  "landingPages": [
    {}
  ],
  "links": [
    {
      "linkType": "sample string 1",
      "urlOrMailTo": "sample string 2",
      "linkText": "sample string 3",
      "showLink": "sample string 4"
    }
  ],
  "emailContent": [
    {
      "emailContentType": "sample string 1",
      "content": "sample string 2",
      "emailToLink": "sample string 3",
      "linkText": "sample string 4"
    }
  ],
  "logos": {
    "primary": "sample string 1",
    "secondary": "sample string 2",
    "email": "sample string 3"
  },
  "resources": {
    "email": "sample string 1",
    "sending": "sample string 2",
    "signing": "sample string 3",
    "signingCaptive": "sample string 4"
  }
}')


// Deletes one or more brand profiles from an account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`) must be set to **true** to use this call.

@name("Deletes one or more brand profiles.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "brands": [
    {
      "brandId": "sample string 1"
    }
  ]
}')


@name("Get information for a specific brand.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "include_external_references"= "{{include_external_references}}"
? "include_logos"= "{{include_logos}}"


@name("Updates an existing brand.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "brandCompany": "sample string 1",
  "brandId": "sample string 2",
  "brandName": "sample string 3",
  "colors": [
    {}
  ],
  "isOverridingCompanyName": "sample string 4",
  "isSendingDefault": "sample string 5",
  "isSigningDefault": "sample string 6",
  "landingPages": [
    {}
  ],
  "links": [
    {
      "linkType": "sample string 1",
      "urlOrMailTo": "sample string 2",
      "linkText": "sample string 3",
      "showLink": "sample string 4"
    }
  ],
  "emailContent": [
    {
      "emailContentType": "sample string 1",
      "content": "sample string 2",
      "emailToLink": "sample string 3",
      "linkText": "sample string 4"
    }
  ],
  "logos": {
    "primary": "sample string 1",
    "secondary": "sample string 2",
    "email": "sample string 3"
  },
  "resources": {
    "email": "sample string 1",
    "sending": "sample string 2",
    "signing": "sample string 3",
    "signingCaptive": "sample string 4"
  }
}')


@name("Removes a brand.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Export a specific brand.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}/file"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Obtains the specified image for a brand.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}/logos/{{logoType}}"
"Accept": "image/png"
"Authorization": "Bearer {{accessToken}}"


@name("Put one branding logo.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}/logos/{{logoType}}"
"Accept": "application/json"
"Content-Type": "image/png"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Delete one branding logo.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}/logos/{{logoType}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Returns the specified account's list of branding resources (metadata).")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}/resources"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Returns the specified branding resource file.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}/resources/{{resourceContentType}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "langcode"= "{{langcode}}"
? "return_master"= "{{return_master}}"


@name("Uploads a branding resource file.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/brands/{{brandId}}/resources/{{resourceContentType}}"
"Accept": "application/json"
"Content-Type": "multipart/form-data"
"Authorization": "Bearer {{accessToken}}"
files(
	("file.xml", "{{file.xml}}")
)


// Deletes the signature for one or more captive recipient records; it is primarily used for testing. This provides a way to reset the signature associated with a client user ID so that a new signature can be created the next time the client user ID is used.

@name("Deletes the signature for one or more captive recipient records.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/captive_recipients/{{recipientPart}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "captiveRecipients": [
    {
      "email": "sample string 1",
      "userName": "sample string 2",
      "clientUserId": "sample string 3"
    }
  ]
}')


// Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account. You can use an optional query string to set the language for the disclosure.

@name("Gets the Electronic Record and Signature Disclosure for the account.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/consumer_disclosure"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "langCode"= "{{langCode}}"


// Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, for the requested envelope recipient. This might be different than the current account disclosure depending on account settings, such as branding, and when the account disclosure was last updated. An optional query string can be included to return the language for the disclosure.  

@name("Gets the Electronic Record and Signature Disclosure.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/consumer_disclosure/{{langCode}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Update Consumer Disclosure.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/consumer_disclosure/{{langCode}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "include_metadata"= "{{include_metadata}}"
data('{
  "companyName": "sample string 1",
  "companyPhone": "sample string 2",
  "withdrawEmail": "sample string 3",
  "withdrawByEmail": "sample string 4",
  "withdrawByPhone": "sample string 5",
  "withdrawByMail": "sample string 6",
  "withdrawAddressLine1": "sample string 7",
  "withdrawAddressLine2": "sample string 8",
  "withdrawCity": "sample string 9",
  "withdrawState": "sample string 10",
  "withdrawPostalCode": "sample string 11",
  "withdrawConsequences": "sample string 12",
  "withdrawOther": "sample string 13",
  "withdrawPhone": "sample string 14",
  "changeEmail": "sample string 15",
  "changeEmailOther": "sample string 16",
  "copyCostPerPage": "sample string 17",
  "copyRequestEmail": "sample string 18",
  "copyFeeCollectionMethod": "sample string 19",
  "custom": "sample string 20",
  "pdfId": "sample string 21",
  "enableEsign": "sample string 22",
  "useBrand": "sample string 23",
  "esignAgreement": "sample string 24",
  "esignText": "sample string 25",
  "allowCDWithdraw": "sample string 26",
  "mustAgreeToEsign": "sample string 27",
  "useConsumerDisclosureWithinAccount": "sample string 28"
}')


// Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.
// 
// There are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.

@name("Gets a list of custom fields associated with the account.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/custom_fields"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Creates an acount custom field.")
POST "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/custom_fields"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "apply_to_templates"= "{{apply_to_templates}}"
data('{
  "fieldId": "sample string 1",
  "name": "sample string 2",
  "show": "sample string 3",
  "required": "sample string 4",
  "value": "sample string 5",
  "customFieldType": "sample string 6",
  "listItems": [
    "sample string 1"
  ]
}')


@name("Updates an existing account custom field.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/custom_fields/{{customFieldId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "apply_to_templates"= "{{apply_to_templates}}"
data('{
  "fieldId": "sample string 1",
  "name": "sample string 2",
  "show": "sample string 3",
  "required": "sample string 4",
  "value": "sample string 5",
  "customFieldType": "sample string 6",
  "listItems": [
    "sample string 1"
  ]
}')


@name("Delete an existing account custom field.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/custom_fields/{{customFieldId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "apply_to_templates"= "{{apply_to_templates}}"
data('{}')


@name("Retrieves the list of favorited templates for this caller")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/favorite_templates"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Favorites a template")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/favorite_templates"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Unfavorite a template")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/favorite_templates"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Get the list of identity verification options for an account")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/identity_verification"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


// Retrieves a list of Permission Profiles. Permission Profiles are a standard set of user permissions that you can apply to individual users or users in a Group. This makes it easier to manage user permissions for a large number of users, without having to change permissions on a user-by-user basis.
// 
// Currently, Permission Profiles can only be created and modified in the DocuSign console.

@name("Gets a list of permission profiles.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/permission_profiles"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "include"= "{{include}}"


@name("Creates a new permission profile in the specified account.")
POST "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/permission_profiles"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "include"= "{{include}}"
data('{
  "permissionProfileId": "sample string 1",
  "permissionProfileName": "sample string 2",
  "users": [
    {
      "userName": "sample string 1",
      "userId": "sample string 2",
      "userType": "sample string 3",
      "isAdmin": "sample string 4",
      "userStatus": "sample string 5",
      "uri": "sample string 6",
      "email": "sample string 7",
      "password": "sample string 8",
      "title": "sample string 9",
      "createdDateTime": "sample string 10",
      "firstName": "sample string 11",
      "middleName": "sample string 12",
      "lastName": "sample string 13",
      "suffixName": "sample string 14",
      "permissionProfileId": "sample string 15",
      "permissionProfileName": "sample string 16",
      "countryCode": "sample string 17",
      "subscribe": "sample string 18",
      "userSettings": [
        {}
      ],
      "accountManagementGranular": {
        "canManageUsers": "sample string 1",
        "canManageAdmins": "sample string 2",
        "canManageGroups": "sample string 3",
        "canManageSharing": "sample string 4",
        "canManageAccountSettings": "sample string 5",
        "canManageReporting": "sample string 6",
        "canManageAccountSecuritySettings": "sample string 7",
        "canManageSigningGroups": "sample string 8",
        "canViewUsers": "sample string 9",
        "canManageUsersMetadata": {
          "rights": "sample string 1",
          "uiHint": "sample string 2",
          "uiType": "sample string 3",
          "uiOrder": "sample string 4",
          "is21CFRPart11": "sample string 5",
          "options": [
            "sample string 1"
          ]
        },
        "canManageAdminsMetadata": {},
        "canManageGroupsMetadata": {},
        "canManageSharingMetadata": {},
        "canManageAccountSettingsMetadata": {},
        "canManageReportingMetadata": {},
        "canManageAccountSecuritySettingsMetadata": {},
        "canManageSigningGroupsMetadata": {},
        "canViewUsersMetadata": {}
      },
      "sendActivationOnInvalidLogin": "sample string 19",
      "activationAccessCode": "sample string 20",
      "enableConnectForUser": "sample string 21",
      "forgottenPasswordInfo": {
        "forgottenPasswordQuestion1": "sample string 1",
        "forgottenPasswordAnswer1": "sample string 2",
        "forgottenPasswordQuestion2": "sample string 3",
        "forgottenPasswordAnswer2": "sample string 4",
        "forgottenPasswordQuestion3": "sample string 5",
        "forgottenPasswordAnswer3": "sample string 6",
        "forgottenPasswordQuestion4": "sample string 7",
        "forgottenPasswordAnswer4": "sample string 8"
      },
      "groupList": [
        {
          "groupId": "sample string 1",
          "groupName": "sample string 2",
          "permissionProfileId": "sample string 3",
          "groupType": "sample string 4",
          "users": [
            {
              "userName": "sample string 1",
              "userId": "sample string 2",
              "email": "sample string 3",
              "userType": "sample string 4",
              "userStatus": "sample string 5",
              "uri": "sample string 6",
              "loginStatus": "sample string 7",
              "sendActivationEmail": "sample string 8",
              "activationAccessCode": "sample string 9"
            }
          ]
        }
      ],
      "workAddress": {
        "address1": "sample string 1",
        "address2": "sample string 2",
        "city": "sample string 3",
        "stateOrProvince": "sample string 4",
        "postalCode": "sample string 5",
        "phone": "sample string 6",
        "fax": "sample string 7",
        "country": "sample string 8"
      },
      "homeAddress": {},
      "loginStatus": "sample string 22",
      "passwordExpiration": "sample string 23",
      "lastLogin": "sample string 24",
      "sendActivationEmail": "sample string 25",
      "customSettings": [
        {}
      ],
      "profileImageUri": "sample string 26",
      "userProfileLastModifiedDate": "sample string 27",
      "signatureImageUri": "sample string 28",
      "initialsImageUri": "sample string 29",
      "jobTitle": "sample string 30"
    }
  ],
  "modifiedDateTime": "sample string 3",
  "modifiedByUsername": "sample string 4",
  "userCount": "sample string 5",
  "settings": {
    "allowAccountManagement": "sample string 1",
    "useNewDocuSignExperienceInterface": "sample string 2",
    "canCreateWorkspaces": "sample string 3",
    "allowBulkSending": "sample string 4",
    "allowEnvelopeSending": "sample string 5",
    "allowESealRecipients": "sample string 6",
    "allowSignerAttachments": "sample string 7",
    "allowTaggingInSendAndCorrect": "sample string 8",
    "allowWetSigningOverride": "sample string 9",
    "allowedAddressBookAccess": "sample string 10",
    "allowedTemplateAccess": "sample string 11",
    "enableRecipientViewingNotifications": "sample string 12",
    "enableSequentialSigningInterface": "sample string 13",
    "receiveCompletedSelfSignedDocumentsAsEmailLinks": "sample string 14",
    "useNewSendingInterface": "sample string 15",
    "allowSupplementalDocuments": "sample string 16",
    "supplementalDocumentsMustView": "sample string 17",
    "supplementalDocumentsMustAccept": "sample string 18",
    "supplementalDocumentsMustRead": "sample string 19",
    "disableDocumentUpload": "sample string 20",
    "disableOtherActions": "sample string 21",
    "allowAutoTagging": "sample string 22",
    "allowApiAccess": "sample string 23",
    "allowApiAccessToAccount": "sample string 24",
    "allowApiSendingOnBehalfOfOthers": "sample string 25",
    "allowApiSequentialSigning": "sample string 26",
    "enableApiRequestLogging": "sample string 27",
    "allowDocuSignDesktopClient": "sample string 28",
    "allowSendersToSetRecipientEmailLanguage": "sample string 29",
    "allowVaulting": "sample string 30",
    "allowedToBeEnvelopeTransferRecipient": "sample string 31",
    "enableTransactionPointIntegration": "sample string 32",
    "powerFormRole": "sample string 33",
    "allowPowerFormsAdminToAccessAllPowerFormEnvelopes": "sample string 34",
    "vaultingMode": "sample string 35",
    "allowAccountManagementMetadata": {},
    "useNewDocuSignExperienceInterfaceMetadata": {},
    "canCreateWorkspacesMetadata": {},
    "allowBulkSendingMetadata": {},
    "allowEnvelopeSendingMetadata": {},
    "allowESealRecipientsMetadata": {},
    "allowSignerAttachmentsMetadata": {},
    "allowTaggingInSendAndCorrectMetadata": {},
    "allowWetSigningOverrideMetadata": {},
    "allowedAddressBookAccessMetadata": {},
    "allowedTemplateAccessMetadata": {},
    "enableRecipientViewingNotificationsMetadata": {},
    "enableSequentialSigningInterfaceMetadata": {},
    "receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata": {},
    "useNewSendingInterfaceMetadata": {},
    "allowSupplementalDocumentsMetadata": {},
    "supplementalDocumentsMustViewMetadata": {},
    "supplementalDocumentsMustAcceptMetadata": {},
    "supplementalDocumentsMustReadMetadata": {},
    "disableDocumentUploadMetadata": {},
    "disableOtherActionsMetadata": {},
    "allowAutoTaggingMetadata": {},
    "allowApiAccessMetadata": {},
    "allowApiAccessToAccountMetadata": {},
    "allowApiSendingOnBehalfOfOthersMetadata": {},
    "allowApiSequentialSigningMetadata": {},
    "enableApiRequestLoggingMetadata": {},
    "allowDocuSignDesktopClientMetadata": {},
    "allowSendersToSetRecipientEmailLanguageMetadata": {},
    "allowVaultingMetadata": {},
    "allowedToBeEnvelopeTransferRecipientMetadata": {},
    "enableTransactionPointIntegrationMetadata": {},
    "powerFormRoleMetadata": {},
    "allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata": {},
    "vaultingModeMetadata": {}
  }
}')


@name("Returns a permissions profile in the specified account.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/permission_profiles/{{permissionProfileId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "include"= "{{include}}"


@name("Updates a permission profile within the specified account.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/permission_profiles/{{permissionProfileId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "include"= "{{include}}"
data('{
  "permissionProfileId": "sample string 1",
  "permissionProfileName": "sample string 2",
  "users": [
    {
      "userName": "sample string 1",
      "userId": "sample string 2",
      "userType": "sample string 3",
      "isAdmin": "sample string 4",
      "userStatus": "sample string 5",
      "uri": "sample string 6",
      "email": "sample string 7",
      "password": "sample string 8",
      "title": "sample string 9",
      "createdDateTime": "sample string 10",
      "firstName": "sample string 11",
      "middleName": "sample string 12",
      "lastName": "sample string 13",
      "suffixName": "sample string 14",
      "permissionProfileId": "sample string 15",
      "permissionProfileName": "sample string 16",
      "countryCode": "sample string 17",
      "subscribe": "sample string 18",
      "userSettings": [
        {}
      ],
      "accountManagementGranular": {
        "canManageUsers": "sample string 1",
        "canManageAdmins": "sample string 2",
        "canManageGroups": "sample string 3",
        "canManageSharing": "sample string 4",
        "canManageAccountSettings": "sample string 5",
        "canManageReporting": "sample string 6",
        "canManageAccountSecuritySettings": "sample string 7",
        "canManageSigningGroups": "sample string 8",
        "canViewUsers": "sample string 9",
        "canManageUsersMetadata": {
          "rights": "sample string 1",
          "uiHint": "sample string 2",
          "uiType": "sample string 3",
          "uiOrder": "sample string 4",
          "is21CFRPart11": "sample string 5",
          "options": [
            "sample string 1"
          ]
        },
        "canManageAdminsMetadata": {},
        "canManageGroupsMetadata": {},
        "canManageSharingMetadata": {},
        "canManageAccountSettingsMetadata": {},
        "canManageReportingMetadata": {},
        "canManageAccountSecuritySettingsMetadata": {},
        "canManageSigningGroupsMetadata": {},
        "canViewUsersMetadata": {}
      },
      "sendActivationOnInvalidLogin": "sample string 19",
      "activationAccessCode": "sample string 20",
      "enableConnectForUser": "sample string 21",
      "forgottenPasswordInfo": {
        "forgottenPasswordQuestion1": "sample string 1",
        "forgottenPasswordAnswer1": "sample string 2",
        "forgottenPasswordQuestion2": "sample string 3",
        "forgottenPasswordAnswer2": "sample string 4",
        "forgottenPasswordQuestion3": "sample string 5",
        "forgottenPasswordAnswer3": "sample string 6",
        "forgottenPasswordQuestion4": "sample string 7",
        "forgottenPasswordAnswer4": "sample string 8"
      },
      "groupList": [
        {
          "groupId": "sample string 1",
          "groupName": "sample string 2",
          "permissionProfileId": "sample string 3",
          "groupType": "sample string 4",
          "users": [
            {
              "userName": "sample string 1",
              "userId": "sample string 2",
              "email": "sample string 3",
              "userType": "sample string 4",
              "userStatus": "sample string 5",
              "uri": "sample string 6",
              "loginStatus": "sample string 7",
              "sendActivationEmail": "sample string 8",
              "activationAccessCode": "sample string 9"
            }
          ]
        }
      ],
      "workAddress": {
        "address1": "sample string 1",
        "address2": "sample string 2",
        "city": "sample string 3",
        "stateOrProvince": "sample string 4",
        "postalCode": "sample string 5",
        "phone": "sample string 6",
        "fax": "sample string 7",
        "country": "sample string 8"
      },
      "homeAddress": {},
      "loginStatus": "sample string 22",
      "passwordExpiration": "sample string 23",
      "lastLogin": "sample string 24",
      "sendActivationEmail": "sample string 25",
      "customSettings": [
        {}
      ],
      "profileImageUri": "sample string 26",
      "userProfileLastModifiedDate": "sample string 27",
      "signatureImageUri": "sample string 28",
      "initialsImageUri": "sample string 29",
      "jobTitle": "sample string 30"
    }
  ],
  "modifiedDateTime": "sample string 3",
  "modifiedByUsername": "sample string 4",
  "userCount": "sample string 5",
  "settings": {
    "allowAccountManagement": "sample string 1",
    "useNewDocuSignExperienceInterface": "sample string 2",
    "canCreateWorkspaces": "sample string 3",
    "allowBulkSending": "sample string 4",
    "allowEnvelopeSending": "sample string 5",
    "allowESealRecipients": "sample string 6",
    "allowSignerAttachments": "sample string 7",
    "allowTaggingInSendAndCorrect": "sample string 8",
    "allowWetSigningOverride": "sample string 9",
    "allowedAddressBookAccess": "sample string 10",
    "allowedTemplateAccess": "sample string 11",
    "enableRecipientViewingNotifications": "sample string 12",
    "enableSequentialSigningInterface": "sample string 13",
    "receiveCompletedSelfSignedDocumentsAsEmailLinks": "sample string 14",
    "useNewSendingInterface": "sample string 15",
    "allowSupplementalDocuments": "sample string 16",
    "supplementalDocumentsMustView": "sample string 17",
    "supplementalDocumentsMustAccept": "sample string 18",
    "supplementalDocumentsMustRead": "sample string 19",
    "disableDocumentUpload": "sample string 20",
    "disableOtherActions": "sample string 21",
    "allowAutoTagging": "sample string 22",
    "allowApiAccess": "sample string 23",
    "allowApiAccessToAccount": "sample string 24",
    "allowApiSendingOnBehalfOfOthers": "sample string 25",
    "allowApiSequentialSigning": "sample string 26",
    "enableApiRequestLogging": "sample string 27",
    "allowDocuSignDesktopClient": "sample string 28",
    "allowSendersToSetRecipientEmailLanguage": "sample string 29",
    "allowVaulting": "sample string 30",
    "allowedToBeEnvelopeTransferRecipient": "sample string 31",
    "enableTransactionPointIntegration": "sample string 32",
    "powerFormRole": "sample string 33",
    "allowPowerFormsAdminToAccessAllPowerFormEnvelopes": "sample string 34",
    "vaultingMode": "sample string 35",
    "allowAccountManagementMetadata": {},
    "useNewDocuSignExperienceInterfaceMetadata": {},
    "canCreateWorkspacesMetadata": {},
    "allowBulkSendingMetadata": {},
    "allowEnvelopeSendingMetadata": {},
    "allowESealRecipientsMetadata": {},
    "allowSignerAttachmentsMetadata": {},
    "allowTaggingInSendAndCorrectMetadata": {},
    "allowWetSigningOverrideMetadata": {},
    "allowedAddressBookAccessMetadata": {},
    "allowedTemplateAccessMetadata": {},
    "enableRecipientViewingNotificationsMetadata": {},
    "enableSequentialSigningInterfaceMetadata": {},
    "receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata": {},
    "useNewSendingInterfaceMetadata": {},
    "allowSupplementalDocumentsMetadata": {},
    "supplementalDocumentsMustViewMetadata": {},
    "supplementalDocumentsMustAcceptMetadata": {},
    "supplementalDocumentsMustReadMetadata": {},
    "disableDocumentUploadMetadata": {},
    "disableOtherActionsMetadata": {},
    "allowAutoTaggingMetadata": {},
    "allowApiAccessMetadata": {},
    "allowApiAccessToAccountMetadata": {},
    "allowApiSendingOnBehalfOfOthersMetadata": {},
    "allowApiSequentialSigningMetadata": {},
    "enableApiRequestLoggingMetadata": {},
    "allowDocuSignDesktopClientMetadata": {},
    "allowSendersToSetRecipientEmailLanguageMetadata": {},
    "allowVaultingMetadata": {},
    "allowedToBeEnvelopeTransferRecipientMetadata": {},
    "enableTransactionPointIntegrationMetadata": {},
    "powerFormRoleMetadata": {},
    "allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata": {},
    "vaultingModeMetadata": {}
  }
}')


@name("Deletes a permissions profile within the specified account.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/permission_profiles/{{permissionProfileId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "move_users_to"= "{{move_users_to}}"
data('{}')


// Retrieves a list of recipients in the specified account that are associated with a email address supplied in the query string.

@name("Gets recipient names associated with an email address.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/recipient_names"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "email"= "{{email}}"


@name("Gets the descriptors for all of an account's active reports (for listings)")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/reports"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Creates a customized report")
POST "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/reports"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Gets the specified report")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/reports/{{id}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Saves a customized report")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/reports/{{id}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Removes a customized report")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/reports/{{id}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Returns the result set from running the specified report")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/reports/report_results"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Returns the specified report as a CSV string")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/reports/report_results_csv"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Returns Account available seals for specified account.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/seals"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


// Retrieves the account settings information for the specified account.

@name("Gets account settings information.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


// Updates the account settings for the specified account.

@name("Updates the account settings for an account.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"



@name("Returns the configuration information for the eNote eOriginal integration.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/enote_configuration"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Updates configuration information for the eNote eOriginal integration.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/enote_configuration"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "connectConfigured": "sample string 1",
  "eNoteConfigured": "sample string 2",
  "organization": "sample string 3",
  "userName": "sample string 4",
  "password": "sample string 5"
}')


@name("Deletes configuration information for the eNote eOriginal integration.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/enote_configuration"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Select envelope purge configuration.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/envelope_purge_configuration"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Updates envelope purge configuration.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/envelope_purge_configuration"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Returns default user level settings for a specified account")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/notification_defaults"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Updates default user level settings for a specified account")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/notification_defaults"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Get the password rules")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/password_rules"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Update the password rules")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/password_rules"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "passwordStrengthType": "sample string 1",
  "passwordStrengthTypeMetadata": {
    "options": [
      {
        "name": "sample string 1",
        "minimumLength": "sample string 2",
        "passwordIncludeUpperCase": "sample string 3",
        "passwordIncludeLowerCase": "sample string 4",
        "passwordIncludeDigit": "sample string 5",
        "passwordIncludeSpecialCharacter": "sample string 6",
        "passwordIncludeDigitOrSpecialCharacter": "sample string 7"
      }
    ]
  },
  "expirePassword": "sample string 2",
  "expirePasswordDays": "sample string 3",
  "expirePasswordDaysMetadata": {
    "minimumDays": "sample string 1",
    "maximumDays": "sample string 2"
  },
  "minimumPasswordLength": "sample string 4",
  "minimumPasswordLengthMetadata": {
    "minimumLength": "sample string 1",
    "maximumLength": "sample string 2"
  },
  "minimumPasswordAgeDays": "sample string 5",
  "minimumPasswordAgeDaysMetadata": {
    "minimumAge": "sample string 1",
    "maximumAge": "sample string 2"
  },
  "lockoutDurationType": "sample string 6",
  "lockoutDurationTypeMetadata": {
    "options": [
      "sample string 1"
    ]
  },
  "lockoutDurationMinutes": "sample string 7",
  "lockoutDurationMinutesMetadata": {
    "minimumMinutes": "sample string 1",
    "maximumMinutes": "sample string 2"
  },
  "passwordIncludeUpperCase": "sample string 8",
  "passwordIncludeLowerCase": "sample string 9",
  "passwordIncludeDigit": "sample string 10",
  "passwordIncludeSpecialCharacter": "sample string 11",
  "passwordIncludeDigitOrSpecialCharacter": "sample string 12",
  "questionsRequired": "sample string 13",
  "questionsRequiredMetadata": {
    "minimumQuestions": "sample string 1",
    "maximumQuestions": "sample string 2"
  }
}')


@name("Returns tab settings list for specified account")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/tabs"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Modifies tab settings for specified account")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/settings/tabs"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "textTabsEnabled": "sample string 1",
  "textTabsMetadata": {
    "rights": "sample string 1",
    "uiHint": "sample string 2",
    "uiType": "sample string 3",
    "uiOrder": "sample string 4",
    "is21CFRPart11": "sample string 5",
    "options": [
      "sample string 1"
    ]
  },
  "radioTabsEnabled": "sample string 2",
  "radioTabsMetadata": {},
  "checkboxTabsEnabled": "sample string 3",
  "checkboxTabsMetadata": {},
  "listTabsEnabled": "sample string 4",
  "listTabsMetadata": {},
  "approveDeclineTabsEnabled": "sample string 5",
  "approveDeclineTabsMetadata": {},
  "noteTabsEnabled": "sample string 6",
  "noteTabsMetadata": {},
  "dataFieldRegexEnabled": "sample string 7",
  "dataFieldRegexMetadata": {},
  "dataFieldSizeEnabled": "sample string 8",
  "dataFieldSizeMetadata": {},
  "tabLocationEnabled": "sample string 9",
  "tabLocationMetadata": {},
  "tabScaleEnabled": "sample string 10",
  "tabScaleMetadata": {},
  "tabLockingEnabled": "sample string 11",
  "tabLockingMetadata": {},
  "savingCustomTabsEnabled": "sample string 12",
  "savingCustomTabsMetadata": {},
  "tabTextFormattingEnabled": "sample string 13",
  "tabTextFormattingMetadata": {},
  "sharedCustomTabsEnabled": "sample string 14",
  "sharedCustomTabsMetadata": {},
  "senderToChangeTabAssignmentsEnabled": "sample string 15",
  "senderToChangeTabAssignmentsMetadata": {},
  "tabDataLabelEnabled": "sample string 16",
  "tabDataLabelMetadata": {},
  "firstLastEmailTabsEnabled": "sample string 17",
  "firstLastEmailTabsMetadata": {},
  "calculatedFieldsEnabled": "sample string 18",
  "calculatedFieldsMetadata": {},
  "allowTabOrder": "sample string 19",
  "allowTabOrderMetadata": {}
}')


// Reserved: Retrieves shared item status for one or more users and types of items.
// 
// Users with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.

@name("Reserved: Gets the shared item status for one or more users.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/shared_access"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "count"= "{{count}}"
? "envelopes_not_shared_user_status"= "{{envelopes_not_shared_user_status}}"
? "folder_ids"= "{{folder_ids}}"
? "item_type"= "{{item_type}}"
? "search_text"= "{{search_text}}"
? "shared"= "{{shared}}"
? "start_position"= "{{start_position}}"
? "user_ids"= "{{user_ids}}"


// Reserved: Sets the shared access information for one or more users.

@name("Reserved: Sets the shared access information for users.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/shared_access"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "item_type"= "{{item_type}}"
? "preserve_existing_shared_access"= "{{preserve_existing_shared_access}}"
? "user_ids"= "{{user_ids}}"
data('{
  "resultSetSize": "sample string 1",
  "totalSetSize": "sample string 2",
  "startPosition": "sample string 3",
  "endPosition": "sample string 4",
  "nextUri": "sample string 5",
  "previousUri": "sample string 6",
  "accountId": "sample string 7",
  "sharedAccess": [
    {
      "user": {
        "userName": "sample string 1",
        "userId": "sample string 2",
        "email": "sample string 3",
        "userType": "sample string 4",
        "userStatus": "sample string 5",
        "uri": "sample string 6",
        "loginStatus": "sample string 7",
        "sendActivationEmail": "sample string 8",
        "activationAccessCode": "sample string 9"
      },
      "envelopes": [
        {
          "user": {},
          "shared": "sample string 1"
        }
      ],
      "templates": [
        {
          "templateId": "sample string 1",
          "templateName": "sample string 2",
          "owner": {},
          "sharedUsers": [
            {
              "user": {}
            }
          ],
          "sharedGroups": [
            {
              "group": {
                "groupId": "sample string 1",
                "groupName": "sample string 2",
                "permissionProfileId": "sample string 3",
                "groupType": "sample string 4",
                "users": [
                  {}
                ]
              }
            }
          ],
          "shared": "sample string 3"
        }
      ]
    }
  ]
}')


@name("Returns Account available signature providers for specified account.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/signatureProviders"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Returns the managed signature definitions for the account")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/signatures"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "stamp_format"= "{{stamp_format}}"
? "stamp_name"= "{{stamp_name}}"
? "stamp_type"= "{{stamp_type}}"


@name("Updates a account signature.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/signatures"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Adds/updates one or more account signatures. This request may include images in multi-part format.")
POST "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/signatures"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "decode_only"= "{{decode_only}}"
data('{}')


@name("Returns information about a single signature by specifed signatureId.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/signatures/{{signatureId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Updates a account signature.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/signatures/{{signatureId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "close_existing_signature"= "{{close_existing_signature}}"
data('{}')


@name("Close the specified signature by Id.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/signatures/{{signatureId}}"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{}')


@name("Gets list of supported languages for recipient language setting.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/supported_languages"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


// Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.

@name("Gets a list of unsupported file types.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/unsupported_file_types"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Get watermark information.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/watermark"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Update watermark information.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/watermark"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "id": "sample string 1",
  "enabled": "sample string 2",
  "font": "sample string 3",
  "fontSize": "sample string 4",
  "fontColor": "sample string 5",
  "displayAngle": "sample string 6",
  "transparency": "sample string 7",
  "watermarkText": "sample string 8",
  "imageBase64": "sample string 9"
}')


@name("Get watermark preview.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/watermark/preview"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "id": "sample string 1",
  "enabled": "sample string 2",
  "font": "sample string 3",
  "fontSize": "sample string 4",
  "fontColor": "sample string 5",
  "displayAngle": "sample string 6",
  "transparency": "sample string 7",
  "watermarkText": "sample string 8",
  "imageBase64": "sample string 9"
}')


// Retrieves the account provisioning information for the account.

@name("Retrieves the account provisioning information for the account.")
GET "https://{{baseUrl}}/v2.1/accounts/provisioning"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


@name("Get membership account password rules")
GET "https://{{baseUrl}}/v2.1/current_user/password_rules"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"



