#!/usr/bin/env dothttp

// Retrieves information about groups associated with the account.
@name("Gets information about groups associated with the account.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "count"= "{{count}}"
? "group_type"= "{{group_type}}"
? "include_usercount"= "{{include_usercount}}"
? "search_text"= "{{search_text}}"
? "start_position"= "{{start_position}}"


// Updates the group name and modifies, or sets, the permission profile for the group.
@name("Updates the group information for a group.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "groups": [
    {
      "groupId": "sample string 1",
      "groupName": "sample string 2",
      "permissionProfileId": "sample string 3",
      "groupType": "sample string 4",
      "users": [
        {
          "userName": "sample string 1",
          "userId": "sample string 2",
          "email": "sample string 3",
          "userType": "sample string 4",
          "userStatus": "sample string 5",
          "uri": "sample string 6",
          "loginStatus": "sample string 7",
          "sendActivationEmail": "sample string 8",
          "activationAccessCode": "sample string 9"
        }
      ]
    }
  ],
  "resultSetSize": "sample string 1",
  "totalSetSize": "sample string 2",
  "startPosition": "sample string 3",
  "endPosition": "sample string 4",
  "nextUri": "sample string 5",
  "previousUri": "sample string 6"
}')


// Creates one or more groups for the account.// // Groups can be used to help manage users by associating users with a group. You can associate a group with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but it makes it easier to manage user permissions for a large number of users. You can also use groups with template sharing to limit user access to templates.
@name("Creates one or more groups for the account.")
POST "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "groups": [
    {
      "groupId": "sample string 1",
      "groupName": "sample string 2",
      "permissionProfileId": "sample string 3",
      "groupType": "sample string 4",
      "users": [
        {
          "userName": "sample string 1",
          "userId": "sample string 2",
          "email": "sample string 3",
          "userType": "sample string 4",
          "userStatus": "sample string 5",
          "uri": "sample string 6",
          "loginStatus": "sample string 7",
          "sendActivationEmail": "sample string 8",
          "activationAccessCode": "sample string 9"
        }
      ]
    }
  ],
  "resultSetSize": "sample string 1",
  "totalSetSize": "sample string 2",
  "startPosition": "sample string 3",
  "endPosition": "sample string 4",
  "nextUri": "sample string 5",
  "previousUri": "sample string 6"
}')


// Deletes an existing user group.
@name("Deletes an existing user group.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "groups": [
    {
      "groupId": "sample string 1",
      "groupName": "sample string 2",
      "permissionProfileId": "sample string 3",
      "groupType": "sample string 4",
      "users": [
        {
          "userName": "sample string 1",
          "userId": "sample string 2",
          "email": "sample string 3",
          "userType": "sample string 4",
          "userStatus": "sample string 5",
          "uri": "sample string 6",
          "loginStatus": "sample string 7",
          "sendActivationEmail": "sample string 8",
          "activationAccessCode": "sample string 9"
        }
      ]
    }
  ],
  "resultSetSize": "sample string 1",
  "totalSetSize": "sample string 2",
  "startPosition": "sample string 3",
  "endPosition": "sample string 4",
  "nextUri": "sample string 5",
  "previousUri": "sample string 6"
}')


// Retrieves information about the brands associated with the requested group.
@name("Gets group brand ID Information.
")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups/{{groupId}}/brands"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"


// Adds group brand ID information to a group.
@name("Adds group brand ID information to a group.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups/{{groupId}}/brands"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "brands": [
    {
      "brandId": "sample string 1"
    }
  ]
}')


// Deletes brand information from the requested group.
@name("Deletes brand information from the requested group.")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups/{{groupId}}/brands"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "brands": [
    {
      "brandId": "sample string 1"
    }
  ]
}')


// Retrieves a list of users in a group.
@name("Gets a list of users in a group.")
GET "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups/{{groupId}}/users"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
? "count"= "{{count}}"
? "start_position"= "{{start_position}}"


// Adds one or more users to an existing group.
@name("Adds one or more users to an existing group.")
PUT "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups/{{groupId}}/users"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "users": [
    {
      "userName": "sample string 1",
      "userId": "sample string 2",
      "email": "sample string 3",
      "userType": "sample string 4",
      "userStatus": "sample string 5",
      "uri": "sample string 6",
      "loginStatus": "sample string 7",
      "sendActivationEmail": "sample string 8",
      "activationAccessCode": "sample string 9"
    }
  ]
}')


// Deletes one or more users from a group.
@name("Deletes one or more users from a gro")
DELETE "https://{{baseUrl}}/v2.1/accounts/{{accountId}}/groups/{{groupId}}/users"
"Accept": "application/json"
"Authorization": "Bearer {{accessToken}}"
data('{
  "users": [
    {
      "userName": "sample string 1",
      "userId": "sample string 2",
      "email": "sample string 3",
      "userType": "sample string 4",
      "userStatus": "sample string 5",
      "uri": "sample string 6",
      "loginStatus": "sample string 7",
      "sendActivationEmail": "sample string 8",
      "activationAccessCode": "sample string 9"
    }
  ]
}')



