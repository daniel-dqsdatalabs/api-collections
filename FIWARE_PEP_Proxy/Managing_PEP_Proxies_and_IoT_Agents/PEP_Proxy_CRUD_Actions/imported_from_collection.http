#!/usr/bin/env dothttp

// To create a new PEP Proxy account within an application , send a POST request to the `//v1/applications/{{application-id}}/pep_proxies` endpoint  along with the `X-Auth-token` header from a previously logged in administrative user.
// 
// Provided there is no previously existing PEP Proxy account associated with the application, a new account will be created with a unique `id` and `password` and the values will be returned in the response.

@name("Create a PEP Proxy")
POST "http://{{keyrock}}/v1/applications/{{application-id}}/pep_proxies"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"



// Making a GET request the `/v1/applications/{{application-id}}/pep_proxies/` endpoint will return the details of the associated PEP Proxy Account. The `X-Auth-token` must be supplied in the headers.

@name("Read PEP Proxy Details")
GET "http://{{keyrock}}/v1/applications/{{application-id}}/pep_proxies/"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"



// To renew the password of a PEP Proxy Account, make a PATCH request to the  `/v1/applications/{{application-id}}/pep_proxies` endpoint will return the details of the associated PEP Proxy Account. The `X-Auth-token` must be supplied in the headers.
// 
// The response returns a new password.

@name("Reset Password of PEP Proxy")
PATCH "http://{{keyrock}}/v1/applications/{{application-id}}/pep_proxies"
"Accept": "application/json"
"Content-Type": "application/json"
"X-Auth-token": "{{X-Auth-token}}"



// An existing PEP Proxy Account can be deleted by making a DELETE request to the  `/v1/applications/{{application-id}}/pep_proxies` endpoint. The `X-Auth-token` must be supplied in the headers.

@name("Delete PEP Proxy")
DELETE "http://{{keyrock}}/v1/applications/{{application-id}}/pep_proxies"
"Accept": "application/json"
"Content-Type": "application/json"
"Content-Type": "{{Content-Type}}"
"X-Auth-token": "{{X-Auth-token}}"




