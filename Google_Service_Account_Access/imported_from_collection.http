#!/usr/bin/env dothttp

// Load the JS RSA Sign library We can do this by calling a CDN of the library. Then save it to an environment and calling eval on it in the next script we want to use it in.

@name("Side Load JSRSASign ")
GET "http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js"


// |||
// |:---|:---
// |```iss```|Email address of service account .
// |```scope```|A space-delimited list of the permissions that the application requests.
// |```aud```|A descriptor of the intended target of the assertion. When making an access token request this value is always https://oauth2.googleapis.com/token.
// |```exp```|The expiration time of the assertion, specified as seconds since 00:00:00 UTC, January 1, 1970. This value has a maximum of 1 hour after the issued time.
// |```iat```|The time the assertion was issued, specified as seconds since 00:00:00 UTC, January 1, 1970.

@name("Google Get Token")
POST "https://oauth2.googleapis.com/token"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "grant_type": [
        "urn:ietf:params:oauth:grant-type:jwt-bearer"
    ],
    "assertion": [
        "{{jwt}} "
    ]
})



