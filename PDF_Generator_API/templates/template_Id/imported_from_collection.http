#!/usr/bin/env dothttp

// Returns template configuration

@name("Get template")
GET "https://{{baseUrl}}/templates/:templateId"


// Updates template configuration. The template configuration for pages and layout must be complete as the entire configuration is replaced and not merged.

@name("Update template")
PUT "https://{{baseUrl}}/templates/:templateId"
"Content-Type": "application/json"
data('{
    "name": "<string>",
    "tags": [
        "<string>",
        "<string>"
    ],
    "isDraft": "<boolean>",
    "layout": {
        "format": "<string>",
        "width": "<number>",
        "height": "<number>",
        "unit": "<string>",
        "orientation": "<string>",
        "roation": "<integer>",
        "margins": {
            "top": "<number>",
            "right": "<number>",
            "bottom": "<number>",
            "left": "<number>"
        },
        "repeatLayout": {
            "format": "<string>",
            "width": "<number>",
            "height": "<number>"
        },
        "emptyLabels": "<integer>"
    },
    "pages": [
        {
            "width": "<number>",
            "height": "<number>",
            "margins": {
                "right": "<number>",
                "bottom": "<number>"
            },
            "components": [
                {
                    "cls": "<string>",
                    "id": "<string>",
                    "width": "<number>",
                    "height": "<number>",
                    "top": "<number>",
                    "left": "<number>",
                    "zindex": "<integer>",
                    "value": "<string>",
                    "dataIndex": "<string>"
                },
                {
                    "cls": "<string>",
                    "id": "<string>",
                    "width": "<number>",
                    "height": "<number>",
                    "top": "<number>",
                    "left": "<number>",
                    "zindex": "<integer>",
                    "value": "<string>",
                    "dataIndex": "<string>"
                }
            ]
        },
        {
            "width": "<number>",
            "height": "<number>",
            "margins": {
                "right": "<number>",
                "bottom": "<number>"
            },
            "components": [
                {
                    "cls": "<string>",
                    "id": "<string>",
                    "width": "<number>",
                    "height": "<number>",
                    "top": "<number>",
                    "left": "<number>",
                    "zindex": "<integer>",
                    "value": "<string>",
                    "dataIndex": "<string>"
                },
                {
                    "cls": "<string>",
                    "id": "<string>",
                    "width": "<number>",
                    "height": "<number>",
                    "top": "<number>",
                    "left": "<number>",
                    "zindex": "<integer>",
                    "value": "<string>",
                    "dataIndex": "<string>"
                }
            ]
        }
    ]
}')


// Deletes the template from workspace

@name("Delete template")
DELETE "https://{{baseUrl}}/templates/:templateId"


// Creates a copy of a template to the workspace specified in authentication parameters.

@name("Copy template")
POST "https://{{baseUrl}}/templates/:templateId/copy"
? "name"= "<string>"


// Returns an unique URL which you can use to redirect your user to the editor form your application or use the generated URL as iframe source to show the editor within your application.

@name("Open editor")
POST "https://{{baseUrl}}/templates/:templateId/editor"
"Content-Type": "application/json"
? "language"= "<string>"
data('"<object>"')


// Merges template with data and returns base64 encoded document or a public URL to a document. You can send json encoded data in request body or a public URL to your json file as the data parameter.

@name("Merge template")
POST "https://{{baseUrl}}/templates/:templateId/output"
"Content-Type": "application/json"
? "name"= "<string>"
? "format"= "pdf"
? "output"= "base64"
data('{
    "id": "<integer>",
    "name": "<string>"
}')



