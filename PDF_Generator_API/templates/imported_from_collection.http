#!/usr/bin/env dothttp

// Returns a list of templates available for the authenticated workspace

@name("Get templates")
GET "https://{{baseUrl}}/templates"


// Creates a new template. If template configuration is not specified in the request body then an empty template is created. Template is placed to the workspace specified in authentication params. Template configuration must be sent in the request body.

@name("Create template")
POST "https://{{baseUrl}}/templates"
"Content-Type": "application/json"
data('{
    "name": "<string>",
    "tags": [
        "<string>",
        "<string>"
    ],
    "isDraft": "<boolean>",
    "layout": {
        "format": "<string>",
        "width": "<number>",
        "height": "<number>",
        "unit": "<string>",
        "orientation": "<string>",
        "roation": "<integer>",
        "margins": {
            "top": "<number>",
            "right": "<number>",
            "bottom": "<number>",
            "left": "<number>"
        },
        "repeatLayout": {
            "format": "<string>",
            "width": "<number>",
            "height": "<number>"
        },
        "emptyLabels": "<integer>"
    },
    "pages": [
        {
            "width": "<number>",
            "height": "<number>",
            "margins": {
                "right": "<number>",
                "bottom": "<number>"
            },
            "components": [
                {
                    "cls": "<string>",
                    "id": "<string>",
                    "width": "<number>",
                    "height": "<number>",
                    "top": "<number>",
                    "left": "<number>",
                    "zindex": "<integer>",
                    "value": "<string>",
                    "dataIndex": "<string>"
                },
                {
                    "cls": "<string>",
                    "id": "<string>",
                    "width": "<number>",
                    "height": "<number>",
                    "top": "<number>",
                    "left": "<number>",
                    "zindex": "<integer>",
                    "value": "<string>",
                    "dataIndex": "<string>"
                }
            ]
        },
        {
            "width": "<number>",
            "height": "<number>",
            "margins": {
                "right": "<number>",
                "bottom": "<number>"
            },
            "components": [
                {
                    "cls": "<string>",
                    "id": "<string>",
                    "width": "<number>",
                    "height": "<number>",
                    "top": "<number>",
                    "left": "<number>",
                    "zindex": "<integer>",
                    "value": "<string>",
                    "dataIndex": "<string>"
                },
                {
                    "cls": "<string>",
                    "id": "<string>",
                    "width": "<number>",
                    "height": "<number>",
                    "top": "<number>",
                    "left": "<number>",
                    "zindex": "<integer>",
                    "value": "<string>",
                    "dataIndex": "<string>"
                }
            ]
        }
    ]
}')


// Allows to merge multiples template with data and returns base64 encoded document or public url to a document.

@name("Merge multiple templates")
POST "https://{{baseUrl}}/templates/output"
"Content-Type": "application/json"
? "name"= "<string>"
? "format"= "pdf"
? "output"= "base64"
data('[
    {
        "template": "<integer>",
        "data": {
            "id": "<integer>",
            "name": "<string>"
        }
    },
    {
        "template": "<integer>",
        "data": {
            "id": "<integer>",
            "name": "<string>"
        }
    }
]')



