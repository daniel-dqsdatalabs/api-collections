#!/usr/bin/env dothttp

// The sample shows the `GET /environments/{envId}/users/{userId}/pairingkeys/{pairingKeyId}` operation return information about the pairing key resource specified by its ID in the request URL.

@name("READ One MFA Pairing Key")
GET "https://{{apiPath}}/environments/{{envID}}/users/{{userID}}/pairingKeys/{{pairingKeyID}}"
"Authorization": "Bearer {{jwtToken}}"


// The `POST /environments/{envId}/users/{userId}/pairingKeys` operation adds a pairing key to the specified user resource.
// 
// Use the `applications` to provide a list of native application IDs that can be used with this pairing key. Leave `applications` as an empty collection to allow all available native applications in the environment to be used.
// 
// Only native applications that have `bundleId` or `packageName`, and are associated with `pushCredentials` are considered available in this context. Such applications should represent mobile applications that exist in the Apple or Google applications store.

@name("CREATE MFA Pairing Key")
POST "https://{{apiPath}}/environments/{{envID}}/users/{{userID}}/pairingKeys"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
data('{
  "applications": [
    { 
      "id": "{{appID}}" 
    }
  ]
}')


// The sample shows the `DELETE /environments/{envId}/users/{userId}/pairingkeys/{pairingKeyId}` operation to remove the pairing key specified in the request URL.
// 
// 
// When the pairing key is removed successfully, the response returns a `204 Successfully deleted` message.

@name("DELETE MFA Pairing Key")
DELETE "https://{{apiPath}}/environments/{{envID}}/users/{{userID}}/pairingKeys/{{pairingKeyID}}"
"Authorization": "Bearer {{jwtToken}}"



