#!/usr/bin/env dothttp

// When a new user resource is created, the `mfaEnabled` attribute that controls the user's ability to use multi-factor authentication is set to `false` by default.
// 
// For existing users, you can use the `GET /environments/{environmentId}/users/{userId}/mfaEnabled` operation to check whether the specified user is enabled or disabled.

@name("READ User MFA Enabled")
GET "https://{{apiPath}}/environments/{{envID}}/users/{{userID}}/mfaEnabled"
"Authorization": "Bearer {{jwtToken}}"


// The `mfaEnabled` attribute is a read-only attribute that cannot be changed through calls to `PUT
// /environments/{environmentId}/users/{userId}` or `PATCH
// /environments/{environmentId}/users/{userId}`. However, you can update the `mfaEnabled` value by calling the `PUT /environments/{environmentId}/users/{userId}/mfaEnabled` endpoint.
// 
// The sample shows the `PUT /environments/{environmentId}/users/{userId}/mfaEnabled` operation to enable the user resource's ability to use multi-factor authentication.

@name("UPDATE User MFA Enabled")
PUT "https://{{apiPath}}/environments/{{envID}}/users/{{userID}}/mfaEnabled"
"content-type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "mfaEnabled": true
})



