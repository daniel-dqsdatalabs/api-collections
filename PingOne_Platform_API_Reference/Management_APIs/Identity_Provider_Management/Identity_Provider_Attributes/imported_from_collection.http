#!/usr/bin/env dothttp

// The `GET /environments/{environmentId}/identityProviders/{providerId}/attributes` endpoint returns a list of all identity provider attribute resources for the specified identity provider resource.

@name("READ All Identity Provider Attributes")
GET "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Authorization": "Bearer {{jwtToken}}"


// To get data for a single identity provider attribute resource, the `GET /environments/{environmentId}/identityProviders/{providerId}/attributes/{idpAttrId}` operation returns data only for the identity provider attribute resource with the specified ID.

@name("READ One Identity Provider Attribute")
GET "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes/{{idpAttrID}}"
"Authorization": "Bearer {{jwtToken}}"


// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a new identity provider attribute mapping resource for the specified identity provider.
// 
// For `FACEBOOK` type attribute mappings, supported Facebook provider attributes can be mapped to any searchable PingOne user attribute. 
// 
// 

@name("CREATE Identity Provider Attribute (Facebook)")
POST "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "name.given",
    "update": "EMPTY_ONLY",
    "value": "${providerAttributes.first_name}"
})


// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a new identity provider attribute mapping resource for the specified identity provider.
// 
// For `GOOGLE` type attribute mappings, supported Google provider attributes can be mapped to any searchable PingOne user attribute. 
// 
// 

@name("CREATE Identity Provider Attribute (Google)")
POST "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "email",
    "update": "EMPTY_ONLY",
    "value": "${providerAttributes.email}"
})


// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a new identity provider attribute mapping resource for the specified identity provider.
// 
// 
// For `LINKEDIN` type attribute mappings, supported Google provider attributes can be mapped to any searchable PingOne user attribute. 
// 
// 

@name("CREATE Identity Provider Attribute (LinkedIn)")
POST "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "email",
    "update": "EMPTY_ONLY",
    "value": "${providerAttributes.emailAddress}"
})


// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a new identity provider attribute mapping resource for the specified identity provider.
// 
// 
// 
// For `OPENID_CONNECT` type attribute mappings, OIDC attributes can be mapped to any searchable PingOne user attribute. The administrator must know the name/path of the OIDC provider attribute that is mapped. 
// 
// 

@name("CREATE Identity Provider Attribute (OpenID Connect)")
POST "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "email",
    "update": "EMPTY_ONLY",
    "value": "${providerAttributes.user.emailAddress}"
})


// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a new identity provider attribute mapping resource for the specified identity provider.
// 
// 
// For `AMAZON` type attribute mappings, supported Amazon provider attributes can be mapped to any searchable PingOne user attribute. 
// 
// 

@name("CREATE Identity Provider Attribute (Amazon) ")
POST "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "email",
    "update": "EMPTY_ONLY",
    "value": "${providerAttributes.email}"
})


// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a new identity provider attribute mapping resource for the specified identity provider.
// 
// 
// For `TWITTER` type attribute mappings, supported Twitter provider attributes can be mapped to any searchable PingOne user attribute. 
// 
// 

@name("CREATE Identity Provider Attribute (Twitter)")
POST "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "email",
    "update": "EMPTY_ONLY",
    "value": "${providerAttributes.email}"
})


// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a new identity provider attribute mapping resource for the specified identity provider.
// 
// 
// For `APPLE` type attribute mappings, supported Apple attributes can be mapped to any searchable PingOne user attribute. The administrator must know the name/path of the Apple provider attribute that is mapped. 
// 

@name("CREATE Identity Provider Attribute (Apple)")
POST "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "email",
    "update": "EMPTY_ONLY",
    "value": "${providerAttributes.user.email}"
})


// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a new identity provider attribute mapping resource for the specified identity provider.
// 
// 
// The `POST /environments/{environmentId}/identityProviders/{providerId}/attributes` operation adds a SAML identity provider attribute resource for the specified identity provider. Any placeholder is acceptable.
// 
// 

@name("CREATE Identity Provider Attribute (SAML)")
POST "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "externalId",
    "value": "${providerAttributes.externalId}",
    "update": "ALWAYS"
})


// To update a property value associated with a selected identity provider attribute resource, use the  `PUT /environments/{environmentId}/identityProviders/{providerId}/attributes/{idpAttrId}` operation to modify the specified attribute values.

@name("UPDATE Identity Provider Attribute")
PUT "https://{{apiPath}}/environments/{{envID}}/identityProviders/{{providerID}}/attributes/{{idpAttrID}}"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "name.given",
    "value": "${providerAttributes.first_name}",
    "update": "EMPTY_ONLY"
})


// To delete an identity provider attribute resource, you need to specify the environment ID, the identity provider resource ID, and the attribute ID in the request URL. The `DELETE /environments/{environmentId}/identityProviders/{providerId}/attributes/{idpAttrId}` operation deletes the identified identity provider attribute resource.
// 
// 
// For successful delete operations, a `204 NO CONTENT` message is returned by the request.
// 

@name("DELETE Identity Provider Attribute")
DELETE "https://{{apiPath}}1/environments/{{envID}}/identityProviders/{{providerID}}/attributes/{{idpAttrID}}"
"Authorization": "Bearer {{jwtToken}}"




