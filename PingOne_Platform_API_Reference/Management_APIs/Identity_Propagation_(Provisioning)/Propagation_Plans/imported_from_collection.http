#!/usr/bin/env dothttp

// The `GET /environments/{environmentId}/propagation/plans` endpoint returns a list of all propagation plan resources associated with the specified environment resource.

@name("READ All Plans")
GET "https://{{apiPath}}/environments/{{envID}}/propagation/plans"
"Accept": "application/json"
"Authorization": "Bearer {{jwtToken}}"


// To get data for a single propagation plan resource, the `GET /environments/{environmentId}/propagation/plans/{planId}` operation returns data for the propagation plan resource with the specified ID.

@name("READ One Plan")
GET "https://{{apiPath}}/environments/{{envID}}/propagation/plans/{{planID}}"
"Accept": "application/json"
"Authorization": "Bearer {{jwtToken}}"


// The `POST /environments/{environmentId}/propagation/plans` operation adds a new propagation plan resource to the specified environment resource.

@name("CREATE Plan")
POST "https://{{apiPath}}/environments/{{envID}}/propagation/plans"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "Default Plan"
})


// The `PUT /environments/{environmentId}/propagation/plans/{planId}` operation updates the property values of the identified propagation plan resource.

@name("UPDATE Plan")
PUT "https://{{apiPath}}/environments/{{envID}}/propagation/plans/{{planID}}"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
json({
    "name": "Test-Propagation-Plan"
})


// The following sample shows the `DELETE /environments/{environmentId}/propagation/plans/{planId}` operation to delete the propagation plan resource specified by its ID in the request URL.
// 
// 
// When successful, the `DELETE` request returns a code `204 No Content` message.

@name("DELETE Plan")
DELETE "https://{{apiPath}}/environments/{{envID}}/propagation/plans/{{planID}}"
"Accept": "application/json"
"Authorization": "Bearer {{jwtToken}}"



