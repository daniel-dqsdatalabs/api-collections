#!/usr/bin/env dothttp

// The `GET /environments/{environmentId}/applications/{applicationId}/pushCredentials` operation returns all push credentials assigned to the application specified by the application ID.
// 
// Since `key`, `teamId` and `token` are considered credentials, these fields can be created with a POST request and updated with a PUT request, but are not returned by a GET request.
// 

@name("READ All MFA Push Credentials")
GET "https://{{apiPath}}/environments/{{envID}}/applications/{{appID}}/pushCredentials"
"Authorization": "Bearer {{jwtToken}}"


// The `GET /environments/{environmentId}/applications/{applicationId}/pushCredentials/{pushCredentialsId}` operation returns the push credentials (identified by its ID) assigned to the application specified by the application ID.

@name("READ One MFA Push Credential")
GET "https://{{apiPath}}/environments/{{envID}}/applications/{{appID}}/pushCredentials/{{pushCredID}}"
"Authorization": "Bearer {{jwtToken}}"


// ise sample shows the `POST /environments/{environmentId}/applications/{applicationId}/pushCredentials` operation to create the push credentials for an iOS mobile application in the specified environment resource.
// 
// The request URL identifies the environment ID and application ID. The request body specifies the `type` and the `key` attribute values. When the `type` is "APNS", the request also specifies the `teamId` and the `token` attribute values.
// 
// Since `key`, `teamId` and `token` are considered credentials, these fields can be created with a POST request and updated with a PUT request, but are not returned by a GET request.

@name("CREATE MFA Push Credential (APNS)")
POST "https://{{apiPath}}/environments/{{envID}}/applications/{{appID}}/pushCredentials"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
data('{
  "type": "APNS",
  "key": "key.value",
  "teamId": "team.id",
  "token": "-----BEGIN PRIVATE KEY-----\nMIGTAgEA****7HUikGZU\n-----END PRIVATE KEY-----"
}')


// This samples shows the `POST /environments/{environmentId}/applications/{applicationId}/pushCredentials` operation to create the push credentials for an Android mobile application in the specified environment resource.
// 
// 
// 
// The request URL identifies the environment ID and application ID. The request body specifies the `type` and the `key` attribute values. 
// 
// Since `key`is considered credentials, this field can be created with a POST request and updated with a PUT request, but it is not returned by a GET request.

@name("CREATE MFA Push Credential (FCM)")
POST "https://{{apiPath}}/environments/{{envID}}/applications/{{appID}}/pushCredentials"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
data('{
  "type": "FCM",
  "key": "key.value"
}')


// The sample shows the `PUT /environments/{environmentId}/applications/{applicationId}/pushCredentials/{pushCredentialsId}` operation to update the push credentials specified by its ID in the request URL. The push credentials are updated only for the application identified in the request URL.
// 
// Since `key`, `teamId` and `token` are considered credentials, these fields can be created with a POST request and updated with a PUT request, but are not returned by a GET request.

@name("UPDATE MFA Push Credential")
PUT "https://{{apiPath}}/environments/{{envID}}/applications/{{appID}}/pushCredentials/{{pushCredID}}"
"Content-Type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
data('{
  "type": "APNS",
  "key": "key.value.updated",
  "teamId": "team.id.updated",
  "token": "-----BEGIN PRIVATE KEY-----\nMIGTAgEA****7HUikGZU\n-----END PRIVATE KEY-----"
}')


// The sample shows the `DELETE /environments/{environmentId}/applications/{applicationId}/pushCredentials/{pushCredentialsId}` operation to delete the push credentials specified by its ID in the request URL. The push credentials are deleted only for the application identified in the request URL.
// 
// 
// When successful, the `DELETE` request returns a code `204 No Content` message.

@name("DELETE MFA Push Credential")
DELETE "https://{{apiPath}}/environments/{{envID}}/applications/{{appID}}/pushCredentials/{{pushCredID}}"
"Authorization": "Bearer {{accessToken}}"



