#!/usr/bin/env dothttp

// The following sample shows the `GET /environments/{environmentId}/populations` operation to return the complete list of population resources associated with the specified environment.
// 
// The request returns a list of populations resources. The returned data includes the `id`, which is the population ID required for many user-related API calls. It also shows the `userCount` attribute, which identifies the number of users associated with the population.

@name("READ All Populations")
GET "https://{{apiPath}}/environments/{{envID}}/populations"
"Authorization": "Bearer {{jwtToken}}"


// You can use `GET /environments/{environmentId}/populations/{populationId}` to view a population in the specified environment. The following sample shows the operation to get information about a single population.  The population ID is specified in the request URL.

@name("READ One Population")
GET "https://{{apiPath}}/environments/{{envID}}/populations/{{popID}}"
"Authorization": "Bearer {{jwtToken}}"


// You can use `POST /environments/{environmentId}/populations/` to create a new population resource in the specified environment.
// 
// In the request body, the population `name` is a required property. The `description` property is optional.

@name("CREATE Population")
POST "https://{{apiPath}}/environments/{{envID}}/populations"
"content-type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
data('{
  "name" : "Accounting",
  "description" : "Accounting group"
}')


// To update a population resource, you need to know the environment ID and the ID of the population to modify. You can use `PUT /environments/{environmentId}/populations/{populationId}` to update the attribute values for a population in the specified environment.
// 

@name("UPDATE Population")
PUT "https://{{apiPath}}/environments/{{envID}}/populations/{{popID}}"
"content-type": "application/json"
"Authorization": "Bearer {{jwtToken}}"
data('{
  "name" : "Finance and Accounting",
  "description" : "Finance and accounting group"
}')


// You can perform a `DELETE` operation on the population resource to remove it from the environment. The population must not have any associated users before it can be deleted. You can verify that the population resource is empty by calling `GET /environments/{environmentId}/populations/{populationId}` to view the `userCount` value.
// 
// The sample shows the `DELETE /environments/{environmentId}/populations/{populationId}` operation to delete the empty population from the specified environment.
// 
// 
// When successful, the `DELETE` request returns a code `204 No Content` message.

@name("DELETE Population")
DELETE "https://{{apiPath}}/environments/{{envID}}/populations/{{popID}}"
"Authorization": "Bearer {{jwtToken}}"




