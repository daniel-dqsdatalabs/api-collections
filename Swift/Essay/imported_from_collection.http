#!/usr/bin/env dothttp

// 获得所有的文章

@name("getAllEssay")
GET "https://{{url}}/api/v1/essay/all"


// 获得一个id，文章
// 
// **参数**
// - id: 表示`Essay`的主键（需要加在请求链接里）

@name("getOneEssay")
GET "https://{{url}}/api/v1/essay/id"


// 获得5个id，文章，每次刷新，获取新的5篇文章

@name("getPageEssay")
GET "https://{{url}}/api/v1/essay/split"
? "page"= "2"


// 获得一个id，文章，包含用户信息
// 
// **参数**
// - tuples：表示同时获取用户信息

@name("getAllEssayTuples")
GET "https://{{url}}/api/v1/essay/tuples"


// 新增一个id，文章

@name("creatOneEssay")
POST "https://{{url}}/api/v1/essay"
files(
	("userID", "5"),
	("title", "测试"),
	("content", "测试发布文章"),
	("type", "读书")
)


// 通过文章`id`列表，获取文章信息列表

@name("creatEssayByListID")
POST "https://{{url}}/api/v1/essay"
files(
	("userID", "5"),
	("title", "测试"),
	("content", "测试发布文章"),
	("type", "读书")
)


// 更新文章
// 
// **参数**
// - id: 表示`Essay`的主键（需要加在请求链接里）

@name("udpateOneEssay")
PATCH "https://{{url}}/api/v1/essay/id"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 逻辑删除文章
// 
// **参数**
// - id: 表示`Essay`的主键（需要加在请求链接里）
// - logicdel: 表示逻辑删除

@name("logicDelOneEssay")
PATCH "https://{{url}}/api/v1/essay/7/logicdel"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 增加文章的阅读数量
// 
// **参数**
// - id: 表示`Essay`的主键（需要加在请求链接里）
// - read: 表示阅读数量

@name("increaseReadCount")
PATCH "https://{{url}}/api/v1/essay/7/read"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 增加文章的点赞数量
// 
// **参数**
// - id: 表示`Essay`的主键（需要加在请求链接里）
// - like: 表示点赞

@name("increaseLikeCount")
PATCH "https://{{url}}/api/v1/essay/7/like"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 减少文章的点赞数量
// 
// **参数**
// - id: 表示`Essay`的主键（需要加在请求链接里）
// - unlike: 表示取消点赞

@name("decreaseLikeCount")
PATCH "https://{{url}}/api/v1/essay/1/unlike"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 删除一个id，文章
// 
// **参数**
// - id: 表示`Essay`的主键（需要加在请求链接里）

@name("deleteOneEssay")
DELETE "https://{{url}}/api/v1/essay/id"



// 搜索文章
// 
// **参数**
// - term: 表示搜索的项目（title、type）

@name("searchEssay")
GET "https://{{url}}/api/v1/essay/search"


// 获得所有的文章（按照文章发布的时间排列）

@name("getAllEssaySortByTime")
GET "https://{{url}}/api/v1/essay/sort"



