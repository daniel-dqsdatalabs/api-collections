#!/usr/bin/env dothttp

// 获得所有的推荐资源

@name("getAllResource")
GET "https://{{url}}/api/v1/resource/all"


// 获得5个id，资源，每次刷新，获取新的5个资源

@name("getPageResource")
GET "https://{{url}}/api/v1/resource/split"
? "page"= "2"


// 获得一个id，推荐资源
// 
// **参数**
// - id: 表示`Resource`的主键（需要加在请求链接里）

@name("getOneResource")
GET "https://{{url}}/api/v1/resource/id"


// 新增一个id，推荐资源

@name("creatOneResource")
POST "https://{{url}}/api/v1/resource"
files(
	("userID", "0"),
	("imageURL", "/image/resource/swift.png"),
	("name", "Swift"),
	("introduce", "工业级品质的、强类型、静态安全、面向接口的跨领域编程语言。能够为iOS、WEB、AI编程"),
	("type", "编程")
)


// 更新推荐资源
// 
// **参数**
// - id: 表示`Resource`的主键（需要加在请求链接里）

@name("udpateOneResource")
PATCH "https://{{url}}/api/v1/resource/id"
files(
	("userID", ""),
	("imageURL", ""),
	("name", ""),
	("introduce", ""),
	("type", "")
)


// 逻辑删除资源
// 
// **参数**
// - id: 表示`Resource`的主键（需要加在请求链接里）
// - logicdel: 表示逻辑删除

@name("logicDelOneResource")
PATCH "https://{{url}}/api/v1/resource/id/logicdel"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 增加资源的阅读数量
// 
// **参数**
// - id: 表示`Resource`的主键（需要加在请求链接里）
// - read: 表示阅读数量

@name("increaseReadCount")
PATCH "https://{{url}}/api/v1/resource/7/read"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 增加资源的点赞数量
// 
// **参数**
// - id: 表示`Resource`的主键（需要加在请求链接里）
// - like: 表示点赞

@name("increaseLikeCount")
PATCH "https://{{url}}/api/v1/resource/7/like"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 减少点赞的点赞数量
// 
// **参数**
// - id: 表示`Resource`的主键（需要加在请求链接里）
// - unlike: 表示取消点赞

@name("decreaseLikeCount")
PATCH "https://{{url}}/api/v1/resource/1/unlike"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 删除一个id，推荐资源
// 
// **参数**
// - id: 表示`Resource`的主键（需要加在请求链接里）

@name("deleteOneResource")
DELETE "https://{{url}}/api/v1/resource/id"



// 搜索推荐资源
// 
// **参数**
// - term: 表示搜索的项目（name、type）

@name("searchResource")
GET "https://{{url}}/api/v1/resource/search"


// 获得所有的推荐资源（按照推荐资源创建的时间排列）

@name("getAllResourceSortByTime")
GET "https://{{url}}/api/v1/resource/sort"



