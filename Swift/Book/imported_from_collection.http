#!/usr/bin/env dothttp

// 获得所有的推荐书籍

@name("getAllBook")
GET "https://{{url}}/api/v1/book/all"


// 获得分页的推荐书籍

@name("getPageBook")
GET "https://{{url}}/api/v1/book/split"
? "page"= "1"


// 获得一个id，推荐书籍
// 
// **参数**
// - id: 表示`Book`的主键（需要加在请求链接里）

@name("getOneBook")
GET "https://{{url}}/api/v1/book/id"


// 新增一个id，推荐书籍

@name("creatOneBook")
POST "https://{{url}}/api/v1/book"
files(
	("userID", "0"),
	("name", "天空之海"),
	("imageURL", "/image/book/book3.jpg"),
	("introduce", "少年小天因一次致命经历患上了妄想症，他笃定自己是一条鱼，大海将是他的最终归宿。在被送入帕斯卡精神康复医院后，他遇见了“飞鸟男孩”乔羽，两个少年的生命轨迹也因此发生改变。然而与此同时，小天又被宿命般地卷入到一场与生物灾难对抗的战争中，被迫与乔羽分别。十二年后，当两人再次重逢时，灾难卷土重来，命运的牢笼也在此刻无声降下"),
	("type", "小说"),
	("author", "猫爪君"),
	("bookPages", "19")
)


// 更新推荐书籍
// 
// **参数**
// - id: 表示`Book`的主键（需要加在请求链接里）

@name("udpateOneBook")
PATCH "https://{{url}}/api/v1/book/id"
files(
	("userID", ""),
	("name", ""),
	("imageURL", ""),
	("introduce", ""),
	("type", ""),
	("author", ""),
	("bookPages", "")
)


// 逻辑删除书籍
// 
// **参数**
// - id: 表示`Book`的主键（需要加在请求链接里）
// - logicdel: 表示逻辑删除

@name("logicDelOneBook")
PATCH "https://{{url}}/api/v1/book/id/logicdel"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 增加书籍的阅读数量
// 
// **参数**
// - id: 表示`Book`的主键（需要加在请求链接里）
// - read: 表示阅读数量

@name("increaseReadCount")
PATCH "https://{{url}}/api/v1/book/7/read"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 增加书籍的点赞数量
// 
// **参数**
// - id: 表示`Book`的主键（需要加在请求链接里）
// - like: 表示点赞

@name("increaseLikeCount")
PATCH "https://{{url}}/api/v1/book/1/like"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 减少书籍的点赞数量
// 
// **参数**
// - id: 表示`Book`的主键（需要加在请求链接里）
// - unlike: 表示点赞

@name("decreaseLikeCount")
PATCH "https://{{url}}/api/v1/book/1/unlike"
files(
	("userID", ""),
	("title", ""),
	("content", ""),
	("type", "")
)


// 删除一个id，推荐书籍
// 
// **参数**
// - id: 表示`Book`的主键（需要加在请求链接里）

@name("deleteOneBook")
DELETE "https://{{url}}/api/v1/book/id"



// 搜索推荐书籍
// 
// **参数**
// - term: 表示搜索的项目（name、type、author）

@name("searchBook")
GET "https://{{url}}/api/v1/book/search"


// 获得所有的推荐书籍（按照推荐书籍发布的时间排列）

@name("getAllBookSortByTime")
GET "https://{{url}}/api/v1/book/sort"



