#!/usr/bin/env dothttp

// 获得所有的学生

@name("getAllStudent")
GET "https://{{url}}/api/v1/student/all"


// 获得一个id用户绑定的学籍信息
// 
// **参数**
// - id: 表示`Student`的主键（需要加在请求链接里）

@name("getOneStudent")
GET "https://{{url}}/api/v1/student/1"


// 新增一个id用户的学籍信息

@name("creatOneStudent")
POST "https://{{url}}/api/v1/student"
files(
	("userID", "0"),
	("number", "100020"),
	("password", "123456"),
	("name", "王菲"),
	("sex", "女"),
	("age", "21"),
	("school", "福建师范大学福清分校"),
	("major", "心理学"),
	("year", "2015")
)


// 用户绑定学籍信息
// 
// - 返回学生信息

@name("BindStudent")
POST "https://{{url}}/api/v1/student/bind"
files(
	("userID", "2"),
	("number", "100002"),
	("password", "123456")
)


// 新增一个id用户的学籍信息
// 
// **新增**
// - id: 表示`Student`的主键（需要加在请求链接里）

@name("updateOneStudent")
PATCH "https://{{url}}/api/v1/student/1"
files(
	("userID", "0"),
	("number", "1000001"),
	("password", "123456789"),
	("name", "肖权"),
	("sex", "男"),
	("age", "22"),
	("school", "福建师范大学福清分校"),
	("major", "网络工程"),
	("year", "2015")
)


// 删除一个id用户绑定的学籍信息
// 
// **参数**
// - id: 表示`Student`的主键（需要加在请求链接里）

@name("deleteOneStudent")
DELETE "https://{{url}}/api/v1/student/id"



// 搜索一个id用户的学籍信息
// 
// **参数**
// - term: 表示搜索的项目（number、name、school、major）

@name("searchStudent")
GET "https://{{url}}/api/v1/student/search"
? "term"= "网络工程"


// 获得所有的用户信息（按照姓名排列）

@name("getAllStudentSortByNumber")
GET "https://{{url}}/api/v1/student/sort"



