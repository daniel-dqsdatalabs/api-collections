#!/usr/bin/env dothttp

// 获得所有的信息

@name("getAllMessage")
GET "https://{{url}}/api/v1/message/all"


// 获得一个id，信息
// 
// **参数**
// - id: 表示`Message`的主键（需要加在请求链接里）

@name("getOneMessage")
GET "https://{{url}}/api/v1/message/2"


// 获得一个id，信息，同时包好用户信息
// 
// **参数**
// - tuples：返回带用户信息

@name("getOneMessageTuples")
GET "https://{{url}}/api/v1/message/tuples"


// 新增一条id，信息

@name("creatOneMessage")
POST "https://{{url}}/api/v1/message"
files(
	("userID", "4"),
	("friendID", "1"),
	("fromUserID", "1"),
	("toUserID", "4"),
	("content", "中午吃什么？"),
	("type", "普通")
)


// 新增2条id，信息
// 
// 用户点击其他用户，可以选择发送私信

@name("creatTwoMessage")
POST "https://{{url}}/api/v1/message/two"
files(
	("userID", "4"),
	("friendID", "1"),
	("fromUserID", "1"),
	("toUserID", "4"),
	("content", "中午吃什么？"),
	("type", "普通")
)


// 新增一条id，信息

@name("sendMsgByAccount")
POST "https://{{url}}/api/v1/message/account"
files(
	("userID", "9"),
	("account", "17759132743"),
	("content", "吃食堂吧？"),
	("type", "普通")
)


// 删除用户于其他用户的所有聊天记录（只删除该用户的，对立用户不受影响）
// 
// **参数**
// - userID：消息所有者
// - friendID：聊天的用户ID

@name("delAllMsgByUser")
POST "https://{{url}}/api/v1/message/delall"
files(
	("userID", "1"),
	("friendID", "9")
)


// 删除用户于其他用户的所有聊天记录（只删除该用户的，对立用户不受影响）
// 
// **参数**
// - userID：消息所有者
// - friendID：聊天的用户ID

@name("readAllMsgByUser")
POST "https://{{url}}/api/v1/message/readall"
files(
	("userID", "1"),
	("friendID", "9")
)


// 获取用户之间的所有聊天信息

@name("getIMAllMsgByUser")
POST "https://{{url}}/api/v1/message/showim"
files(
	("userID", "1"),
	("friendID", "9")
)


// 逻辑删除，荣誉
// 
// **参数**
// - id: 表示`Message`的主键（需要加在请求链接里）
// - logicdel: 表示逻辑删除

@name("logicDelOneMessage")
PATCH "https://{{url}}/api/v1/message/id/logicdel"



// 删除一个id收藏信息
// 
// **参数**
// - id: 表示`Message`的主键（需要加在请求链接里）

@name("deleteOneMessage")
DELETE "https://{{url}}/api/v1/message/8"



// 获得所有的用户的信息（按照信息发送的时间排列）

@name("getAllMessageByTime")
GET "https://{{url}}/api/v1/message/sort"



