#!/usr/bin/env dothttp

// to get all offices , like the above , we will need to make a GET request to the repository

@name("(ALL USER) get all offices ")
GET "https://hvcg-tm.herokuapp.com/offices"


// send a GET request to the office href

@name("(ALL USER) get a office by id")
GET "https://hvcg-tm.herokuapp.com/offices/1"


// here example make the two office 

@name("(ADMIN ONLY) Make a new office ")
POST "https://hvcg-tm.herokuapp.com/offices"
"Content-Type": "application/json"



// let us add key staff so that we can complete our office table.
// 
// let us add the two big boss shall we
// 
// By the way if there is no informtation is added about a link (current case is the office of the staffs because no office is added). The link api to the office will return an HTTP 404 not found

@name("(ADMIN ONLY) let add staffs (currently the office)")
POST "https://hvcg-tm.herokuapp.com/staffs"
"Content-Type": "application/json"



// Just like for the staff 
// 
// We can modify the office using a PUT request to the id of the repository
// 
// However please note that PUT request will not update any link (like createBy , personInCharge...) and it will not be modify by PUT
// 
// please see here: 
// https://stackoverflow.com/questions/44117091/spring-data-rest-put-is-not-working-for-associated-reference-types

@name("(ADMIN ONLY) modify an office using Put")
PUT "https://hvcg-tm.herokuapp.com/offices/21"
"Content-Type": "application/x-www-form-urlencoded"



// Just like with staff . it is simple , just send a DELETE request to the office link

@name("(ADMIN ONLY) Delete an office")
DELETE "https://hvcg-tm.herokuapp.com/offices/21"



