#!/usr/bin/env dothttp

// Now first let get familiar with the API to read , add , modify and delete staff
// 
// also this is the link to get all staffs

@name("(ALL USER) staffs API Repository")
GET "https://hvcg-tm.herokuapp.com/staffs"


// Let us see how to add the first staff
// 
// Remember we must use POST method and send JSON body to the staffs repository 
// 
// Note that the default createTime is the current Time . As a result if now is the time you want then there is no need to add createTime 

@name("(ADMIN ONLY) add a staff")
POST "https://hvcg-tm.herokuapp.com/staffs"
"Content-Type": "application/json"



// Now to get back the staff we need to add the staffs repository API and "/{id}" 
// 
// let see an Example here 
// 
// Note that the API generate by Spring follow HATEOAS

@name("(ALL USER ) get the a staff detail")
GET "https://hvcg-tm.herokuapp.com/staffs/1"


// To modify the Staff we must use either : PUT method or PATCH method
// 
// PUT method: to easy to understand. PUT method is just like a POST method except the entity ID is preserved.
// 
// All of the current information (except Id and any link) will be completely replace 
// 
// However for updating any link you must you use patch instead of PUT 
// 
// Spring auto generate api is designed to work like this 
// 
// you can see here:
// https://stackoverflow.com/questions/54445706/spring-data-rest-put-on-repository-silently-fails-on-child-references
// 
// By the way for other repository you can do like this too
// 
// let see the example 

@name("(ADMIN ONLY) modify a staff")
PUT "https://hvcg-tm.herokuapp.com/staffs/1"
"Content-Type": "application/json"



// to delete a staff just post a DELETE request to the 
// "https://hvcg-tm.herokuapp.com/staffs/{staffId}""

@name("(ADMIN ONLY) delete a staff")
DELETE "https://hvcg-tm.herokuapp.com/staffs/31"
"Content-Type": "application/x-www-form-urlencoded"



