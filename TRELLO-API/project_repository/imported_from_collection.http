#!/usr/bin/env dothttp

// to get all project
// 
// we will need send a GET request to to the repository

@name("(ALL USER) get all project")
GET "https://hvcg-tm.herokuapp.com/projects"


@name("(ALL USER) get a project by Id")
GET "https://hvcg-tm.herokuapp.com/projects/1"


@name("(ALL USER) get all team-project assignment")
GET "https://hvcg-tm.herokuapp.com/teamProjects"


// Like other repository 
// 
// By Now I hope you understand how to use the repository to make a project

@name("(ADMIN ONLY) add project")
POST "https://hvcg-tm.herokuapp.com/projects"
"Content-Type": "application/json"



// there is no difference between the way to assign team to project and the the staff to team
// 
// Sending a POST request to the repository is the way

@name("(ADMIN ONLY) assign team to project")
POST "https://hvcg-tm.herokuapp.com/teamProjects"
"Content-Type": "application/json"



// again just like the above the PUT Request modify everything except the link 

@name("(ADMIN ONLY) modify a project using PUT Request")
PUT "https://hvcg-tm.herokuapp.com/projects/11"
"Content-Type": "application/json"



// like above 
// 
// to delete a project we will send A Delete to the project href

@name("(ADMIN ONLY) delete a project")
DELETE "https://hvcg-tm.herokuapp.com/projects/11"


// again like staff-team assignment , to delete a team-project assignment we need to send a DELETE request to the href of the assignment

@name("(ADMIN ONLY) delete a team-project assignment")
DELETE "https://hvcg-tm.herokuapp.com/teamProjects/21"



