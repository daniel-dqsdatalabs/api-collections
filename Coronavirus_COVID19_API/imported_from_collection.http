#!/usr/bin/env dothttp

// List all the current routes available with detail on each.

@name("Default")
GET "https://{{baseUrl}}/"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// A summary of new and total cases per country updated daily.

@name("Summary")
GET "https://{{baseUrl}}/summary"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
"X-Access-Token": "{{access_token}}"


// Returns all the available countries and provinces, as well as the country slug for per country requests.

@name("Countries")
GET "https://{{baseUrl}}/countries"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Returns all cases by case type for a country from the first recorded case. Country must be the Slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("Day One")
GET "https://{{baseUrl}}/dayone/country/{{country}}/status/{{status}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Returns all cases by case type for a country from the first recorded case. Country must be the Slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("Day One All Status")
GET "https://{{baseUrl}}/dayone/country/{{country}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Returns all cases by case type for a country from the first recorded case with the latest record being the live count. Country must be the Slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("Day One Live")
GET "https://{{baseUrl}}/dayone/country/{{country}}/status/{{status}}/live"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Returns all cases by case type for a country from the first recorded case. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("Day One Total")
GET "https://{{baseUrl}}/total/dayone/country/{{country}}/status/{{status}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
"": ""


// Returns all cases by case type for a country from the first recorded case. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("Day One Total All Status")
GET "https://{{baseUrl}}/total/dayone/country/{{country}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
"": ""


// Returns all cases by case type for a country. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("By Country")
GET "https://{{baseUrl}}/country/{{country}}/status/{{status}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
? "from"= "2020-03-01T00:00:00Z"
? "to"= "2020-04-01T00:00:00Z"


// Returns all cases by case type for a country. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("By Country All Status")
GET "https://{{baseUrl}}/country/{{country}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
? "from"= "2020-03-01T00:00:00Z"
? "to"= "2020-04-01T00:00:00Z"


@name("By Country Live")
GET "https://{{baseUrl}}/country/{{country}}/status/{{status}}/live"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
? "from"= "2020-03-01T00:00:00Z"
? "to"= "2020-04-01T00:00:00Z"


// Returns all cases by case type for a country. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("By Country Total")
GET "https://{{baseUrl}}/total/country/{{country}}/status/{{status}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
? "from"= "2020-03-01T00:00:00Z"
? "to"= "2020-04-01T00:00:00Z"


// Returns all cases by case type for a country. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("By Country Total All Status")
GET "https://{{baseUrl}}/total/country/{{country}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Returns all live cases by case type for a country. These records are pulled every 10 minutes and are ungrouped. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("Live By Country And Status")
GET "https://{{baseUrl}}/live/country/{{country}}/status/{{status}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Returns all live cases by case type for a country. These records are pulled every 10 minutes and are ungrouped. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("Live By Country All Status")
GET "https://{{baseUrl}}/live/country/{{country}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Returns all live cases by case type for a country after a given date. These records are pulled every 10 minutes and are ungrouped. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("Live By Country And Status After Date")
GET "https://{{baseUrl}}/live/country/{{country}}/status/{{status}}/date/{{date}}"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Returns all live cases by case type for a country after a given date. These records are pulled every 10 minutes and are ungrouped. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("World WIP")
GET "https://{{baseUrl}}/world"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
? "from"= "2020-03-01T00:00:00Z"
? "to"= "2020-04-01T00:00:00Z"


// Returns all live cases by case type for a country after a given date. These records are pulled every 10 minutes and are ungrouped. Country must be the slug from /countries or /summary. Cases must be one of: confirmed, recovered, deaths

@name("World Total WIP")
GET "https://{{baseUrl}}/world/total"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
? "from"= "2020-03-01T00:00:00Z"
? "to"= "2020-04-01T00:00:00Z"


// Premium route, data sourced from additional data source and has additional calculated fields. Returns all cases by case type for a country. Country must be the slug from /countries or /summary.

@name("Premium By Country All Status")
GET "https://{{baseUrl}}/premium/country/{{country}}"
? "from"= "2020-03-01T00:00:00Z"
? "to"= "2020-04-01T00:00:00Z"


// Premium route, data sourced from additional data source and has additional calculated fields. Returns all cases by case type for a country. Country must be the slug from /countries or /summary.

@name("Premium Summary")
GET "https://{{baseUrl}}/premium/summary"
? "from"= "2020-03-01T00:00:00Z"
? "to"= "2020-04-01T00:00:00Z"


// Premium route, data sourced from additional data source. Returns country data. Country must be the slug from /countries or /summary.

@name("Premium By Country Data")
GET "https://{{baseUrl}}/premium/country/data/{{country}}"


// Premium route. All data around testing for a given country, ordered by date. This is updated twice weekly. There are several different types of tests performed, so the "entity" field needs to be checked. Country must be the slug from /countries or /summary.

@name("Premium Tests By Country")
GET "https://{{baseUrl}}/premium/country/testing/{{country}}"


// Premium route, travel data per country.

@name("Premium Travel Data By Country")
GET "https://{{baseUrl}}/premium/travel/country/{{country}}"


// Returns all daily data. This call results in 10MB of data being returned and should be used infrequently.

@name("All Data")
GET "https://{{baseUrl}}/all"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// This route returns the usage of the API. This is not for any COVID related statistics.

@name("Stats")
GET "https://{{baseUrl}}/stats"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
"Origin": "http://localhost"


// Adds a webhook to be notified of when new daily data is retrieved. The body of the webhook is the same as the response from /summary.

@name("Webhook")
POST "https://{{baseUrl}}/webhook"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")
data('{"URL":"https://covid19api.com/webhook"}')


@name("Version")
GET "https://{{baseUrl}}/version"
basicauth("corona", "ZUav4vawzCfMcMXHV8B")


// Admin-only route. Create an access key to unlock additional data, increase rate limits and more premium features.

@name("Create Access Key")
POST "https://{{baseUrl}}/auth/access_token"
basicauth("{{admin_user}}", "{{admin_pass}}")
json({
    "Email": "test@test.com",
    "Subscription": "basic"
})


// Admin-only route. Create an access key to unlock additional data, increase rate limits and more premium features.

@name("Subscriptions")
GET "https://{{baseUrl}}/auth/subscriptions"
basicauth("{{admin_user}}", "{{admin_pass}}")
json({
    "Email": "test1@covid19api.com",
    "Subscription": "basic"
})



