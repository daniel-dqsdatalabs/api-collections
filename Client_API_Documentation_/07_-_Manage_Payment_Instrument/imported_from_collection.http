#!/usr/bin/env dothttp

// # CreatePaymentInstrument API
// 
// Create payment instrument on subscriber account
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a fully authenticated subscriber session.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1115 | PaymentSourceNotValid | For rechargable stored value accounts, indicates the specired payment source is not valid |
// | 1112 | PaymentInstrumentAuthorizationFailed | Fault indicating that payment instrument authorization failed |
// | 1101 | AddressValidationFailed | Indicates the address could not be validated |
// | 1193 | FullSuiteAddressValidationFailed | Indicates the address could not be validated for convergent billing |
// | 1113 | PaymentInstrumentDetailNotFound | Fault indicating the payment instrument and/or its details could not be found |
// | 612 | PaymentInstrumentTypeNotSupported | Fault thrown when a payment instrument type that is not supported is used in a transaction |
// | 617 | TransactionFailure | The financial transaction failed to process |
// | 611 | PaymentInstrumentNotFound | The requested payment instrument was not found |
// | 606 | InvalidPaymentInstrument | Fault indicating that the requested payment instrument is not valid |
// | 613 | PayPalProcessingFailure | Fault exception occurring from Pay Pal processing |
// | 616 | RevenueTaxFailure | Fault thrown on tax processing failures |
// | 1144 | CaptchaVerificationFailed | Fault indicating Captcha is required on the method and the challenge-response provided is invalid |
// | 602 | GiftCardActivationFailure | Fault indicating that an error occurred activating the gift card |
// | 615 | RevenueConfigurationNotFound | Error reading documentation: Object reference not set to an instance of an object |
// | 626 | ExternalGiftCardFailure | Fault there is an error during an external gift card call to a provider |
// 
// # Response
// 
// ![Diagram to follow](http://custom.sbx1.cdops.net/Util/Screenshots/XYZ/CreatePaymentInstrument.jpg)
// 
// **Id** - Internal unique identifier.  Pass to other API when identifying a particular payment instrument.
// 
// **Default** - Indicates if this payment instrument is the default.  The default payment instrument is selected when a payment instrument is not supply in a SubmitOrder call when one is required.
// 
// # Request

@name("CreatePaymentInstrument (Mastercard)")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/CreatePaymentInstrument"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"CD-Language": "{{CD_LANGUAGE}}"
"Content-Type": "application/json"
data('{
    "ApplyToSubscriptions": true,
    "OverrideFraudValidation": false,
    "PaymentInstrument": {
        "BillingAddress": {
            "City": "Chicago",
            "Country": "USA",
            "DefaultBilling": true,
            "DefaultHome": true,
            "DefaultPostal": true,
            "DefaultService": true,
            "DefaultShipping": true,
            "DefaultWork": true,
            "LineOne": "33 West Street",
            "LineTwo": "",
            "PostalCode": "60604",
            "State": "IL",
            "Name": "MR CSG",
            "PhoneNumber": "123456789",
            "Status": 1
        },
        "Created": "2018-01-10T09:43:34.393Z",
        "Default": false,
        "Name": "MASTERCARD - 5100",
        "Type": 0,
        "CreditCard": {
            "AccountNumber": "5105105105105100",
            "Cvv": "123",
            "ExpirationMonth": "03",
            "ExpirationYear": "2022",
            "NameOnCard": "Mr CSG",
            "PhoneNumber": "123456789",
            "Type": "2"
        }
    }
}')


// # CreatePaymentInstrument API
// 
// Create payment instrument on subscriber account
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a fully authenticated subscriber session.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1115 | PaymentSourceNotValid | For rechargable stored value accounts, indicates the specired payment source is not valid |
// | 1112 | PaymentInstrumentAuthorizationFailed | Fault indicating that payment instrument authorization failed |
// | 1101 | AddressValidationFailed | Indicates the address could not be validated |
// | 1193 | FullSuiteAddressValidationFailed | Indicates the address could not be validated for convergent billing |
// | 1113 | PaymentInstrumentDetailNotFound | Fault indicating the payment instrument and/or its details could not be found |
// | 612 | PaymentInstrumentTypeNotSupported | Fault thrown when a payment instrument type that is not supported is used in a transaction |
// | 617 | TransactionFailure | The financial transaction failed to process |
// | 611 | PaymentInstrumentNotFound | The requested payment instrument was not found |
// | 606 | InvalidPaymentInstrument | Fault indicating that the requested payment instrument is not valid |
// | 613 | PayPalProcessingFailure | Fault exception occurring from Pay Pal processing |
// | 616 | RevenueTaxFailure | Fault thrown on tax processing failures |
// | 1144 | CaptchaVerificationFailed | Fault indicating Captcha is required on the method and the challenge-response provided is invalid |
// | 602 | GiftCardActivationFailure | Fault indicating that an error occurred activating the gift card |
// | 615 | RevenueConfigurationNotFound | Error reading documentation: Object reference not set to an instance of an object |
// | 626 | ExternalGiftCardFailure | Fault there is an error during an external gift card call to a provider |
// 
// # Response
// 
// ![Diagram to follow](http://custom.sbx1.cdops.net/Util/Screenshots/XYZ/CreatePaymentInstrument.jpg)
// 
// **Id** - Internal unique identifier.  Pass to other API when identifying a particular payment instrument.
// 
// **Default** - Indicates if this payment instrument is the default.  The default payment instrument is selected when a payment instrument is not supply in a SubmitOrder call when one is required.
// 
// # Request

@name("CreatePaymentInstrument (Visa)")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/CreatePaymentInstrument"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"CD-Language": "{{CD_LANGUAGE}}"
"Content-Type": "application/json"
data('{
    "ApplyToSubscriptions": true,
    "OverrideFraudValidation": false,
    "PaymentInstrument": {
        "BillingAddress": {
            "City": "Chicago",
            "Country": "USA",
            "DefaultBilling": true,
            "DefaultHome": true,
            "DefaultPostal": true,
            "DefaultService": true,
            "DefaultShipping": true,
            "DefaultWork": true,
            "LineOne": "44 West Street",
            "LineTwo": "",
            "PostalCode": "60604",
            "State": "IL",
            "Name": "MR CSG",
            "PhoneNumber": "123456789",
            "Status": 1
        },
        "Created": "2018-01-10T09:43:34.393Z",
        "Default": false,
        "Name": "VISA - 5100",
        "Type": 0,
        "CreditCard": {
            "AccountNumber": "4111111111111111",
            "Cvv": "789",
            "ExpirationMonth": "03",
            "ExpirationYear": "2023",
            "NameOnCard": "Mr CSG",
            "PhoneNumber": "123456789",
            "Type": "2"
        }
    }
}')


// # RetrieveWallet API
//   
// Retrieve payment instruments from subscriber account
// Returned payment instruments will not contain detail entities
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a minimum session level of an authenticated device.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1113 | PaymentInstrumentDetailNotFound | Fault indicating the payment instrument and/or its details could not be found |
// 
// # Request

@name("RetrieveWallet")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/RetrieveWallet"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"CD-Language": "{{CD_LANGUAGE}}"
"Content-Type": "application/json"
data('{
    "Currency": "USD",
    "ReturnAccountBalances": true
}')


// # RetrievePaymentInstrument API
//   
// Retrieve payment instrument from subscriber account
// Returned payment instrument will contain full details
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a minimum session level of an authenticated device.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1113 | PaymentInstrumentDetailNotFound | Fault indicating the payment instrument and/or its details could not be found |
// | 1114 | PaymentInstrumentTypeNotFound | Fault indicating the request payment instrument type could not be found, typically due to invalid configuration |
// | 611 | PaymentInstrumentNotFound | The requested payment instrument was not found |
// 
// # Request

@name("RetrievePaymentInstrument")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/RetrievePaymentInstrument"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"CD-Language": "{{CD_LANGUAGE}}"
"Content-Type": "application/json"
data('{
    "Id": {{PAYMENT_INSTRUMENT_ID}}
}')


// # RemovePaymentInstrument API
//   
// Deactivate payment instrument on subscriber account
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a fully authenticated subscriber session.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1117 | RemovePaymentInstrumentFailure | Fault thrown when an attempt is made to remove a payment instrument that can not be removed due to active associations (e.g. subscription, stored value recharge, etc) |
// | 1193 | FullSuiteAddressValidationFailed | Indicates the address could not be validated for convergent billing |
// | 1113 | PaymentInstrumentDetailNotFound | Fault indicating the payment instrument and/or its details could not be found |
// | 626 | ExternalGiftCardFailure | Fault there is an error during an external gift card call to a provider |
// 
// # Request

@name("RemovePaymentInstrument")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/RemovePaymentInstrument"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"CD-Language": "{{CD_LANGUAGE}}"
"Content-Type": "application/json"
data('{
    "Id": {{PAYMENT_INSTRUMENT_ID}}
}')



