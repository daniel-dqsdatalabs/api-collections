#!/usr/bin/env dothttp

// # CreateAddress API
//   
// Create an address
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a fully authenticated subscriber session.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1101 | AddressValidationFailed | Indicates the address could not be validated |
// | 1193 | FullSuiteAddressValidationFailed | Indicates the address could not be validated for convergent billing |
// | 2 | TextScrubberFailed | Text in the request was disallowed by the text scrubber configuration |
// 
// # Request

@name("CreateAddress")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/CreateAddress"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"CD-Language": "{{CD_LANGUAGE}}"
"Content-Type": "application/json"
json({
    "Address": {
        "AddressType": 16,
        "City": "London",
        "Country": "GBR",
        "DefaultHome": true,
        "DefaultPostal": true,
        "DefaultService": true,
        "DefaultShipping": true,
        "DefaultWork": false,
        "LineOne": "99 Warwick Street",
        "Name": "Regis",
        "PostalCode": "EC1 1CE",
        "Status": 1
    }
})


// # RetrieveAddresses API
//   
// Retrieve addresses for a subscriber
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a minimum session level of an authenticated device.
// 
// # Request

@name("RetrieveAddresses")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/RetrieveAddresses"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"Content-Type": "application/json"



// # RetrieveAddress API
//   
// Retrieve an address
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a minimum session level of an authenticated device.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1100 | AddressNotFound | Indicates the requested address could not be found |
// 
// # Request

@name("RetrieveAddress")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/RetrieveAddress"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"Content-Type": "application/json"
data('{
    "Id": {{ADDRESS_ID}}
}')


// # UpdateAddress API
//   
// Update an address
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a fully authenticated subscriber session.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1101 | AddressValidationFailed | Indicates the address could not be validated |
// | 1193 | FullSuiteAddressValidationFailed | Indicates the address could not be validated for convergent billing |
// | 1100 | AddressNotFound | Indicates the requested address could not be found |
// | 1124 | RemoveAddressFailure | Fault thrown when attempting to remove an address that is currently in use (e.g. as a billing address for a payment instrument, shipping address on a subscription, etc) |
// | 2 | TextScrubberFailed | Text in the request was disallowed by the text scrubber configuration |
// 
// # Request

@name("UpdateAddress")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/UpdateAddress"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"CD-Language": "{{CD_LANGUAGE}}"
"Content-Type": "application/json"
json({
    "Address": {
        "City": "London",
        "Country": "GBR",
        "DefaultHome": true,
        "DefaultPostal": true,
        "DefaultService": true,
        "DefaultShipping": true,
        "Id": 639313,
        "LineOne": "99 Warwick Street",
        "PostalCode": "BC11CB",
        "Name": "Regis",
        "Status": 1,
        "StatusName": "Active"
    }
})


// # RemoveAddress API
//   
// Remove an address
// 
// # Security
// 
// * This method requires HTTPS. Any request without SSL will be rejected.
// * This method requires a fully authenticated subscriber session.
// 
// # Error Codes
// 
// In addition to the common error codes, this method also returns the following error codes:
// 
// | Code | Name | Description |
// | ---- | ---- | ----------- |
// | 1100 | AddressNotFound | Indicates the requested address could not be found |
// | 1193 | FullSuiteAddressValidationFailed | Indicates the address could not be validated for convergent billing |
// | 1124 | RemoveAddressFailure | Fault thrown when attempting to remove an address that is currently in use (e.g. as a billing address for a payment instrument, shipping address on a subscription, etc) |
// 
// # Request

@name("RemoveAddress")
POST "https://{{CD_CORE_SERVICE_DOMAIN}}/Subscriber/RemoveAddress"
"CD-SystemID": "{{CD_SYSTEM_ID}}"
"CD-SessionID": "{{CD_SESSION_ID}}"
"Content-Type": "application/json"
data('{
    "Id": {{ADDRESS_ID}}
}')



