#!/usr/bin/env dothttp

// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("addRetailer")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:addRetailer soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerAddRetailerRequest">
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <!--You may enter the following 20 items in any order-->
            <!--Optional:-->
            <accept_terms xsi:type="xsd:boolean">1</accept_terms>
            <!--Optional:-->
            <additional_data xsi:type="ns:ApiParamInfoArray" soapenc:arrayType="ns:ApiParamInfo[]">
            	<data>
            		<param>Note</param>
            		<value>This is a great guy</value>
            	</data>
            </additional_data>
            <!--Optional:-->
            <billing_city xsi:type="xsd:string">Lehi</billing_city>
            <!--Optional:-->
            <billing_country xsi:type="xsd:string">USA</billing_country>
            <!--Optional:-->
            <billing_postal xsi:type="xsd:string">84043</billing_postal>
            <!--Optional:-->
            <billing_state xsi:type="xsd:string">UT</billing_state>
            <!--Optional:-->
            <billing_street xsi:type="xsd:string">3401N Thanksgiving Way</billing_street>
            <!--Optional:-->
            <campaign_code xsi:type="xsd:string">123456</campaign_code>
            <!--Optional:-->
            <!--<credit_card_exp_month xsi:type="xsd:string">?</credit_card_exp_month>-->
            <!--Optional:-->
            <!--<credit_card_exp_year xsi:type="xsd:string">?</credit_card_exp_year>-->
            <!--Optional:-->
            <!--<credit_card_number xsi:type="xsd:string">?</credit_card_number>-->
            <!--Optional:-->
            <!--<cvv2 xsi:type="xsd:string">?</cvv2>-->
            <!--Optional:-->
            <email xsi:type="xsd:string">mrbailey@doba.com</email>
            <!--Optional:-->
            <firstname xsi:type="xsd:string">Matt (TEST)</firstname>
            <ip_address xsi:type="xsd:string">11.12.13.14</ip_address>
            <!--Optional:-->
            <lastname xsi:type="xsd:string">Bailey (TEST)</lastname>
            <!--Optional:-->
            <phone xsi:type="xsd:string">801-765-9997</phone>
            <!--Optional:-->
            <subscriptions xsi:type="ns:ApiSubscriptionInfoArray" soapenc:arrayType="ns:ApiSubscriptionInfo[]">
            	<subscription>
            		<api_code>DPLUS</api_code>
            		<billing_responsibility>P</billing_responsibility>
            		<frequency>T</frequency>
            		<trial>14</trial>
            	</subscription>
            </subscriptions>
            <!--Optional:-->
            <username xsi:type="xsd:string">mrbailey@doba.com</username>
         </objRequest>
      </ns:addRetailer>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("getRetailers")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRetailers soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerGetRetailersRequest">
            <!--You may enter the following 8 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PARTNER_PASS}}</password>
               <username xsi:type="xsd:string">{{PARTNER_USER}}</username>
            </authentication>
            <!--Optional:-->
            <!--<email xsi:type="xsd:string">?</email>-->
            <!--Optional:-->
            <!--<from_date xsi:type="xsd:string">?</from_date>-->
            <!--Optional:-->
            <!--<last_name xsi:type="xsd:string">?</last_name>-->
            <!--Optional:-->
            <limit xsi:type="xsd:int">2</limit>
            <!--Optional:-->
            <offset xsi:type="xsd:int">0</offset>
            <!--Optional:-->
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
            <!--Optional:-->
            <!--<to_date xsi:type="xsd:string">?</to_date>-->
         </objRequest>
      </ns:getRetailers>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("upgradeRetailer")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiRetailerSearch"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:upgradeRetailer soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerUpgradeRetailerRequest">
            <!--You may enter the following 3 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
            <subscription xsi:type="ns:ApiSubscriptionBaseInfo">
               <!--You may enter the following 2 items in any order-->
               <api_code xsi:type="xsd:string">ENT</api_code>
               <frequency xsi:type="xsd:string">Y</frequency>
            </subscription>
         </objRequest>
      </ns:upgradeRetailer>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("getRetailerAccessInfo")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRetailerAccessInfo soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerRetailerAccessInfoRequest">
            <!--You may enter the following 2 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <retailer_ids xsi:type="ns:intArray" soapenc:arrayType="xsd:int[]">
            	<retailer_id>{{RETAILER_ID}}</retailer_id>
            </retailer_ids>
         </objRequest>
      </ns:getRetailerAccessInfo>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("requestPartnerPermission")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:requestPartnerPermission soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerRequestPartnerPermissionRequest">
            <!--You may enter the following 2 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
         </objRequest>
      </ns:requestPartnerPermission>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("hasPartnerPermission")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:hasPartnerPermission soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerHasPartnerPermissionRequest">
            <!--You may enter the following 2 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
         </objRequest>
      </ns:hasPartnerPermission>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("removePartnerPermission")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:removePartnerPermission soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerRemovePartnerPermissionRequest">
            <!--You may enter the following 2 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
         </objRequest>
      </ns:removePartnerPermission>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("createRetailerNote")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:createRetailerNote soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerCreateRetailerNoteRequest">
            <!--You may enter the following 3 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <note xsi:type="xsd:string">I just want Doba to know how great this client is! He\'s Amazing!</note>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
         </objRequest>
      </ns:createRetailerNote>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("getAutoLoginLink")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getAutoLoginLink soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerGetAutoLoginLinkRequest">
            <!--You may enter the following 2 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
         </objRequest>
      </ns:getAutoLoginLink>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("getPasswordResetLink")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getPasswordResetLink soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerGetPasswordResetLinkRequest">
            <!--You may enter the following 2 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
         </objRequest>
      </ns:getPasswordResetLink>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("getUpgradeOptions")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getUpgradeOptions soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerGetUpgradeOptionsRequest">
            <!--You may enter the following 3 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <!--Optional:-->
            <responsibility xsi:type="xsd:string">P</responsibility>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
         </objRequest>
      </ns:getUpgradeOptions>
   </soapenv:Body>
</soapenv:Envelope>')


// The Web Services Description Language (WSDL) file provides enough context for parameters to be generated through a SOAP client. The following is an example of what can be generated. The optional parameters that are not used are left in, but commented out. That is done in an effort to still show what is available, despite not being used.

@name("cancelRetailer")
POST "https://{{ENVIRONMENT}}.doba.com/wshelper/20110301/service.php"
"Content-Type": "application/xml"
? "class"= "ApiPartnerRetailer"
data('<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="https://www.doba.com/soap/20110301">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:cancelRetailer soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <objRequest xsi:type="ns:ApiPartnerCancelRetailerRequest">
            <!--You may enter the following 2 items in any order-->
            <authentication xsi:type="ns:ApiPartnerAuthenticationInfo">
               <!--You may enter the following 2 items in any order-->
               <password xsi:type="xsd:string">{{PASSWORD}}</password>
               <username xsi:type="xsd:string">{{USERNAME}}</username>
            </authentication>
            <retailer_id xsi:type="xsd:int">{{RETAILER_ID}}</retailer_id>
         </objRequest>
      </ns:cancelRetailer>
   </soapenv:Body>
</soapenv:Envelope>')



