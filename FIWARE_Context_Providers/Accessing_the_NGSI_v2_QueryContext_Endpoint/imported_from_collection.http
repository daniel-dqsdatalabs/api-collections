#!/usr/bin/env dothttp

// This example uses the NGSI v2 `op/query` endpoint to request a `temperature` reading from the  Static Data Generator Context Provider.
// 
// The response will return a object of `type:Number` and `value:42`
// 
// The Orion Context Broker will make similar requests to this `op/query` endpoint once a context provider has been registered.

@name("Retrieving a Single Attribute Value")
POST "http://{{context-provider}}/static/temperature/op/query"
"Content-Type": "application/json"
json({
    "entities": [
        {
            "type": "Store",
            "isPattern": "false",
            "id": "urn:ngsi-ld:Store:001"
        }
    ],
    "attrs": [
        "temperature"
    ]
})


// It is possible for the Orion Context Broker to make a request for multiple data values. This example uses the NGSI NGSI v2 `op/query`  endpoint to request  `temperature` and `relativeHumidity` readings from the Random Data Generator Context Provider. The requested attributes are found within the `attributes` array of the POST body.
// 
// 
// The response will return a object with values for both `temperature` and `relativeHumidity`
// 
// The Orion Context Broker will make similar requests to this `op/query` endpoint once a context provider has been registered.

@name("Retrieving Multiple Attribute Values")
POST "http://{{context-provider}}/random/weatherConditions/op/query"
"Content-Type": "application/json"
json({
    "entities": [
        {
            "type": "Store",
            "isPattern": "false",
            "id": "urn:ngsi-ld:Store:001"
        }
    ],
    "attrs": [
        "temperature",
        "relativeHumidity"
    ]
})


// This example uses the NGSI v2 `op/query`  endpoint to request temperature and relativeHumidity readings from the Weather API Context Provider. The requested attributes are found within the attributes array of the POST body.
// 
// The Orion Context Broker will make similar requests to this `op/query` endpoint once a context provider has been registered.

@name("Retrieving Live Weather Values")
POST "http://{{context-provider}}/random/weatherConditions/op/query"
"Content-Type": "application/json"
json({
    "entities": [
        {
            "type": "Store",
            "isPattern": "false",
            "id": "urn:ngsi-ld:Store:001"
        }
    ],
    "attrs": [
        "temperature",
        "relativeHumidity"
    ]
})


// This example uses the NGSI v2 `op/query`  endpoint to request tweets from the Twitter API Context Provider. The requested attributes are found within the attributes array of the POST body.
// 
// The Orion Context Broker will make similar requests to this queryContext `op/query`  once a context provider has been registered.

@name("Retrieving Live Tweets")
POST "http://{{context-provider}}/twitter/tweets/op/query"
"Content-Type": "application/json"
json({
    "entities": [
        {
            "type": "Store",
            "isPattern": "false",
            "id": "urn:ngsi-ld:Store:001"
        }
    ],
    "attrs": [
        "tweets"
    ]
})


// This example uses the NGSI v2 `op/query`  endpoint to request tweets from the Twitter API Context Provider. The requested attributes are found within the attributes array of the POST body.
// 
// The Orion Context Broker will make similar requests to this `op/query`  endpoint once a context provider has been registered.

@name("Retrieving Live Cat Facts")
POST "http://{{context-provider}}/catfacts/tweets/op/query"
"Content-Type": "application/json"
json({
    "entities": [
        {
            "type": "Store",
            "isPattern": "false",
            "id": "urn:ngsi-ld:Store:001"
        }
    ],
    "attrs": [
        "tweets"
    ]
})



