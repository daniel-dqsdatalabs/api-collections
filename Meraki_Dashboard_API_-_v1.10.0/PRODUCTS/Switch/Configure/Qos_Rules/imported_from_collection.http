#!/usr/bin/env dothttp

// Add a quality of service rule
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// vlan| integer| The VLAN of the incoming packet. A null value will match any VLAN.
// protocol| string| The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
// srcPort| integer| The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
// srcPortRange| string| The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
// dstPort| integer| The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
// dstPortRange| string| The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
// dscp| integer| DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
// 
// #### Supports Action Batches
// 
// **Resource**|**Operation**
// :-------------: |:-------------:
// `/networks/{networkId}/switch/qosRules` | create
// 

@name("Add A Quality Of Service Rule")
POST "https://{{baseUrl}}/networks/:networkId/switch/qosRules"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
data('{
    "vlan": "<integer>",
    "protocol": "<string>",
    "srcPort": "<integer>",
    "srcPortRange": "<string>",
    "dstPort": "<integer>",
    "dstPortRange": "<string>",
    "dscp": "<integer>"
}')


// Delete a quality of service rule
// #### Supports Action Batches
// 
// **Resource**|**Operation**
// :-------------: |:-------------:
// `/networks/{networkId}/switch/qosRules/{qosRuleId}` | destroy
// 

@name("Delete A Quality Of Service Rule")
DELETE "https://{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId"
"X-Cisco-Meraki-API-Key": ""


// List quality of service rules

@name("List Quality Of Service Rules")
GET "https://{{baseUrl}}/networks/:networkId/switch/qosRules"
"X-Cisco-Meraki-API-Key": ""


// Return a quality of service rule

@name("Return A Quality Of Service Rule")
GET "https://{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId"
"X-Cisco-Meraki-API-Key": ""


// Update a quality of service rule
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// vlan| integer| The VLAN of the incoming packet. A null value will match any VLAN.
// protocol| string| The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY".
// srcPort| integer| The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
// srcPortRange| string| The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
// dstPort| integer| The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
// dstPortRange| string| The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
// dscp| integer| DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0.
// 
// #### Supports Action Batches
// 
// **Resource**|**Operation**
// :-------------: |:-------------:
// `/networks/{networkId}/switch/qosRules/{qosRuleId}` | update
// 

@name("Update A Quality Of Service Rule")
PUT "https://{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
data('{
    "vlan": "<integer>",
    "protocol": "<string>",
    "srcPort": "<integer>",
    "srcPortRange": "<string>",
    "dstPort": "<integer>",
    "dstPortRange": "<string>",
    "dscp": "<integer>"
}')



