#!/usr/bin/env dothttp

// List the licenses for an organization

@name("List The Licenses For An Organization")
GET "https://{{baseUrl}}/organizations/:organizationId/licenses"
"X-Cisco-Meraki-API-Key": ""
? "perPage"= "{{perPage}}"
? "startingAfter"= "{{startingAfter}}"
? "endingBefore"= "{{endingBefore}}"
? "deviceSerial"= "{{deviceSerial}}"
? "networkId"= "{{networkId}}"
? "state"= "{{state}}"


// Assign SM seats to a network. This will increase the managed SM device limit of the network

@name("Assign SM Seats To A Network")
POST "https://{{baseUrl}}/organizations/:organizationId/licenses/assignSeats"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
data('{
    "licenseId": "<string>",
    "networkId": "<string>",
    "seatCount": "<integer>"
}')


// Move licenses to another organization. This will also move any devices that the licenses are assigned to

@name("Move Licenses To Another Organization")
POST "https://{{baseUrl}}/organizations/:organizationId/licenses/move"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
data('{
    "destOrganizationId": "<string>",
    "licenseIds": [
        "<string>",
        "<string>"
    ]
}')


// Move SM seats to another organization
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// destOrganizationId| string| The ID of the organization to move the SM seats to
// licenseId| string| The ID of the SM license to move the seats from
// seatCount| integer| The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
// 
// #### Supports Action Batches
// 
// **Resource**|**Operation**
// :-------------: |:-------------:
// `/organizations/{organizationId}/licenses` | moveSeats
// 

@name("Move SM Seats To Another Organization")
POST "https://{{baseUrl}}/organizations/:organizationId/licenses/moveSeats"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
data('{
    "destOrganizationId": "<string>",
    "licenseId": "<string>",
    "seatCount": "<integer>"
}')


// Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license

@name("Renew SM Seats Of A License")
POST "https://{{baseUrl}}/organizations/:organizationId/licenses/renewSeats"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
data('{
    "licenseIdToRenew": "<string>",
    "unusedLicenseId": "<string>"
}')


// Display a license

@name("Display A License")
GET "https://{{baseUrl}}/organizations/:organizationId/licenses/:licenseId"
"X-Cisco-Meraki-API-Key": ""


// Update a license
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// deviceSerial| string| The serial number of the device to assign this license to. Set this to null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license.
// 
// #### Supports Action Batches
// 
// **Resource**|**Operation**
// :-------------: |:-------------:
// `/organizations/{organizationId}/licenses/{licenseId}` | update
// 

@name("Update A License")
PUT "https://{{baseUrl}}/organizations/:organizationId/licenses/:licenseId"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
data('{
    "deviceSerial": "<string>"
}')



