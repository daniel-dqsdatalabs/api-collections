#!/usr/bin/env dothttp

// List the users configured under Meraki Authentication for a network (splash guest or RADIUS users for a wireless network, or client VPN users for a wired network)

@name("List The Users Configured Under Meraki Authentication For A Network Splash Guest Or RADIUS Users For A Wireless Network Or Client VPN Users For A Wired Network")
GET "https://{{baseUrl}}/networks/:networkId/merakiAuthUsers"
"X-Cisco-Meraki-API-Key": ""


// Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// email| string| Email address of the user
// name| string| Name of the user
// password| string| The password for this user account
// accountType| string| Authorization type for user. Can be 'Guest' or '802.1X' for wireless networks, or 'Client VPN' for wired networks. Defaults to '802.1X'.
// emailPasswordToUser| boolean| Whether or not Meraki should email the password to user. Default is false.
// authorizations| array| Authorization zones and expiration dates for the user.
// 
// #### Supports Action Batches
// 
// **Resource**|**Operation**
// :-------------: |:-------------:
// `/networks/{networkId}/merakiAuthUsers` | create
// 

@name("Authorize A User Configured With Meraki Authentication For A Network Currently Supports 802 1 X Splash Guest And Client VPN Users And Currently Organizations Have A 50 000 User Cap")
POST "https://{{baseUrl}}/networks/:networkId/merakiAuthUsers"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
json({
    "email": "<string>",
    "name": "<string>",
    "password": "<string>",
    "authorizations": [
        {
            "ssidNumber": "<integer>",
            "expiresAt": "Never"
        },
        {
            "ssidNumber": "<integer>",
            "expiresAt": "Never"
        }
    ],
    "accountType": "802.1X",
    "emailPasswordToUser": "<boolean>"
})


// Return the Meraki Auth splash guest, RADIUS, or client VPN user

@name("Return The Meraki Auth Splash Guest RADIUS Or Client VPN User")
GET "https://{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId"
"X-Cisco-Meraki-API-Key": ""


// Deauthorize a user. To reauthorize a user after deauthorizing them, POST to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client VPN users can be deauthorized.)

@name("Deauthorize A User")
DELETE "https://{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId"
"X-Cisco-Meraki-API-Key": ""


// Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)
//  #### Body Parameters 
// **Parameter**|**Type**|**Description** 
//  :-------------: |:-------------: |:-------------: 
// name| string| Name of the user
// password| string| The password for this user account
// emailPasswordToUser| boolean| Whether or not Meraki should email the password to user. Default is false.
// authorizations| array| Authorization zones and expiration dates for the user.
// 
// #### Supports Action Batches
// 
// **Resource**|**Operation**
// :-------------: |:-------------:
// `/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}` | update
// 

@name("Update A User Configured With Meraki Authentication Currently 802 1 X RADIUS Splash Guest And Client VPN Users Can Be Updated")
PUT "https://{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId"
"X-Cisco-Meraki-API-Key": ""
"Content-Type": "application/json"
json({
    "name": "<string>",
    "password": "<string>",
    "emailPasswordToUser": "<boolean>",
    "authorizations": [
        {
            "ssidNumber": "<integer>",
            "expiresAt": "Never"
        },
        {
            "ssidNumber": "<integer>",
            "expiresAt": "Never"
        }
    ]
})



