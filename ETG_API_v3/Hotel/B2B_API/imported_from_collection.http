#!/usr/bin/env dothttp

// List of all endpoints available for your contract and their settings.
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>endpoint</strong></td><td>Endpoint URI.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_active</strong></td><td>Whether or not the endpoint is active.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>is_debug_mode</strong></td><td>Whether or not debug mode is available.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>is_limited</strong></td><td>Whether or not the endpoint has a limit for the requests per seconds.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>requests_number</strong></td><td>Maximum number of requests that can be executed within "seconds_number" seconds.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>seconds_number</strong></td><td>Number of seconds within which a number of requests not exceeding "requests_number" can be executed.
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>

@name("Endpoints' Overview")
GET "https://api.worldota.net/api/b2b/v3/overview/"


// Retrieving the data of all available Emerging Travel Group hotels as a <strong>single</strong> archive for a <strong>single</strong> language.</br></br>The hotel dump is generated every week, so the information retrieved from it shall be renewed via the recurrent download. 
// 
// <strong>Content indexing</strong> (e.g. transferring it to search engines):
// 
// Indexing of any internal content such as photos, descriptions and others is not allowed.
// Any public content such as name, address, amenities and policies can be indexed.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>inventory</td><td>String</td><td>Required list of hotels.
// required: <code>False</code>
// default: <code>all</code>
// choices: (<code>all</code>, <code>direct</code>, <code>preferable</code>)<br>
// <hr/>
// •   <code>all</code> — all available Emerging Travel Group hotels
// •   <code>direct</code> — Emerging Travel Group hotels with a direct contract
// •   <code>preferable</code> — Emerging Travel Group preferable hotels</td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the dump content.
// required: <code>True</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>url</strong></td><td>URL address for downloading the dump archive.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>dump_not_ready</strong></td><td>Hotel Data Dump is currently being updated.
// Try to download the file later.</td>
// </tr>
// </tbody>
// </table>
// 
// <strong>Dump structure</strong>
// 
// The dump is a <a class="reference external" href="http://zstd.net">Zstd</a> archive that contains a file with a list of objects line by line:
// 
//     {"address": "Gabriele-Tergit-Promenade 19, Berlin", "amenity_groups": [{"amenities": ...}
//     {"address": "Passeig De Gracia, 68, Barcelona", "amenity_groups": [{"amenities": ...}
//     ...
//     {"address": "Great Cumberland Place, London", "amenity_groups": [{"amenities": ...}
// Each object in its turn contains hotel descriptions (each line contains one hotel in <code>json</code> format). The structure of the dump is the same as the example from <a href="https://docs.emergingtravel.com/#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3">Hotel Data Search</a>.
// 
// We use a Zstd compression algorithm in preference to others for its high Compression Ratio vs Compression Speed and high Decompression Speed.
// 
// <img src="https://raw.githubusercontent.com/facebook/zstd/master/doc/images/DCspeed5.png">
// 
// To decompress the archive you can use, for example, a <a href="https://formulae.brew.sh/formula/zstd">Zstandard plugin</a> or <a href="https://mcmilk.de/projects/7-Zip-zstd/">7-zip archive manager with Zstandard</a>.

@name("Hotel Data Dump")
GET "https://api.worldota.net/api/b2b/v3/hotel/info/dump/"


// Retrieving data of Emerging Travel Group hotels whose content has changed in the previous day.
// <strong>Each</strong> archive is for a <strong>single</strong> language.</br></br>An incremantal hotels dump is generated every day, so the information retrieved from it shall be renewed via the recurrent download. 
// 
// <strong>Content indexing</strong> (e.g. transferring it to search engines):
// 
// Indexing of any internal content such as photos, descriptions and others is not allowed.
// Any public content such as name, address, amenities and policies can be indexed.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the dump content.
// required: <code>True</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>url</strong></td><td>URL address for downloading the dump archive.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>dump_not_ready</strong></td><td>Hotel Data Dump is currently being updated.
// Try to download the file later.</td>
// </tr>
// </tbody>
// </table>
// 
// <strong>Dump structure</strong>
// 
// The dump is a <a class="reference external" href="http://zstd.net">Zstd</a> archive that contains a file with the list of objects line by line:
// 
//     {"address": "Gabriele-Tergit-Promenade 19, Berlin", "amenity_groups": [{"amenities": ...}
//     {"address": "Passeig De Gracia, 68, Barcelona", "amenity_groups": [{"amenities": ...}
//     ...
//     {"address": "Great Cumberland Place, London", "amenity_groups": [{"amenities": ...}
// Each object in its turn contains hotel descriptions (each line contains one hotel in <code>json</code> format). The structure of the dump is the same as the example from <a href="https://docs.emergingtravel.com/#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3">Hotel Data Search</a> plus one additional parameter:
// 
// <table>
// <tbody>
// <tr>
// <td><strong>deleted</strong></td><td>Whether or not this property has been deleted (from the database).
// Type: <code>Bool</code></td>
// </tr>
// </tbody>
// </table>
// 
// We use a Zstd compression algorithm in preference to other for its high Compression Ratio vs Compression Speed and high Decompression Speed.
// 
// <img src="https://raw.githubusercontent.com/facebook/zstd/master/doc/images/DCspeed5.png">
// 
// To decompress the archive you can use, for example, a <a href="https://formulae.brew.sh/formula/zstd">Zstandard plugin</a> or <a href="https://mcmilk.de/projects/7-Zip-zstd/">7-zip archive manager with Zstandard</a>.

@name("Hotel Incremental Data Dump")
GET "https://api.worldota.net/api/b2b/v3/hotel/info/incremental_dump/"


// Retrieving the reviews of all available Emerging Travel Group hotels as a <strong>single</strong> archive for a <strong>single</strong> language.</br></br>The reviews dump is generated every week.</br></br>The maximum number of reviews per hotel per single language is 40.
// 
// <strong>Reviews indexing is not allowed</strong> (e.g., for transferring it to search engines).
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the dump content.
// required: <code>True</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>url</strong></td><td>URL address for downloading the dump archive.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>dump_not_ready</strong></td><td>Hotel Reviews Dump is currently being updated.
// Try to download the file later.</td>
// </tr>
// </tbody>
// </table>
// 
// <strong>Dump structure</strong>
// 
// The dump is a <a class="reference external" href="https://www.gzip.org/">GZIP</a> archive that contains a file with a list of objects <code>([{...},{...},...,{...}])</code>, which in their turn contain a hotel’s reviews (each object is one hotel).
// 
// <strong>Structure of the object</strong>
// 
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">   "worldbest_hotel": {
//     "rating": 8.6,
//     "reviews": [
//       {
//         "review_plus": "Nice place and service.",
//         "review_minus": "Could be better for particular price.",
//         "created": "2018-05-30",
//         "author": "Pablo"
//       }
//     ]
//   }
// </code></pre>
// 
// <h6>Data</h6>
// 
// <table>
// <tbody>
// <tr>
// <td><strong>rating</strong></td><td>Average rating.
// Type: <code>Double</code>
// min_value: 0
// max_value: 10</td>
// </tr>
// <tr>
// <td><strong>review_plus</strong></td><td>Positive feedback.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>review_minus</strong></td><td>Negative feedback.
// Type: <code>String</code></td>
// </tr><tr>
// <td><strong>created</strong></td><td>Date of the review's creation.
// Type: <code>Date</code></td>
// </tr><tr>
// <td><strong>author</strong></td><td>The review's author.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>

@name("Hotel Reviews Dump")
GET "https://api.worldota.net/api/b2b/v3/hotel/reviews/dump/"


// Retrieving the information of all available Emerging Travel Group regions as a <strong>single</strong> archive.</br></br>The region dump is generated every week.
// 
// <strong>Content indexing is not allowed</strong> (e.g., for transferring it to search engines).
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>url</strong></td><td>URL address for downloading the dump archive.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>dump_not_ready</strong></td><td>Hotel Region Dump is currently being updated.
// Try to download the file later.</td>
// </tr>
// </tbody>
// </table>
// 
// <strong>Dump structure</strong>
// 
// The dump is a <a class="reference external" href="http://zstd.net">Zstd</a> archive that contains a file with a list of objects line by line:
// 
//     {"country_name":{"ar":null,"bg":"Полша", ...}
//     {"country_name":{"ar":"الولايات المتحدة الأمريكية","bg":"Съединени щати", ...}
//     ...
//     {"country_name":{"ar":"الأرجنتين","bg":"Аржентина", ...}
// Each object in its turn contains a region's description (each line is a single region in <code>json</code> format).
// 
// <strong>Structure of the region</strong>
// 
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">{
//   "country_name": {
//     "ar": "باربادوس",
//     "bg": "Барбадос",
//     "de": "Barbados",
//     "el": "Μπαρμπάντος",
//     "en": "Barbados",
//     "es": "Barbados",
//     "fr": "Barbade",
//     "hu": "Barbados",
//     "it": "Barbados",
//     "pl": "Barbados",
//     "pt": "Barbados",
//     "ro": "Barbados",
//     "ru": "Барбадос",
//     "sq": "Barbadosi",
//     "sr": "Барбадос",
//     "tr": "Barbados"
//   },
//   "country_code": "BB",
//   "center": {
//     "longitude": -59.618847,
//     "latitude": 13.101827
//   },
//   "hotels": [
//     "radisson_aquatica_resort_barbados",
//     "spacious_colonial",
//     "malfranza_apartments",
//     "island_inn_all_inclusive_hotel",
//     "hilton_barbados_resort",
//     "sweetfield_manor_historic_inn_",
//     "bellevue_plantation",
//     "nautilus_beach_apartments",
//     "walmer_lodge_apartments",
//     "melbourne_apartments_3",
//     "the_barbados_chi_centre",
//     "paradise_villas_2",
//     "beach_nest",
//     "3_angels",
//     "believe_caribbean_apartments",
//     "bellevue_plantation_polo_club"
//   ],
//   "iata": "BGI",
//   "id": 554,
//   "type": "City",
//   "name": {
//     "ar": "بريدج تاون",
//     "bg": null,
//     "de": "Bridgetown",
//     "el": "Bridgetown",
//     "en": "Bridgetown",
//     "es": "Bridgetown",
//     "fr": "Bridgetown",
//     "hu": null,
//     "it": "Bridgetown",
//     "pl": "Bridgetown",
//     "pt": "Bridgetown",
//     "ro": null,
//     "ru": "Бриджтаун",
//     "sq": null,
//     "sr": null,
//     "tr": null
//   }
// }
// </code></pre>
// 
// <h6>Data</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>country_name</strong></td><td>The name of the region's country in all languages available at Emerging Travel Group.
// Type: <code>Ref</code></td>
// </tr>
// <tr>
// <td><strong>country_code</strong></td><td>Region's country code (capital Latin letters, according to <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a> standard).
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>center</strong></td><td>Geographical coordinates of the region's center.
// Type: <code>Ref</code></td>
// </tr>
// <tr>
// <td><strong>hotels</strong></td><td>The list of hotel IDs that are located in the region.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>iata</strong></td><td>Three-letter IATA code.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>id</strong></td><td>Unique identifier of the region (on the Emerging Travel Group side).
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Type of the region.
// Type: <code>String</code>
// choices: (<code>Airport</code>, <code>Bus Station</code>, <code>City</code>, <code>Continent</code>, <code>Country</code>, <code>Multi-City (Vicinity)</code>, <code>Multi-Region (within a country)</code>, <code>Neighborhood</code>, <code>Point of Interest</code>, <code>Province (State)</code>, <code>Railway Station</code>, <code>Street</code>, <code>Subway (Entrace)</code>)</td>
// </tr>
// <tr>
// <td><strong>country_name</strong></td><td>The name of the region in all languages available at Emerging Travel Group.
// Type: <code>Ref</code></td>
// </tr>
// </tbody>
// </table>
// 
// We use a Zstd compression algorithm in preference to others for its high Compression Ratio vs Compression Speed and high Decompression Speed.
// 
// <img src="https://raw.githubusercontent.com/facebook/zstd/master/doc/images/DCspeed5.png">
// 
// To decompress the archive you can use, for example, a <a href="https://formulae.brew.sh/formula/zstd">Zstandard plugin</a> or <a href="https://mcmilk.de/projects/7-Zip-zstd/">7-zip archive manager with Zstandard</a>.

@name("Hotel Region Dump")
GET "https://api.worldota.net/api/b2b/v3/hotel/region/dump/"


// Hotel data search by hotel identifier.
// 
// This is intended to be used only in case an available hotel is not included in the downloaded hotel data dump file - this can happen with new hotels in Emerging Travel Group's inventory. This method can also be used for checking the content prior to reservation (with a possible update).
// 
// <strong>Content indexing</strong> (e.g. transferring it to search engines):
// 
// Indexing of any internal content such as photos, descriptions and others is not allowed.
// Any public content such as name, address, amenities and policies can be indexed.
// 
// The requests number restriction is 30 requests per 60 seconds. Please note that an attempt to download all of the images from CDN content (without a corresponding search request by the user) can lead to blocking by the IP.
// 
// In order to avoid this blocking, please send the custom User-Agent with the following information:
// <strong><i>PartnerName/ClientVersion (ClientTechicalDetails)</strong></i>.
// 
// <strong>Obligatory:</strong></br>
// PartnerName</br>
// ClientVersion
// 
// <strong>Optional:</strong></br>
// ClientTechicalDetails
// 
// <strong>Example:</strong></br>
// RatehawkPartner/1.0 (python-requests/2.18.4)
// 
// Please also set 1 channel downloading (limit the requests to 60 per minute).
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>id</td><td>String</td><td>Hotel identifier.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the response.
// required: <code>True</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>address</strong></td><td>Hotel's address.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>amenity_groups</strong></td><td>Hotel's amenities (e.g. "Health and Safety Measures" or "Beauty and wellness").
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#AmenityGroup">AmenityGroup</a></i></td>
// </tr>
// <tr>
// <td><strong>check_in_time</strong></td><td>Check-in time. The local time is specified in <code>HH:MM:SS</code> format.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>check_out_time</strong></td><td>Check-out time. The local time is specified in <code>HH:MM:SS</code> format.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>description_struct</strong></td><td>Hotel's description.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#DescriptionItem">DescriptionItem</a></i></td>
// </tr>
// <tr>
// <td><strong>email</strong></td><td>Hotel's email.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>facts</strong></td><td>Hotel information.
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#Facts">Facts</a></i></td>
// </tr>
// <tr>
// <td><strong>hotel_chain</strong></td><td>Name of a hotel chain.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>id</strong></td><td>Hotel's unique ID at Emerging Travel Group. This ID needs to be provided during availability calls if necessary.
// Type: <code>String</code></td>
// </tr>
// </tr>
// <tr>
// <td><strong>images</strong></td><td>List of the hotel's photos.
// Type: <code>List</code><br>
// <hr/>
// <code>{size}</code> - size of the image that you can request. List of available values:
// •   100x100 — crop
// •   1024x768 — fit
// •   120x120 — crop
// •   240x240 — crop
// •   x220 — fit-h
// •   x500 — fit-h
// <code>crop</code> - image is fit by the width, and is cut equally from the bottom and top till the middle part (of height's value)
// <code>fit-h</code> - image is fit by the height
// <code>fit</code> - image is fit into the rectangle of the size in question
// </td>
// </tr>
// <tr>
// <td><strong>is_closed</strong></td><td>Whether or not the property is closed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>kind</strong></td><td>Hotel type.
// Type: <code>String</code>
// choices: (<code>Resort</code>, <code>Sanatorium</code>, <code>Guesthouse</code>, <code>Mini-hotel</code>, <code>Castle</code>, <code>Hotel</code>, <code>Boutique_and_Design</code>, <code>Apartment</code>, <code>Cottages_and_Houses</code>, <code>Farm</code>, <code>Villas_and_Bungalows</code>, <code>Camping</code>, <code>Hostel</code>, <code>BNB</code>, <code>Apart-hotel</code>)</td>
// </tr>
// <tr>
// <td><strong>latitude</strong></td><td>Geographical latitude of the hotel.
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>longitude</strong></td><td>Geographical longitude of the hotel.
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>name</strong></td><td>Hotel's name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>metapolicy_extra_info</strong></td><td>Hotel's extra information (is the same as the section <b>"Extra info"</b> from hotel pages on the core website). Taxes and fees that are not included in the booking price may be shown in this field.
// The data from this param must be shown.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>metapolicy_struct</strong></td><td>Additional accommodation conditions (is the same as the section <b>"Hotel policies"</b> from hotel pages on the core website). Taxes and fees that are not included in the booking price may be shown in this field.
// The data from this param must be shown.
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyStructInfo">MetapolicyStructInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>payment_methods</strong></td><td>The cards accepted by the hotel (in case pay at the hotel).
// Type: <code>List</code>
// cls_name: <code>String</code><br>
// <hr/>
// List of available values:
// •   <code>unspecified</code> — unspecified
// •   <code>american_express</code> — American Express
// •   <code>cash</code> — Cash
// •   <code>china_unionpay</code> — China UnionPay
// •   <code>diners_club</code> — Diners Club International
// •   <code>euro_mastercard</code> — Euro/Mastercard
// •   <code>jcb</code> — JCB
// •   <code>maestro</code> — Maestro
// •   <code>mastercard</code> — Mastercard
// •   <code>switch_maestro</code> — Switch (Maestro)
// •   <code>visa</code> — Visa
// •   <code>visa_debit</code> — Visa Debit
// •   <code>vise_delta</code> — Visa Delta
// •   <code>visa_electron</code> — Visa Electron
// •   <code>pro100</code> — Pro100
// </td>
// </tr>
// <tr>
// <td><strong>phone</strong></td><td>Hotel's phone number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>policy_struct</strong></td><td><strong>DEPRECATED</strong>
// Additional accommodation conditions (is equal to the section <strong>"Important - Please Note"</strong> of hotelpages on core website). Taxes and fees that are not included in the booking price may be shown in this field. 
// The data from this param is obligotary for showing. 
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#PolicyItem">PolicyItem</a></i></td>
// </tr>
// <tr>
// <td><strong>postal_code</strong></td><td>Hotel's postal code.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>region</strong></td><td>Information about the region where the hotel is located.
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#Region">Region</a></i></td>
// </tr>
// <tr>
// <td><strong>room_groups</strong></td><td>The list of the hotel's room groups.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#RoomGroup">RoomGroup</a></i></td>
// </tr>
// <tr>
// <td><strong>semantic_version</strong></td><td><strong>DEPRECATED</strong>
// Semantic version of the hotel's content.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>star_certificate</strong></td><td>Information about the hotel's star certificate (applicable only for hotels located in Russia).
// May be <code>null</code> if there is no information about the star certificate.
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#StarCertificate">StarCertificate</a></i></td>
// </tr>
// <tr>
// <td><strong>star_rating</strong></td><td>Hotel rating on a scale from 1 to 5 ("star" rating). 0 means no rating is available. 
// Type: <code>Int</code>
// min_value: 0
// max_value: 5</td>
// </tr>
// <tr>
// <td><strong>serp_filters</strong></td><td>List of amenities for the hotels' selection based on a cumulative set of features from all of the hotels' rates and common hotels' features.
// Type: <code>List</code></br>
// There is a request which returns all available room amenities and definitions (<code>serp_filters</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Fitnesscentre",
//     "en": "Fitness centre",
//     "es": "Gimnasio",
//     "fr": "Salle de sport",
//     "it": "Сentro fitness",
//     "pl": "Fitness",
//     "pt": "Fitness",
//     "ru": "Фитнес"
//   },
//   "name": "has_fitness"
// </code></pre></td>
// </tr>
// </tbody>
// </table>
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#AmenityGroup">AmenityGroup</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>group_name</strong></td><td>Name of the amenity group.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>amenities</strong></td><td>List of amenities inside the group.
// Type: <code>List</code></td>
// </tr>
// </tbody>
// </table>
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#DescriptionItem">DescriptionItem</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>title</strong></td><td>Title of the description.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>paragraphs</strong></td><td>Description itself.
// Type: <code>List</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#Facts">Facts</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>electricity</strong></td><td>Socket type.
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#FactsElectricity">FactsElectricity</a></i></td>
// </tr>
// <tr>
// <td><strong>floors_number</strong></td><td>Floors number.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>rooms_number</strong></td><td>Rooms number.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>year_built</strong></td><td>Year of construction.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>year_renovated</strong></td><td>RYear of renovation.
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#FactsElectricity">FactsElectricity</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>frequency</strong></td><td>Sockets frequency.
// Type: <code>List</code>
// cls_name: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>sockets</strong></td><td>Socket types.
// Type: <code>List</code>
// cls_name: <code>String</code></br>
// There is a request which returns all available socket types and definitions (<code>socket_types</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Nordamerikanische Steckdose (ungeerdet)",
//     "en": "American socket (non-grounded)",
//     "es": "American socket (non-grounded)",
//     "fr": "Prise américaine (sans terre)",
//     "it": "Presa americana (senza messa a terra)",
//     "pl": "Gniazdko amerykańskie (bez uziemienia)",
//     "pt": "American socket (non-grounded)",
//     "ru": "Американская розетка (без заземления)",
//   },
//   "name": "a"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>voltage</strong></td><td>Sockets voltage.
// Type: <code>List</code>
// cls_name: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyStructInfo">MetapolicyStructInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>add_fee</strong></td><td>Information about additional fees and taxes.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyAddFeeInfo">MetapolicyAddFeeInfo</a></i></td>
// <tr>
// <td><strong>check_in_check_out</strong></td><td>Information about check-in and check-out policies.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyCheckInCheckOut">MetapolicyCheckInCheckOut</a></i></td>
// </tr></tr>
// <tr>
// <td><strong>children</strong></td><td>Information about children's extra bed policy.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyChildrenInfo">MetapolicyChildrenInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>children_meal</strong></td><td>Information about children's meals.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyChildrenMealInfo">MetapolicyChildrenMealInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>cot</strong></td><td>Information about cots.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyCotInfo">MetapolicyCotInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>deposit</strong></td><td>Information about deposits.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyDepositInfo">MetapolicyDepositInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>extra_bed</strong></td><td>Information about extra beds.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyExtraBedInfo">MetapolicyExtraBedInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>internet</strong></td><td>Information about the internet.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyInternetInfo">MetapolicyInternetInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>meal</strong></td><td>Information about meals.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyMealInfo">MetapolicyMealInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>no_show</strong></td><td>Information about no-shows.
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyNoShowInfo">MetapolicyNoShowInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>parking</strong></td><td>Information about parking.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyParkingInfo">MetapolicyParkingInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>pets</strong></td><td>Information about pets.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyPetsInfo">MetapolicyPetsInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>shuttle</strong></td><td>Information about shuttles.
// Type: <code>List</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyShuttleInfo">MetapolicyShuttleInfo</a></i></td>
// </tr>
// <tr>
// <td><strong>visa</strong></td><td>Information about visa support.
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyVisaInfo">MetapolicyVisaInfo</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyAddFeeInfo">MetapolicyAddFeeInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>fee_type</strong></td><td>Type of additional service. 
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>television</code>, <code>towels</code>, <code>conditioning</code>, <code>housekeeping</code>, <code>heating</code>, <code>refrigeratior</code>, <code>utility</code>, <code>safe</code>, <code>microwave</code>, <code>luggage_storage</code>, <code>tour_guide</code>, <code>bicycle_rental</code>, <code>baby_highchair</code>, <code>bed_linen</code>, <code>towels_only</code>, <code>luggage_storage_apartment</code>, <code>luggage_storage_office</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of the additional service (in the hotels's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>price_unit</strong></td><td>Price unit of the additional service.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>per_guest_per_night</code>, <code>per_guest_per_stay</code>, <code>per_room_per_night</code>, <code>per_room_per_stay</code>, <code>per_hour</code>, <code>per_week</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyCheckInCheckOut">MetapolicyCheckInCheckOut</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>check_in_check_out_type</strong></td><td>Type of the check-in or check-out.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>early_checkin</code>, <code>late_checkout</code>, <code>holiday_checkin</code>, <code>holiday_checkout</code>)</td>
// </tr>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Check-in and check-out inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of check-in/check-out (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyChildrenInfo">MetapolicyChildrenInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>age_end</strong></td><td>Maximum age for children's extra bed policy.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>age_start</strong></td><td>Minimum age for children's extra bed policy.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>extra_bed</strong></td><td>Extra bed availability.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>available</code>, <code>unavailable</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of an extra bed (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyChildrenMealInfo">MetapolicyChildrenMealInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>age_end</strong></td><td>Maximum age for children's meals policy.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>age_start</strong></td><td>Minimum age for children's meals policy.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Children's meals inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>meal_type</strong></td><td>Children's meals type.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>all-inclusive</code>, <code>breakfast</code>, <code>breakfast-buffet</code>, <code>continental-breakfast</code>, <code>dinner</code>, <code>full-board</code>, <code>half-board</code>, <code>lunch</code>, <code>nomeal</code>, <code>some-meal</code>, <code>english-breakfast</code>, <code>american-breakfast</code>, <code>asian-breakfast</code>, <code>chinese-breakfast</code>, <code>israeli-breakfast</code>, <code>japanese-breakfast</code>, <code>scandinavian-breakfast</code>, <code>scottish-breakfast</code>, <code>breakfast-for-1</code>, <code>breakfast-for-2</code>, <code>super-all-inclusive</code>, <code>soft-all-inclusive</code>, <code>ultra-all-inclusive</code>, <code>half-board-lunch</code>, <code>half-board-dinner</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of the children's meals (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyCotInfo">MetapolicyCotInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Number of available cots.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Cot's inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of the cot (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>price_unit</strong></td><td>Price unit of the cot.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>per_guest_per_night</code>, <code>per_guest_per_stay</code>, <code>per_room_per_night</code>, <code>per_room_per_stay</code>, <code>per_hour</code>, <code>per_week</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyDepositInfo">MetapolicyDepositInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>availability</strong></td><td>Deposit availability.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>available</code>, <code>unavailable</code>)</td>
// </tr>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>deposit_type</strong></td><td>Type of deposit. 
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>pet</code>, <code>breakage</code>, <code>keys</code>)</td>
// </tr>
// <tr>
// <td><strong>payment_type</strong></td><td>Payment type for deposit. 
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>cash</code>, <code>card</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Amount of the depost (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>price_unit</strong></td><td>Price unit of the deposit.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>per_guest_per_night</code>, <code>per_guest_per_stay</code>, <code>per_room_per_night</code>, <code>per_room_per_stay</code>, <code>per_hour</code>, <code>per_week</code>)</td>
// </tr>
// <tr>
// <td><strong>pricing_method</strong></td><td>Pricing method of the deposit.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>percent</code>, <code>fixed</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyExtraBedInfo">MetapolicyExtraBedInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Number of available extra beds.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Extra bed's inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of the extra bed (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>price_unit</strong></td><td>Price unit of the extra bed.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>per_guest_per_night</code>, <code>per_guest_per_stay</code>, <code>per_room_per_night</code>, <code>per_room_per_stay</code>, <code>per_hour</code>, <code>per_week</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyInternetInfo">MetapolicyInternetInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Internet inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>internet_type</strong></td><td>Internet type.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>wireless</code>, <code>wired</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of the internet (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>price_unit</strong></td><td>Price unit of the internet.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>per_guest_per_night</code>, <code>per_guest_per_stay</code>, <code>per_room_per_night</code>, <code>per_room_per_stay</code>, <code>per_hour</code>, <code>per_week</code>)</td>
// </tr>
// <tr>
// <td><strong>work_area</strong></td><td>Internet coverage area.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>hotel</code>, <code>room</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyMealInfo">MetapolicyMealInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Meal inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>meal_type</strong></td><td>Meal type.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>all-inclusive</code>, <code>breakfast</code>, <code>breakfast-buffet</code>, <code>continental-breakfast</code>, <code>dinner</code>, <code>full-board</code>, <code>half-board</code>, <code>lunch</code>, <code>nomeal</code>, <code>some-meal</code>, <code>english-breakfast</code>, <code>american-breakfast</code>, <code>asian-breakfast</code>, <code>chinese-breakfast</code>, <code>israeli-breakfast</code>, <code>japanese-breakfast</code>, <code>scandinavian-breakfast</code>, <code>scottish-breakfast</code>, <code>breakfast-for-1</code>, <code>breakfast-for-2</code>, <code>super-all-inclusive</code>, <code>soft-all-inclusive</code>, <code>ultra-all-inclusive</code>, <code>half-board-lunch</code>, <code>half-board-dinner</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of the meal (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyNoShowInfo">MetapolicyNoShowInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>availability</strong></td><td>No-show availability.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>available</code>, <code>unavailable</code>)</td>
// </tr>
// <tr>
// <td><strong>day_period</strong></td><td>Applicable period for no-show.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>before_midday</code>, <code>after_midday</code>)</td>
// </tr>
// <tr>
// <td><strong>time</strong></td><td>Applicable time for no-show.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyParkingInfo">MetapolicyParkingInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Parking inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of parking (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>price_unit</strong></td><td>Price unit of parking.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>per_guest_per_night</code>, <code>per_guest_per_stay</code>, <code>per_room_per_night</code>, <code>per_room_per_stay</code>, <code>per_hour</code>, <code>per_week</code>)</td>
// </tr>
// <tr>
// <td><strong>territory_type</strong></td><td>Parking territory type.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>on_side</code>, <code>off_side</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyPetsInfo">MetapolicyPetsInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Pets inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>pets_type</strong></td><td>Pets' weight.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>gt_5kg</code>, <code>lt_5kg</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of pets accomodation (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>price_unit</strong></td><td>Price unit of pets accomodation.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>per_guest_per_night</code>, <code>per_guest_per_stay</code>, <code>per_room_per_night</code>, <code>per_room_per_stay</code>, <code>per_hour</code>, <code>per_week</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyShuttleInfo">MetapolicyShuttleInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>currency</strong></td><td>Price currency. Is the same as the hotel's currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>destination_type</strong></td><td>Shuttle's destination type.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>airport</code>, <code>train</code>, <code>ship</code>, <code>airport_train</code>)</td>
// </tr>
// <tr>
// <td><strong>inclusion</strong></td><td>Shuttle's inclusion.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>included</code>, <code>not_included</code>)</td>
// </tr>
// <tr>
// <td><strong>price</strong></td><td>Price of the shuttle (in the hotel's <code>currency</code>).
// Type: <code>Float</code></td>
// </tr>
// <tr>
// <td><strong>shuttle_type</strong></td><td>Shuttle type.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>one_way</code>, <code>two_ways</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#MetapolicyVisaInfo">MetapolicyVisaInfo</h6>
// <table>
// <tbody>
// <td><strong>visa_support</strong></td><td>Visa support.
// Type: <code>String</code>
// choices: (<code>unspecified</code>, <code>support_enable</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#PolicyItem">PolicyItem</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>title</strong></td><td>Title of the policy.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>paragraphs</strong></td><td>Policy itself.
// Type: <code>List</code></td>
// </tr>
// </tbody>
// </table>
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#Region">Region</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>country_code</strong></td><td>Hotel's country code (capital Latin letters, according to <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a> standard).
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>iata</strong></td><td>Three-letter <a href="https://en.wikipedia.org/wiki/IATA_airport_code">IATA</a> code.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>id</strong></td><td>Unique identifier of the region where the hotel is located.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>name</strong></td><td>The name of the region where the hotel is located.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Type of the region where the hotel is located.
// Type: <code>String</code>
// choices: (<code>Airport</code>, <code>Bus Station</code>, <code>City</code>, <code>Continent</code>, <code>Country</code>, <code>Multi-City (Vicinity)</code>, <code>Multi-Region (within a country)</code>, <code>Neighborhood</code>, <code>Point of Interest</code>, <code>Province (State)</code>, <code>Railway Station</code>, <code>Street</code>, <code>Subway (Entrace)</code>)</td>
// </tr>
// </tbody>
// </table>
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#RoomGroup">RoomGroup</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>name</strong></td><td>Full room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>name_struct</strong></td><td>Structured room name.
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#RoomGroupNameStruct">RoomGroupNameStruct</a></i></td>
// </tr>
// <tr>
// <td><strong>images</strong></td><td>List of room's photos.
// Type: <code>List</code><br>
// <hr/>
// <code>{size}</code> - size of the image that you can request. List of available values:
// •   100x100 — crop
// •   1024x768 — fit
// •   120x120 — crop
// •   240x240 — crop
// •   x220 — fit-h
// •   x500 — fit-h
// <code>crop</code> - image is fit by the width, and is cut equally from the bottom and top till the middle part (of height's value)
// <code>fit-h</code> - image is fit by the height
// <code>fit</code> - image is fit into the rectangle of the size in question
// </td></tr>
// <tr>
// <td><strong>room_amenities</strong></td><td>Room amenities.
// Type: <code>List</code>
// cls_name: <code>String</code></br>
// There is a request which returns all available room amenities and definitions (<code>room_amenities</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Für Nichtraucher",
//     "en": "Non-smoking",
//     "es": "Para no fumadores",
//     "fr": "Non fumeur",
//     "it": "Non-smoking",
//     "pl": "Dla niepalących",
//     "pt": "Não fumantes",
//     "ru": "Для некурящих"
//   },
//   "name": "non-smoking"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>rg_ext</strong></td><td>Identifier of the room (at Emerging Travel Group).
// Type: <code>Ref</code>
// cls_name: <i><a href="#cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#RoomGroupExt">RoomGroupExt</a></i></td>
// </tr>
// <tr>
// <td><strong>room_group_id</strong></td><td><strong>DEPRECATED</strong>
// Identifier of the room (at Emerging Travel Group).
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#RoomGroupNameStruct">RoomGroupNameStruct</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>bathroom</strong></td><td>Room's bathroom information.
// <code>null</code> means private bathroom.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bedding_type</strong></td><td>Room's bedding information.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>main_name</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#RoomGroupExt">RoomGroupExt</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>class</strong></td><td>Room's class information.
// Type: <code>Int</code><br>
// <hr/>
// List of available values:
// •   0 — run of house
// •   1 — dorm
// •   2 — capsule
// •   3 — room
// •   4 — junior suite
// •   5 — suite
// •   6 — apartment
// •   7 — studio
// •   8 — villa
// •   9 — cottage
// •   17 — bungalow
// •   18 — chalet
// •   19 — camping
// •   20 — tent</td>
// </tr>
// <tr>
// <td><strong>quality</strong></td><td>Room's quality information.
// Type: <code>Int</code><br>
// <hr/>
// List of available values:
// •   0 — undefined
// •   1 — economy
// •   2 — standard
// •   3 — comfort
// •   4 — business
// •   5 — superior
// •   6 — deluxe
// •   7 — premier
// •   8 — executive
// •   9 — presidential
// •   17 — premium
// •   18 — classic
// •   19 — ambassador
// •   20 — grand
// •   21 — luxury
// •   22 — platinum
// •   23 — prestige
// •   24 — privilege
// •   25 — royal</td>
// </tr>
// <tr>
// <td><strong>sex</strong></td><td>Room's sex restrictions.
// Type: <code>Int</code><br>
// <hr/>
// List of available values:
// •   0 — undefined
// •   1 — male
// •   2 — female
// •   3 — mixed</td>
// </tr>
// <tr>
// <td><strong>bathroom</strong></td><td>Room's bathroom information.
// Type: <code>Int</code><br>
// <hr/>
// List of available values:
// •   0 — undefined
// •   1 — shared bathroom
// •   2 — private bathroom
// •   3 — external private bathroom</td>
// </tr>
// <tr>
// <td><strong>bedding</strong></td><td>Room's bedding information.
// Type: <code>Int</code><br>
// <hr/>
// List of available values:
// •   0 — undefined
// •   1 — bunk bed
// •   2 — single bed
// •   3 — double
// •   4 — twin</td>
// </tr>
// <tr>
// <td><strong>family</strong></td><td>Whether this is a family room or not.
// Type: <code>Int</code><br>
// <hr/>
// List of available values:
// •   0 — not family
// •   1 — family</td>
// </tr>
// <tr>
// <td><strong>capacity</strong></td><td>Maximum number of main bed places without additional charges (excluding extra beds, cots, etc.).
// Type: <code>Int</code><br>
// <hr/>
// List of available values:
// •   0 — undefined
// •   1 — single
// •   2 — double
// •   3 — triple
// •   4 — quadruple
// •   5 — quintuple
// •   6 — sextuple</td>
// </tr>
// <tr>
// <td><strong>club</strong></td><td>Whether this is a club room or not.
// Type: <code>Int</code><br>
// <hr/>
// List of available values:
// •   0 — not club
// •   1 — club</td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="cbbbb393-cb06-4bfe-a007-f5b07d1cf8a3#StarCertificate">StarCertificate</h6><table>
// <tbody>
// <tr>
// <td><strong>valid_to</strong></td><td>Valid thru date.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>certificate_id</strong></td><td>Certificate ID (detailed information on the certificate can be found on the <a href="https://xn----7sba3acabbldhv3chawrl5bzn.xn--p1ai/">website</a>).
// May be <code>null</code> if there is no information about the certificate ID.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>hotel_not_found</strong></td><td>Hotel identifier wasn't found.</td>
// </tr>
// </tbody>
// </table>

@name("Hotel Data Search")
GET "https://api.worldota.net/api/b2b/v3/hotel/info/"


// Autocomplete allows you to find a region or a hotel by just part of its name.
// 
// Returns no more than 5 objects for 1 category.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>query</td><td>String</td><td>Part of the hotel's or region's name.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the response.
// required: <code>False</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>hotels</strong></td><td>Hotels of different types that meet request parameters.
// Type: <code>List</code>
// max_objects: 5
// cls_name: <i><a href="#dd93cee4-e194-4aaf-be7e-23528b31b19d#MulticompleteHotel">MulticompleteHotel</a></i></td>
// </tr>
// <tr>
// <td><strong>regions</strong></td><td>Regions that are meet the request parameters and are available for search.
// Type: <code>List</code>
// max_objects: 5
// cls_name: <i><a href="#dd93cee4-e194-4aaf-be7e-23528b31b19d#MulticompleteRegion">MulticompleteRegion</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="dd93cee4-e194-4aaf-be7e-23528b31b19d#MulticompleteHotel">MulticompleteHotel</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>id</strong></td><td>Hotel's unique ID at Emerging Travel Group.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>name</strong></td><td>Hotel's name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>region_id</strong></td><td>Unique Emerging Travel Group identifier of the region where the hotel is located.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="dd93cee4-e194-4aaf-be7e-23528b31b19d#MulticompleteRegion">MulticompleteRegion</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>id</strong></td><td>Region's unique ID at Emerging Travel Group.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>name</strong></td><td>Region's name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Type of the region.
// Type: <code>String</code>
// choices: (<code>Airport</code>, <code>Bus Station</code>, <code>City</code>, <code>Continent</code>, <code>Country</code>, <code>Multi-City (Vicinity)</code>, <code>Multi-Region (within a country)</code>, <code>Neighborhood</code>, <code>Point of Interest</code>, <code>Province (State)</code>, <code>Railway Station</code>, <code>Street</code>, <code>Subway (Entrace)</code>)</td>
// </tr>
// <tr>
// <td><strong>country_code</strong></td><td>Region's country code (capital Latin letters, according to <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a> standard).
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>

@name("Autocomplete")
POST "https://api.worldota.net/api/b2b/v3/search/multicomplete/"


// Search Engine Results Page (SERP) - this is for the preliminary search of a hotel with available accommodation that meets the given search conditions. It is not recommended to let the users choose the rates from this method (a full match with results from the <a href="https://docs.emergingtravel.com/?version=latest#67876b90-43ba-40e9-883b-a63a69b1be79">Hotelpage</a> request is not expected).
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>region_id</td><td>Int</td><td>Region identifier.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>checkin</td><td>Date</td><td>Check-in date, no later than 365 days from the day on which the request is made.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>checkout</td><td>Date</td><td>Check-out date, no later than 30 days from <code>checkin</code> date.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>guests</td><td>List</td><td>The list of guests in the rooms.
// The maximum number of rooms per request, which is 6. 
// In case of multiroom search, for each room equal pax numbers are highly recommended for usuge. If different pax numbers are required, we recommend that you make a separate request for each room.
// required: <code>True</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#GuestData">GuestData</a></i></td>
// </tr>
// <tr>
// <td>currency</td><td>String</td><td>Currency of the rooms' price in the response.
// If no <code>currency</code> is specified or the <code>default</code> value is set, then the actual currency requested is the contract's currency for prepay rates.
// It influences <code>show_amount</code> and <code>show_currency_amount</code> only.
// required: <code>False</code>
// default: <code>Contract's currency</code></td>
// </tr>
// <tr>
// <td>residency</td><td>String</td><td>Guest's (or multiple guests') citizenship.
// This is recommended for usage if there are doubts regarding a country's/hotel's policy towards citizens of a specific country.
// Value's standard = <code>ISO 3166-1 alpha-2</code>, the value shall be transferred in lower case, number of the value's symbols = 2.
// required: <code>False</code> (could be <code>True</code> for some partners)</td>
// </tr>
// <tr>
// <td>hotels_limit</td><td>Int</td><td>The maximum number of available hotels in the search response. 
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>timeout</td><td>Int</td><td>The maximum amount of time (in seconds) within which searched for rates will be returned.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>upsells</td><td>Ref</td><td>Whether or not additional services are needed.
// required: <code>False</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#UpsellData">UpsellData</a></i></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Response language of the rate's static information.
// required: <code>False</code>
// default: <code>Contract's language</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</code>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#GuestData">GuestData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>adults</td><td>Int</td><td>Number of adult guests.
// required: <code>True</code>
// min_value: 1
// max_value: 6</td>
// </tr>
// <tr>
// <td>children</td><td>List</td><td>Age of children who will stay in the room.
// Maximum age per child = 17 years. 
// Maximum number of children = 4.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#UpsellData">UpsellData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>early_checkin</td><td>Ref</td><td>Whether or not early check-in is needed.
// required: <code>False</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#ECData">ECData</a></i></td>
// </tr>
// <tr>
// <td>late_checkout</td><td>Ref</td><td>Whether or not late check-out is needed.
// required: <code>False</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#LCData">LCData</a></i></td>
// </tr>
// <tr>
// <td>only_eclc</td><td>Bool</td><td>Whether or not rates with only early check-in / late check-out are needed.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#ECData">ECData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>time</td><td>DateTime</td><td>The time of early check-in.
// required: <code>False</code>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#LCData">LCData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>time</td><td>DateTime</td><td>The time of late check-out.
// required: <code>False</code>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>hotels</strong></td><td>Information about the found hotel and its rates.
// Type: <code>List</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#Hotels">Hotels</a></i></td>
// </tr>
// <tr>
// <td><strong>total_hotels</strong></td><td>Total number of unique hotels found.
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6  id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#Hotels">Hotels</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>rates</strong></td><td>List of available rates at the hotel.
// Type: <code>List</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#Rates">Rates</a></i></td>
// </tr>
// <tr>
// <td><strong>id</strong></td><td>Unique identifier of the hotel.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#Rates">Rates</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>allotment</strong></td><td>The number of rooms available at this rate.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>match_hash</strong></td><td>Unique identifier of the rate. This value could be used for comparing (matching) the rates between different search results (if in a search flow rates-matching is presented). The same rates from <a href="https://docs.emergingtravel.com/?version=latest#5af3b9cf-34fa-4e5c-b290-d06a218851b6">Region Search Engine Results Page</a> (or <a href="https://docs.emergingtravel.com/?version=latest#09dada83-ed9e-400e-a793-517d078e9df9">Hotels Search Engine Results Page</a>) and <a href="https://docs.emergingtravel.com/?version=latest#67876b90-43ba-40e9-883b-a63a69b1be79">Hotelpage</a> steps will have the same <code>match_hash</code> value. If the value is different, this means that the rates are not the same.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>daily_prices</strong></td><td>Daily rate prices breakdown in the search currency.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>meal</strong></td><td>Meal type in the rate.
// Type: <code>String</code>
// 
// There is a request which returns all available meals and definitions (<code>meals</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a>
// 
// If there is no meal type provided by the rate's source, <code>nomeal</code> value is displayed.</td>
// </tr>
// <tr>
// <td><strong>payment_options</strong></td><td>Accepted payment options, with specified amount to be charged, transferred as an object with key-value pairs <code>payment_options.payment_types</code>.
// Please note that for a reservation, namely the specified sum (with the given currency) shall be paid.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#PaymentOptionData">PaymentOptionData</a></i></td>
// </tr>
// <tr>
// <td><strong>room_name</strong></td><td>Room name in the selected language.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>rg_ext</strong></td><td>Type of hotel room.
// <code>rg_ext</code> can be used to obtain extra information about the room from the hotel's static information (room images, description etc.).
// Type: <code>Ref</code></td>
// </tr>
// <tr>
// <td><strong>sell_price_limits</strong></td><td>Information about restrictions on the final selling price for the client.
// If this parameter is not <code>null</code>, the final selling price should be within <code>min_price</code> and <code>max_price</code> (the amount is in the search currency).
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#SellPriceData">SellPriceData</a></i></td>
// </tr>
// <tr>
// <td><strong>serp_filters</strong></td><td><strong>DEPRECATED</strong>
// List of amenities at the hotel.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>amenities_data</strong></td><td>List of amenities in the room.
// Type: <code>List</code></br>
// There is a request which returns all available room amenities and definitions (<code>room_amenities</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Für Nichtraucher",
//     "en": "Non-smoking",
//     "es": "Para no fumadores",
//     "fr": "Non fumeur",
//     "it": "Non-smoking",
//     "pl": "Dla niepalących",
//     "pt": "Não fumantes",
//     "ru": "Для некурящих"
//   },
//   "name": "non-smoking"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>deposit</strong></td><td>Deposit information in case of <code>hotel</code> payment type if applied.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#DepositData">DepositData</a></i></td>
// </tr>
// <tr>
// <td><strong>no_show</strong></td><td>No-show penalty information.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#NoShowData">NoShowData</a></i></td>
// </tr>
// <tr>
// <td><strong>room_data_trans</strong></td><td>Structured room name in the selected language.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#RoomDataTrans">RoomDataTrans</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#PaymentOptionData">PaymentOptionData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>payment_types</strong></td><td>Array with accepted payment option for the requested rate
// Type: <code>List</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#PaymentTypeData">PaymentTypeData</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#SellPriceData">SellPriceData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>min_price</strong></td><td>Minimum final selling price for the client (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>max_price</strong></td><td>Maximum final selling price for the client (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#DepositData">DepositData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the deposit (in the hotel's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (hotel's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_refundable</strong></td><td>Whether or not the deposit is refundable.
// Type: <code>Bool</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#NoShowData">NoShowData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the no-show penalty (in the hotel's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (hotel's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>from_time</strong></td><td>Time (local timezone) from which <code>amount</code> would be charged for the no-show. 
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#RoomDataTrans">RoomDataTrans</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>main_room_type</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>main_name</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bathroom</strong></td><td>Room's bathroom information.
// <code>null</code> means private bathroom.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bedding_type</strong></td><td>Room's bedding information.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>misc_room_type</strong></td><td>Additional room inforamation.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#PaymentTypeData">PaymentTypeData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount to be charged for the booking (in the contract's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (contract's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>show_amount</strong></td><td>Rate price in the requested (<code>show_currency_code</code>) currency (not necessarily the sum in the charged/payment currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>show_currency_code</strong></td><td>Requested currency (not necessarily the charged/payment currency).
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>by</strong></td><td>Payment instrument.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_need_credit_card_data</strong></td><td>Whether or not credit card information is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>is_need_cvc</strong></td><td>Whether or not a CVC code is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Payment type.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>vat_data</strong></td><td>Information about VAT in the rate.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#VATData">VATData</a></i></td>
// </tr>
// <tr>
// <td><strong>tax_data</strong></td><td>Information about taxes in the rate.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#TaxData">TaxData</a></i></td>
// </tr>
// <tr>
// <td><strong>perks</strong></td><td>Additional service information: early check-in / late check-out.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#PerkOption">PerkOption</a></i></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#CommissionInfoData">CommissionInfoData</a></i></td>
// </tr>
// <tr>
// <td><strong>cancellation_penalties</strong></td><td>Rate's cancellation rules with commission information.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#CancellationPenaltyData">CancellationPenaltyData</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#VATData">VATData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>included</strong></td><td>Whether or not VAT is included.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>value</strong></td><td>VAT amount in the <code>currency_code</code>.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#TaxData">TaxData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>taxes</strong></td><td>List of taxes, information about which is available for these rates.
// Type: <code>List</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#Taxes">Taxes</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#PerkOption">PerkOption</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>early_checkin</strong></td><td>Additional service type.
// Type: <code>List</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#PerkData">PerkData</a></i></td>
// </tr>
// <tr>
// <td><strong>late_checkout</strong></td><td>Additional service type.
// Type: <code>List</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#PerkData">PerkData</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#CommissionInfoData">CommissionInfoData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>show</strong></td><td>Commission information (in the search currency).
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#CommissionData">CommissionData</a></i></td>
// </tr>
// <tr>
// <td><strong>charge</strong></td><td>Commission information (in the charge/contract currency).
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#CommissionData">CommissionData</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#CancellationPenaltyData">CancellationPenaltyData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>free_cancellation_before</strong></td><td>Date when free cancellation policy expires (may return <code>null</code> - no free cancellation).
// Timezone is UTC+0.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>policies</strong></td><td>Cancellation policies' breakdown by time periods.
// Type: <code>List</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#CancellationPolicyData">CancellationPolicyData</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#Taxes">Taxes</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>name</strong></td><td>Tax identifier at Emerging Travel Group.
// Type: <code>String</code>
// 
// There is a request which returns all available taxes and definitions (<code>taxes</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></td>
// </tr>
// <tr>
// <td><strong>included_by_supplier</strong></td><td>Shows if the tax is included in the rate by the supplier; if the tax is not included, it is supposed to be paid at the hotel (in the specified currency).
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the tax.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Currency in which the <code>amount</code> is specified.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#PerkData">PerkData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>charge_price</strong></td><td>Additional service amount (in the charge/contract currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>show_price</strong></td><td>Additional service amount (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>time</strong></td><td>Additional service time.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#CommissionInfoData">CommissionInfoData</a></i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#CommissionData">CommissionData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>amount_gross</strong></td><td>Gross price.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_net</strong></td><td>Net price.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_commission</strong></td><td>Commission.
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6 id="5af3b9cf-34fa-4e5c-b290-d06a218851b6#CancellationPolicyData">CancellationPolicyData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>start_at</strong></td><td>Date when this particular cancellation policy takes effect (<code>null</code> means that it is in effect till <code>end_at</code>).
// Timezone is UTC+0.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>end_at</strong></td><td>Date when this particular cancellation policy expires (<code>null</code> means all the time from <code>start_at</code> till check in).
// Timezone is UTC+0.
// 
// If <code>start_at</code> == <code>end_at</code> == <code>null</code> then this particular cancellation policy has no time restrictions / is in effect all the time.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>amount_charge</strong></td><td>Cancellation penalty amount (in the charge/contract currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_show</strong></td><td>Cancellation penalty amount (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i><a href="#5af3b9cf-34fa-4e5c-b290-d06a218851b6#CommissionInfoData">CommissionInfoData</a></i></td>
// </tr>
// </tbody>
// </table>

@name("Region Search Engine Results Page")
POST "https://api.worldota.net/api/b2b/v3/search/serp/region/"


// Search Engine Results Page (SERP) - this is for the preliminary search of a hotel with available accommodation that meets the given search conditions. It is not recommended to let the users choose the rates from this method (a full match with results from the <a href="https://docs.emergingtravel.com/?version=latest#67876b90-43ba-40e9-883b-a63a69b1be79">Hotelpage</a> request is not expected).
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>latitude</td><td>Float</td><td>Latitude coordinate for geolocation search.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>longitude</td><td>Float</td><td>Longitude coordinate for geolocation search.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>radius</td><td>Int</td><td>Radius size for circular search (in meters).
// required: <code>True</code>
// min_value: 1
// max_value: 70000</td>
// </tr>
// <tr>
// <td>checkin</td><td>Date</td><td>Check-in date, no later than 365 days from the day on which the request is made.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>checkout</td><td>Date</td><td>Check-out date, no later than 30 days from <code>checkin</code> date.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>guests</td><td>List</td><td>The list of guests in the rooms.
// The maximum number of rooms per request, which is 6. 
// In case of multiroom search, for each room equal pax numbers are highly recommended for usuge. If different pax numbers are required, we recommend that you make a separate request for each room.
// required: <code>True</code>
// cls_name: <i>GuestData</i></td>
// </tr>
// <tr>
// <td>currency</td><td>String</td><td>Currency of the rooms' price in the response.
// If no <code>currency</code> is specified or the <code>default</code> value is set, then the actual currency requested is the contract's currency for prepay rates.
// It influences <code>show_amount</code> and <code>show_currency_amount</code> only.
// required: <code>False</code>
// default: <code>Contract's currency</code></td>
// </tr>
// <tr>
// <td>residency</td><td>String</td><td>Guest's (or multiple guests') citizenship.
// This is recommended for usage if there are doubts regarding a country's/hotel's policy towards citizens of a specific country.
// Value's standard = <code>ISO 3166-1 alpha-2</code>, the value shall be transferred in lower case, number of the value's symbols = 2.
// required: <code>False</code> (could be <code>True</code> for some partners)</td>
// </tr>
// <tr>
// <td>timeout</td><td>Int</td><td>The maximum amount of time (in seconds) within which searched for rates will be returned.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>upsells</td><td>Ref</td><td>Whether or not additional services are needed.
// required: <code>False</code>
// cls_name: <i>UpsellData</i></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Response language of the rate's static information.
// required: <code>False</code>
// default: <code>Contract's language</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</code>
// </tr>
// </tbody>
// </table>
// 
// <h6>GuestData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>adults</td><td>Int</td><td>Number of adult guests.
// required: <code>True</code>
// min_value: 1
// max_value: 6</td>
// </tr>
// <tr>
// <td>children</td><td>List</td><td>Age of children who will stay in the room.
// Maximum age per child = 17 years. 
// Maximum number of children = 4.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>UpsellData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>early_checkin</td><td>Ref</td><td>Whether or not early check-in is needed.
// required: <code>False</code>
// cls_name: <i>ECData</i></td>
// </tr>
// <tr>
// <td>late_checkout</td><td>Ref</td><td>Whether or not late check-out is needed.
// required: <code>False</code>
// cls_name: <i>LCData</i></td>
// </tr>
// <tr>
// <td>only_eclc</td><td>Bool</td><td>Whether or not rates with only early check-in / late check-out are needed.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>ECData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>time</td><td>DateTime</td><td>The time of early check-in.
// required: <code>False</code>
// </tr>
// </tbody>
// </table>
// 
// <h8>LCData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>time</td><td>DateTime</td><td>The time of late check-out.
// required: <code>False</code>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>hotels</strong></td><td>Information about the found hotel and its rates.
// Type: <code>List</code>
// cls_name: <i>Hotels</i></td>
// </tr>
// <tr>
// <td><strong>total_hotels</strong></td><td>Total number of unique hotels found.
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>Hotels</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>rates</strong></td><td>List of available rates at the hotel.
// Type: <code>List</code>
// cls_name: <i>Rates</i></td>
// </tr>
// <tr>
// <td><strong>id</strong></td><td>Unique identifier of the hotel.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>Rates</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>allotment</strong></td><td>The number of rooms available at this rate.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>match_hash</strong></td><td>Unique identifier of the rate. This value could be used for comparing (matching) the rates between different search results (if in a search flow rates-matching is presented). The same rates from <a href="https://docs.emergingtravel.com/?version=latest#5af3b9cf-34fa-4e5c-b290-d06a218851b6">Region Search Engine Results Page</a> (or <a href="https://docs.emergingtravel.com/?version=latest#09dada83-ed9e-400e-a793-517d078e9df9">Hotels Search Engine Results Page</a>) and <a href="https://docs.emergingtravel.com/?version=latest#67876b90-43ba-40e9-883b-a63a69b1be79">Hotelpage</a> steps will have the same <code>match_hash</code> value. If the value is different, this means that the rates are not the same.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>daily_prices</strong></td><td>Daily rate prices breakdown in the search currency.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>meal</strong></td><td>Meal type in the rate.
// Type: <code>String</code>
// 
// There is a request which returns all available meals and definitions (<code>meals</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a>
// 
// If there is no meal type provided by the rate's source, <code>nomeal</code> value is displayed.</td>
// </tr>
// <tr>
// <td><strong>payment_options</strong></td><td>Accepted payment options, with specified amount to be charged, transferred as an object with key-value pairs <code>payment_options.payment_types</code>.
// Please note that for a reservation, namely the specified sum (with the given currency) shall be paid.
// Type: <code>Ref</code>
// cls_name: <i>PaymentOptionData</i></td>
// </tr>
// <tr>
// <td><strong>room_name</strong></td><td>Room name in the selected language.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>rg_ext</strong></td><td>Type of hotel room.
// <code>rg_ext</code> can be used to obtain extra information about the room from the hotel's static information (room images, description etc.).
// Type: <code>Ref</code></td>
// </tr>
// <tr>
// <td><strong>sell_price_limits</strong></td><td>Information about restrictions on the final selling price for the client.
// If this parameter is not <code>null</code>, the final selling price should be within <code>min_price</code> and <code>max_price</code> (the amount is in the search currency).
// Type: <code>Ref</code>
// cls_name: <i>SellPriceData</i></td>
// </tr>
// <tr>
// <td><strong>serp_filters</strong></td><td><strong>DEPRECATED</strong>
// List of amenities at the hotel.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>amenities_data</strong></td><td>List of amenities in the room.
// Type: <code>List</code></br>
// There is a request which returns all available room amenities and definitions (<code>room_amenities</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Für Nichtraucher",
//     "en": "Non-smoking",
//     "es": "Para no fumadores",
//     "fr": "Non fumeur",
//     "it": "Non-smoking",
//     "pl": "Dla niepalących",
//     "pt": "Não fumantes",
//     "ru": "Для некурящих"
//   },
//   "name": "non-smoking"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>deposit</strong></td><td>Deposit information in case of <code>hotel</code> payment type if applied.
// Type: <code>Ref</code>
// cls_name: <i>DepositData</i></td>
// </tr>
// <tr>
// <td><strong>no_show</strong></td><td>No-show penalty information.
// Type: <code>Ref</code>
// cls_name: <i>NoShowData</i></td>
// </tr>
// <tr>
// <td><strong>room_data_trans</strong></td><td>Structured room name in the selected language.
// Type: <code>Ref</code>
// cls_name: <i>RoomDataTrans</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>PaymentOptionData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>payment_types</strong></td><td>Array with accepted payment option for the requested rate
// Type: <code>List</code>
// cls_name: <i>PaymentTypeData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>SellPriceData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>min_price</strong></td><td>Minimum final selling price for the client (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>max_price</strong></td><td>Maximum final selling price for the client (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>DepositData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the deposit (in the hotel's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (hotel's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_refundable</strong></td><td>Whether or not the deposit is refundable.
// Type: <code>Bool</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>NoShowData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the no-show penalty (in the hotel's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (hotel's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>from_time</strong></td><td>Time (local timezone) from which <code>amount</code> would be charged for the no-show. 
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>RoomDataTrans</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>main_room_type</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>main_name</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bathroom</strong></td><td>Room's bathroom information.
// <code>null</code> means private bathroom.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bedding_type</strong></td><td>Room's bedding information.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>misc_room_type</strong></td><td>Additional room inforamation.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h12>PaymentTypeData</h12>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount to be charged for the booking (in the contract's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (contract's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>show_amount</strong></td><td>Rate price in the requested (<code>show_currency_code</code>) currency (not necessarily the sum in the charged/payment currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>show_currency_code</strong></td><td>Requested currency (not necessarily the charged/payment currency).
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>by</strong></td><td>Payment instrument.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_need_credit_card_data</strong></td><td>Whether or not credit card information is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>is_need_cvc</strong></td><td>Whether or not a CVC code is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Payment type.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>vat_data</strong></td><td>Information about VAT in the rate.
// Type: <code>Ref</code>
// cls_name: <i>VATData</i></td>
// </tr>
// <tr>
// <td><strong>tax_data</strong></td><td>Information about taxes in the rate.
// Type: <code>Ref</code>
// cls_name: <i>TaxData</i></td>
// </tr>
// <tr>
// <td><strong>perks</strong></td><td>Additional service information: early check-in / late check-out.
// Type: <code>Ref</code>
// cls_name: <i>PerkOption</i></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// <tr>
// <td><strong>cancellation_penalties</strong></td><td>Rate's cancellation rules with commission information.
// Type: <code>Ref</code>
// cls_name: <i>CancellationPenaltyData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>VATData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>included</strong></td><td>Whether or not VAT is included.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>value</strong></td><td>VAT amount in the <code>currency_code</code>.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>TaxData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>taxes</strong></td><td>List of taxes, information about which is available for these rates.
// Type: <code>List</code>
// cls_name: <i>Taxes</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>PerkOption</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>early_checkin</strong></td><td>Additional service type.
// Type: <code>List</code>
// cls_name: <i>PerkData</i></td>
// </tr>
// <tr>
// <td><strong>late_checkout</strong></td><td>Additional service type.
// Type: <code>List</code>
// cls_name: <i>PerkData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>CommissionInfoData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>show</strong></td><td>Commission information (in the search currency).
// Type: <code>Ref</code>
// cls_name: <i>CommissionData</i></td>
// </tr>
// <tr>
// <td><strong>charge</strong></td><td>Commission information (in the charge/contract currency).
// Type: <code>Ref</code>
// cls_name: <i>CommissionData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>CancellationPenaltyData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>free_cancellation_before</strong></td><td>Date when free cancellation policy expires (may return <code>null</code> - no free cancellation).
// Timezone is UTC+0.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>policies</strong></td><td>Cancellation policies' breakdown by time periods.
// Type: <code>List</code>
// cls_name: <i>CancellationPolicyData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>Taxes</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>name</strong></td><td>Tax identifier at Emerging Travel Group.
// Type: <code>String</code>
// 
// There is a request which returns all available taxes and definitions (<code>taxes</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></td>
// </tr>
// <tr>
// <td><strong>included_by_supplier</strong></td><td>Shows if the tax is included in the rate by the supplier; if the tax is not included, it is supposed to be paid at the hotel (in the specified currency).
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the tax.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Currency in which the <code>amount</code> is specified.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>PerkData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>charge_price</strong></td><td>Additional service amount (in the charge/contract currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>show_price</strong></td><td>Additional service amount (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>time</strong></td><td>Additional service time.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>CommissionData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>amount_gross</strong></td><td>Gross price.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_net</strong></td><td>Net price.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_commission</strong></td><td>Commission.
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>CancellationPolicyData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>start_at</strong></td><td>Date when this particular cancellation policy takes effect (<code>null</code> means that it is in effect till <code>end_at</code>).
// Timezone is UTC+0.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>end_at</strong></td><td>Date when this particular cancellation policy expires (<code>null</code> means all the time from <code>start_at</code> till check in).
// Timezone is UTC+0.
// 
// If <code>start_at</code> == <code>end_at</code> == <code>null</code> then this particular cancellation policy has no time restrictions / is in effect all the time.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>amount_charge</strong></td><td>Cancellation penalty amount (in the charge/contract currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_show</strong></td><td>Cancellation penalty amount (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// </tbody>
// </table>

@name("Geo Search Engine Results Page")
POST "https://api.worldota.net/api/b2b/v3/search/serp/geo/"


// Search Engine Results Page (SERP) - this is for the preliminary search of a hotel with available accommodation that meets the given search conditions. It is not recommended to let the users choose the rates from this method (a full match with results from the <a href="https://docs.emergingtravel.com/?version=latest#67876b90-43ba-40e9-883b-a63a69b1be79">Hotelpage</a> request is not expected).
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>ids</td><td>List</td><td>List of hotels identifiers.
// required: <code>True</code>
// max_value: 300</td>
// </tr>
// <tr>
// <td>checkin</td><td>Date</td><td>Check-in date, no later than 365 days from the day on which the request is made.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>checkout</td><td>Date</td><td>Check-out date, no later than 30 days from <code>checkin</code> date.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>guests</td><td>List</td><td>The list of guests in the rooms.
// The maximum number of rooms per request, which is 6. 
// In case of multiroom search, for each room equal pax numbers are highly recommended for usuge. If different pax numbers are required, we recommend that you make a separate request for each room.
// required: <code>True</code>
// cls_name: <i>GuestData</i></td>
// </tr>
// <tr>
// <td>currency</td><td>String</td><td>Currency of the rooms' price in the response.
// If no <code>currency</code> is specified or the <code>default</code> value is set, then the actual currency requested is the contract's currency for prepay rates.
// It influences <code>show_amount</code> and <code>show_currency_amount</code> only.
// required: <code>False</code>
// default: <code>Contract's currency</code></td>
// </tr>
// <tr>
// <td>residency</td><td>String</td><td>Guest's (or multiple guests') citizenship.
// This is recommended for usage if there are doubts regarding a country's/hotel's policy towards citizens of a specific country.
// Value's standard = <code>ISO 3166-1 alpha-2</code>, the value shall be transferred in lower case, number of the value's symbols = 2.
// required: <code>False</code> (could be <code>True</code> for some partners)</td>
// </tr>
// <tr>
// <td>timeout</td><td>Int</td><td>The maximum amount of time (in seconds) within which searched for rates will be returned.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>upsells</td><td>Ref</td><td>Whether or not additional services are needed.
// required: <code>False</code>
// cls_name: <i>UpsellData</i></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Response language of the rate's static information.
// required: <code>False</code>
// default: <code>Contract's language</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</code>
// </tr>
// </tbody>
// </table>
// 
// <h6>GuestData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>adults</td><td>Int</td><td>Number of adult guests.
// required: <code>True</code>
// min_value: 1
// max_value: 6</td>
// </tr>
// <tr>
// <td>children</td><td>List</td><td>Age of children who will stay in the room.
// Maximum age per child = 17 years. 
// Maximum number of children = 4.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>UpsellData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>early_checkin</td><td>Ref</td><td>Whether or not early check-in is needed.
// required: <code>False</code>
// cls_name: <i>ECData</i></td>
// </tr>
// <tr>
// <td>late_checkout</td><td>Ref</td><td>Whether or not late check-out is needed.
// required: <code>False</code>
// cls_name: <i>LCData</i></td>
// </tr>
// <tr>
// <td>only_eclc</td><td>Bool</td><td>Whether or not rates with only early check-in / late check-out are needed.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>ECData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>time</td><td>DateTime</td><td>The time of early check-in.
// required: <code>False</code>
// </tr>
// </tbody>
// </table>
// 
// <h8>LCData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>time</td><td>DateTime</td><td>The time of late check-out.
// required: <code>False</code>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>hotels</strong></td><td>Information about the found hotel and its rates.
// Type: <code>List</code>
// cls_name: <i>Hotels</i></td>
// </tr>
// <tr>
// <td><strong>total_hotels</strong></td><td>Total number of unique hotels found.
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>Hotels</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>rates</strong></td><td>List of available rates at the hotel.
// Type: <code>List</code>
// cls_name: <i>Rates</i></td>
// </tr>
// <tr>
// <td><strong>id</strong></td><td>Unique identifier of the hotel.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>Rates</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>allotment</strong></td><td>The number of rooms available at this rate.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>match_hash</strong></td><td>Unique identifier of the rate. This value could be used for comparing (matching) the rates between different search results (if in a search flow rates-matching is presented). The same rates from <a href="https://docs.emergingtravel.com/?version=latest#5af3b9cf-34fa-4e5c-b290-d06a218851b6">Region Search Engine Results Page</a> (or <a href="https://docs.emergingtravel.com/?version=latest#09dada83-ed9e-400e-a793-517d078e9df9">Hotels Search Engine Results Page</a>) and <a href="https://docs.emergingtravel.com/?version=latest#67876b90-43ba-40e9-883b-a63a69b1be79">Hotelpage</a> steps will have the same <code>match_hash</code> value. If the value is different, this means that the rates are not the same.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>daily_prices</strong></td><td>Daily rate prices breakdown in the search currency.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>meal</strong></td><td>Meal type in the rate.
// Type: <code>String</code>
// 
// There is a request which returns all available meals and definitions (<code>meals</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a>
// 
// If there is no meal type provided by the rate's source, <code>nomeal</code> value is displayed.</td>
// </tr>
// <tr>
// <td><strong>payment_options</strong></td><td>Accepted payment options, with specified amount to be charged, transferred as an object with key-value pairs <code>payment_options.payment_types</code>.
// Please note that for a reservation, namely the specified sum (with the given currency) shall be paid.
// Type: <code>Ref</code>
// cls_name: <i>PaymentOptionData</i></td>
// </tr>
// <tr>
// <td><strong>room_name</strong></td><td>Room name in the selected language.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>rg_ext</strong></td><td>Type of hotel room.
// <code>rg_ext</code> can be used to obtain extra information about the room from the hotel's static information (room images, description etc.).
// Type: <code>Ref</code></td>
// </tr>
// <tr>
// <td><strong>sell_price_limits</strong></td><td>Information about restrictions on the final selling price for the client.
// If this parameter is not <code>null</code>, the final selling price should be within <code>min_price</code> and <code>max_price</code> (the amount is in the search currency).
// Type: <code>Ref</code>
// cls_name: <i>SellPriceData</i></td>
// </tr>
// <tr>
// <td><strong>serp_filters</strong></td><td><strong>DEPRECATED</strong>
// List of amenities at the hotel.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>amenities_data</strong></td><td>List of amenities in the room.
// Type: <code>List</code></br>
// There is a request which returns all available room amenities and definitions (<code>room_amenities</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Für Nichtraucher",
//     "en": "Non-smoking",
//     "es": "Para no fumadores",
//     "fr": "Non fumeur",
//     "it": "Non-smoking",
//     "pl": "Dla niepalących",
//     "pt": "Não fumantes",
//     "ru": "Для некурящих"
//   },
//   "name": "non-smoking"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>deposit</strong></td><td>Deposit information in case of <code>hotel</code> payment type if applied.
// Type: <code>Ref</code>
// cls_name: <i>DepositData</i></td>
// </tr>
// <tr>
// <td><strong>no_show</strong></td><td>No-show penalty information.
// Type: <code>Ref</code>
// cls_name: <i>NoShowData</i></td>
// </tr>
// <tr>
// <td><strong>room_data_trans</strong></td><td>Structured room name in the selected language.
// Type: <code>Ref</code>
// cls_name: <i>RoomDataTrans</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>PaymentOptionData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>payment_types</strong></td><td>Array with accepted payment option for the requested rate
// Type: <code>List</code>
// cls_name: <i>PaymentTypeData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>SellPriceData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>min_price</strong></td><td>Minimum final selling price for the client (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>max_price</strong></td><td>Maximum final selling price for the client (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>DepositData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the deposit (in the hotel's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (hotel's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_refundable</strong></td><td>Whether or not the deposit is refundable.
// Type: <code>Bool</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>NoShowData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the no-show penalty (in the hotel's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (hotel's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>from_time</strong></td><td>Time (local timezone) from which <code>amount</code> would be charged for the no-show. 
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>RoomDataTrans</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>main_room_type</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>main_name</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bathroom</strong></td><td>Room's bathroom information.
// <code>null</code> means private bathroom.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bedding_type</strong></td><td>Room's bedding information.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>misc_room_type</strong></td><td>Additional room inforamation.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h12>PaymentTypeData</h12>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount to be charged for the booking (in the contract's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (contract's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>show_amount</strong></td><td>Rate price in the requested (<code>show_currency_code</code>) currency (not necessarily the sum in the charged/payment currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>show_currency_code</strong></td><td>Requested currency (not necessarily the charged/payment currency).
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>by</strong></td><td>Payment instrument.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_need_credit_card_data</strong></td><td>Whether or not credit card information is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>is_need_cvc</strong></td><td>Whether or not a CVC code is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Payment type.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>vat_data</strong></td><td>Information about VAT in the rate.
// Type: <code>Ref</code>
// cls_name: <i>VATData</i></td>
// </tr>
// <tr>
// <td><strong>tax_data</strong></td><td>Information about taxes in the rate.
// Type: <code>Ref</code>
// cls_name: <i>TaxData</i></td>
// </tr>
// <tr>
// <td><strong>perks</strong></td><td>Additional service information: early check-in / late check-out.
// Type: <code>Ref</code>
// cls_name: <i>PerkOption</i></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// <tr>
// <td><strong>cancellation_penalties</strong></td><td>Rate's cancellation rules with commission information.
// Type: <code>Ref</code>
// cls_name: <i>CancellationPenaltyData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>VATData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>included</strong></td><td>Whether or not VAT is included.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>value</strong></td><td>VAT amount in the <code>currency_code</code>.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>TaxData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>taxes</strong></td><td>List of taxes, information about which is available for these rates.
// Type: <code>List</code>
// cls_name: <i>Taxes</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>PerkOption</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>early_checkin</strong></td><td>Additional service type.
// Type: <code>List</code>
// cls_name: <i>PerkData</i></td>
// </tr>
// <tr>
// <td><strong>late_checkout</strong></td><td>Additional service type.
// Type: <code>List</code>
// cls_name: <i>PerkData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>CommissionInfoData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>show</strong></td><td>Commission information (in the search currency).
// Type: <code>Ref</code>
// cls_name: <i>CommissionData</i></td>
// </tr>
// <tr>
// <td><strong>charge</strong></td><td>Commission information (in the charge/contract currency).
// Type: <code>Ref</code>
// cls_name: <i>CommissionData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>CancellationPenaltyData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>free_cancellation_before</strong></td><td>Date when free cancellation policy expires (may return <code>null</code> - no free cancellation).
// Timezone is UTC+0.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>policies</strong></td><td>Cancellation policies' breakdown by time periods.
// Type: <code>List</code>
// cls_name: <i>CancellationPolicyData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>Taxes</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>name</strong></td><td>Tax identifier at Emerging Travel Group.
// Type: <code>String</code>
// 
// There is a request which returns all available taxes and definitions (<code>taxes</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></td>
// </tr>
// <tr>
// <td><strong>included_by_supplier</strong></td><td>Shows if the tax is included in the rate by the supplier; if the tax is not included, it is supposed to be paid at the hotel (in the specified currency).
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the tax.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Currency in which the <code>amount</code> is specified.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>PerkData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>charge_price</strong></td><td>Additional service amount (in the charge/contract currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>show_price</strong></td><td>Additional service amount (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>time</strong></td><td>Additional service time.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>CommissionData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>amount_gross</strong></td><td>Gross price.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_net</strong></td><td>Net price.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_commission</strong></td><td>Commission.
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>CancellationPolicyData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>start_at</strong></td><td>Date when this particular cancellation policy takes effect (<code>null</code> means that it is in effect till <code>end_at</code>).
// Timezone is UTC+0.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>end_at</strong></td><td>Date when this particular cancellation policy expires (<code>null</code> means all the time from <code>start_at</code> till check in).
// Timezone is UTC+0.
// 
// If <code>start_at</code> == <code>end_at</code> == <code>null</code> then this particular cancellation policy has no time restrictions / is in effect all the time.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>amount_charge</strong></td><td>Cancellation penalty amount (in the charge/contract currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_show</strong></td><td>Cancellation penalty amount (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// </tbody>
// </table>

@name("Hotels Search Engine Results Page")
POST "https://api.worldota.net/api/b2b/v3/search/serp/hotels/"


// Hotel rates actualization.
// 
// This request is necessary to make a booking via API.
// 
// This request is not supposed to be made for each of the hotels found via <code>region_id</code> or <code>IDs</code>, but is supposed to be made only in case when the user chooses it.
// The recommended storage time of retrieved rates is no longer than 1 hour. The actual period within which rates from this method are available for booking requests is longer, and can depend on many internal factors.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>id</td><td>String</td><td>Hotel identifier.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>checkin</td><td>Date</td><td>Check-in date, no later than 365 days from the day on which the request is made.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>checkout</td><td>Date</td><td>Check-out date, no later than 30 days from <code>checkin</code> date.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>guests</td><td>List</td><td>The list of guests in the rooms.
// The maximum number of rooms per request, which is 6. 
// In case of multiroom search, for each room equal pax numbers are highly recommended for usuge. If different pax numbers are required, we recommend that you make a separate request for each room.
// required: <code>True</code>
// cls_name: <i>GuestData</i></td>
// </tr>
// <tr>
// <td>currency</td><td>String</td><td>Currency of the rooms' price in the response.
// If no <code>currency</code> is specified or the <code>default</code> value is set, then the actual currency requested is the contract's currency for prepay rates.
// It influences <code>show_amount</code> and <code>show_currency_amount</code> only.
// required: <code>False</code>
// default: <code>Contract's currency</code></td>
// </tr>
// <tr>
// <td>residency</td><td>String</td><td>Guest's (or multiple guests') citizenship.
// This is recommended for usage if there are doubts regarding a country's/hotel's policy towards citizens of a specific country.
// Value's standard = <code>ISO 3166-1 alpha-2</code>, the value shall be transferred in lower case, number of the value's symbols = 2.
// required: <code>False</code> (could be <code>True</code> for some partners)</td>
// </tr>
// <tr>
// <td>timeout</td><td>Int</td><td>The maximum amount of time (in seconds) within which searched for rates will be returned.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>upsells</td><td>Ref</td><td>Whether or not additional services are needed.
// required: <code>False</code>
// cls_name: <i>UpsellData</i></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Response language of the rate's static information.
// required: <code>False</code>
// default: <code>Contract's language</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</code>
// </tr>
// </tbody>
// </table>
// 
// <h6>GuestData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>adults</td><td>Int</td><td>Number of adult guests.
// required: <code>True</code>
// min_value: 1
// max_value: 6</td>
// </tr>
// <tr>
// <td>children</td><td>List</td><td>Age of children who will stay in the room.
// Maximum age per child = 17 years. 
// Maximum number of children = 4.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>UpsellData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>early_checkin</td><td>Ref</td><td>Whether or not early check-in is needed.
// required: <code>False</code>
// cls_name: <i>ECData</i></td>
// </tr>
// <tr>
// <td>late_checkout</td><td>Ref</td><td>Whether or not late check-out is needed.
// required: <code>False</code>
// cls_name: <i>LCData</i></td>
// </tr>
// <tr>
// <td>multiple_eclc</td><td>Bool</td><td>Whether or not all available early check-ins / late check-outs for the rate are needed.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>only_eclc</td><td>Bool</td><td>Whether or not rates with only early check-in / late check-out are needed.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>ECData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>time</td><td>DateTime</td><td>The time of early check-in.
// required: <code>False</code>
// </tr>
// </tbody>
// </table>
// 
// <h8>LCData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>time</td><td>DateTime</td><td>The time of late check-out.
// required: <code>False</code>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>hotels</strong></td><td>Information about the found hotel and its rates.
// Type: <code>List</code>
// cls_name: <i>Hotels</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>Hotels</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>rates</strong></td><td>List of available rates at the hotel.
// Type: <code>List</code>
// cls_name: <i>Rates</i></td>
// </tr>
// <tr>
// <td><strong>id</strong></td><td>Unique identifier of the hotel.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>Rates</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>allotment</strong></td><td>The number of rooms available at this rate.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>book_hash</strong></td><td>Unique identifier of the rate. This value is passed to booking API method to identify a selected rate.
// <code>book_hash</code> key's value can be transferred via the <a href="https://docs.emergingtravel.com/?version=latest#18ad54c3-07dc-4515-9c02-4ff391ac6085">Order Booking Form</a> method within 6 hours after the corresponding rate was returned in the search results. Exceeding this limit will return an error with <code>error.slug</code> containing a <code>"rate_not_found"</code> value.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>match_hash</strong></td><td>Unique identifier of the rate. This value could be used for comparing (matching) the rates between different search results (if in a search flow rates-matching is presented). The same rates from <a href="https://docs.emergingtravel.com/?version=latest#5af3b9cf-34fa-4e5c-b290-d06a218851b6">Region Search Engine Results Page</a> (or <a href="https://docs.emergingtravel.com/?version=latest#09dada83-ed9e-400e-a793-517d078e9df9">Hotels Search Engine Results Page</a>) and <a href="https://docs.emergingtravel.com/?version=latest#67876b90-43ba-40e9-883b-a63a69b1be79">Hotelpage</a> steps will have the same <code>match_hash</code> value. If the value is different, this means that the rates are not the same.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>daily_prices</strong></td><td>Daily rate prices breakdown in the search currency.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>meal</strong></td><td>Meal type in the rate.
// Type: <code>String</code>
// 
// There is a request which returns all available meals and definitions (<code>meals</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a>
// 
// If there is no meal type provided by the rate's source, <code>nomeal</code> value is displayed.</td>
// </tr>
// <tr>
// <td><strong>payment_options</strong></td><td>Accepted payment options, with specified amount to be charged, transferred as an object with key-value pairs <code>payment_options.payment_types</code>.
// Please note that for a reservation, namely the specified sum (with the given currency) shall be paid.
// Type: <code>Ref</code>
// cls_name: <i>PaymentOptionData</i></td>
// </tr>
// <tr>
// <td><strong>room_name</strong></td><td>Room name in the selected language.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>rg_ext</strong></td><td>Type of hotel room.
// <code>rg_ext</code> can be used to obtain extra information about the room from the hotel's static information (room images, description etc.).
// Type: <code>Ref</code></td>
// </tr>
// <tr>
// <td><strong>sell_price_limits</strong></td><td>Information about restrictions on the final selling price for the client.
// If this parameter is not <code>null</code>, the final selling price should be within <code>min_price</code> and <code>max_price</code> (the amount is in the search currency).
// Type: <code>Ref</code>
// cls_name: <i>SellPriceData</i></td>
// </tr>
// <tr>
// <td><strong>serp_filters</strong></td><td><strong>DEPRECATED</strong>
// List of amenities at the hotel.
// Type: <code>List</code></td>
// </tr>
// <tr>
// <td><strong>amenities_data</strong></td><td>List of amenities in the room.
// Type: <code>List</code></br>
// There is a request which returns all available room amenities and definitions (<code>room_amenities</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Für Nichtraucher",
//     "en": "Non-smoking",
//     "es": "Para no fumadores",
//     "fr": "Non fumeur",
//     "it": "Non-smoking",
//     "pl": "Dla niepalących",
//     "pt": "Não fumantes",
//     "ru": "Для некурящих"
//   },
//   "name": "non-smoking"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>deposit</strong></td><td>Deposit information in case of <code>hotel</code> payment type if applied.
// Type: <code>Ref</code>
// cls_name: <i>DepositData</i></td>
// </tr>
// <tr>
// <td><strong>no_show</strong></td><td>No-show penalty information.
// Type: <code>Ref</code>
// cls_name: <i>NoShowData</i></td>
// </tr>
// <tr>
// <td><strong>room_data_trans</strong></td><td>Structured room name in the selected language.
// Type: <code>Ref</code>
// cls_name: <i>RoomDataTrans</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>PaymentOptionData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>payment_types</strong></td><td>Array with accepted payment option for the requested rate
// Type: <code>List</code>
// cls_name: <i>PaymentTypeData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>SellPriceData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>min_price</strong></td><td>Minimum final selling price for the client (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>max_price</strong></td><td>Maximum final selling price for the client (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>DepositData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the deposit (in the hotel's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (hotel's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_refundable</strong></td><td>Whether or not the deposit is refundable.
// Type: <code>Bool</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>NoShowData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the no-show penalty (in the hotel's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (hotel's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>from_time</strong></td><td>Time (local timezone) from which <code>amount</code> would be charged for the no-show. 
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>RoomDataTrans</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>main_room_type</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>main_name</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bathroom</strong></td><td>Room's bathroom information.
// <code>null</code> means private bathroom.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>bedding_type</strong></td><td>Room's bedding information.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>misc_room_type</strong></td><td>Additional room inforamation.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h12>PaymentTypeData</h12>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount to be charged for the booking (in the contract's currency - <code>currency_code</code>).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Amount's currency. Is the same as the charged (contract's) currency.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>show_amount</strong></td><td>Rate price in the requested (<code>show_currency_code</code>) currency (not necessarily the sum in the charged/payment currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>show_currency_code</strong></td><td>Requested currency (not necessarily the charged/payment currency).
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>by</strong></td><td>Payment instrument.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_need_credit_card_data</strong></td><td>Whether or not credit card information is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>is_need_cvc</strong></td><td>Whether or not a CVC code is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Payment type.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>vat_data</strong></td><td>Information about VAT in the rate.
// Type: <code>Ref</code>
// cls_name: <i>VATData</i></td>
// </tr>
// <tr>
// <td><strong>tax_data</strong></td><td>Information about taxes in the rate.
// Type: <code>Ref</code>
// cls_name: <i>TaxData</i></td>
// </tr>
// <tr>
// <td><strong>perks</strong></td><td>Additional service information: early check-in / late check-out.
// Type: <code>Ref</code>
// cls_name: <i>PerkOption</i></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// <tr>
// <td><strong>cancellation_penalties</strong></td><td>Rate's cancellation rules with commission information.
// Type: <code>Ref</code>
// cls_name: <i>CancellationPenaltyData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>VATData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>included</strong></td><td>Whether or not VAT is included.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>value</strong></td><td>VAT amount in the <code>currency_code</code>.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>TaxData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>taxes</strong></td><td>List of taxes, information about which is available for these rates.
// Type: <code>List</code>
// cls_name: <i>Taxes</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>PerkOption</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>early_checkin</strong></td><td>Additional service type.
// Type: <code>List</code>
// cls_name: <i>PerkData</i></td>
// </tr>
// <tr>
// <td><strong>late_checkout</strong></td><td>Additional service type.
// Type: <code>List</code>
// cls_name: <i>PerkData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>CommissionInfoData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>show</strong></td><td>Commission information (in the search currency).
// Type: <code>Ref</code>
// cls_name: <i>CommissionData</i></td>
// </tr>
// <tr>
// <td><strong>charge</strong></td><td>Commission information (in the charge/contract currency).
// Type: <code>Ref</code>
// cls_name: <i>CommissionData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h14>CancellationPenaltyData</h14>
// <table>
// <tbody>
// <tr>
// <td><strong>free_cancellation_before</strong></td><td>Date when free cancellation policy expires (may return <code>null</code> - no free cancellation).
// Timezone is UTC+0.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>policies</strong></td><td>Cancellation policies' breakdown by time periods.
// Type: <code>List</code>
// cls_name: <i>CancellationPolicyData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>Taxes</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>name</strong></td><td>Tax identifier at Emerging Travel Group.
// Type: <code>String</code>
// 
// There is a request which returns all available taxes and definitions (<code>taxes</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></td>
// </tr>
// <tr>
// <td><strong>included_by_supplier</strong></td><td>Shows if the tax is included in the rate by the supplier; if the tax is not included, it is supposed to be paid at the hotel (in the specified currency).
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the tax.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>Currency in which the <code>amount</code> is specified.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>PerkData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>charge_price</strong></td><td>Additional service amount (in the charge/contract currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>show_price</strong></td><td>Additional service amount (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// <tr>
// <td><strong>time</strong></td><td>Additional service time.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_requested</strong></td><td>Whether or not this additional service time has been requested.
// Type: <code>Bool</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>CommissionData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>amount_gross</strong></td><td>Gross price.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_net</strong></td><td>Net price.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_commission</strong></td><td>Commission.
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h16>CancellationPolicyData</h16>
// <table>
// <tbody>
// <tr>
// <td><strong>start_at</strong></td><td>Date when this particular cancellation policy takes effect (<code>null</code> means that it is in effect till <code>end_at</code>).
// Timezone is UTC+0.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>end_at</strong></td><td>Date when this particular cancellation policy expires (<code>null</code> means all the time from <code>start_at</code> till check in).
// Timezone is UTC+0.
// 
// If <code>start_at</code> == <code>end_at</code> == <code>null</code> then this particular cancellation policy has no time restrictions / is in effect all the time.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>amount_charge</strong></td><td>Cancellation penalty amount (in the charge/contract currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>amount_show</strong></td><td>Cancellation penalty amount (in the search currency).
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>commission_info</strong></td><td>Commission information.
// Type: <code>Ref</code>
// cls_name: <i>CommissionInfoData</i></td>
// </tr>
// </tbody>
// </table>

@name("Hotelpage")
POST "https://api.worldota.net/api/b2b/v3/search/hp/"


// Creating a new reservation. 
// 
// The process of reserving a rate includes several stages. Their number depends on whether there are 3D-secure checks and fraud checks (one or both of these checks can appear).
// 
// <h4>Important</h4>
// 
// >Please note that booking hotels with "id" <code>test_hotel</code> and <code>test_hotel_do_not_book</code> will be a real booking with all of the financial responsibilities being the same as with real hotels, although the hotels themselves don't exist. Nevertheless, giveaway prices are available within their rates for testing purposes.</br>
// >All of the test reservations must be cancelled.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>partner_order_id</td><td>String</td><td>Identifier of the booking (at the partner) made by the partner. Shall be unique for the <strong>contract</strong>, otherwise an error will be returned. If a successful reservation is cancelled, the identifier remains the same. It is also assigned to reservations which were not completed successfully (after <code>/hotel/order/booking/finish/status/</code> requests).
// We highly recommend that you use the <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">universally unique identifier (UUID)</a>.
// All actions with the reservation are made with the <code>partner_order_id</code>.
// In case you did not enter the <code>partner_order_id</code> we will make this identifier equals to the Emerging Travel Group <code>order_id</code>.
// required: <code>True</code>
// min_lenght: 1
// max_lenght: 256</td>
// </tr>
// <tr>
// <td>book_hash</td><td>String</td><td>Unique identifier of the rate (from the hotel page request). The <code>book_hash</code> key's value can be transferred in the value of this parameter within <strong>6 hours</strong> after the relevant rate is returned in the search results. Exceeding this limit will return an error with a <code>"rate_not_found"</code> value.
// required: <code>True</code>
// min_lenght: 1
// max_lenght: 256</td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the reservation.
// required: <code>True</code>
// min_lenght: 2
// max_lenght: 2</td>
// </tr>
// <tr>
// <td>user_ip</td><td>String</td><td>IP of the user.
// required: <code>True</code>
// </td>
// </tr>
// </tbody>
// </table>
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>item_id</strong></td><td>Identifier of the booking order item made by the partner (identifier created at Emerging Travel Group).
// It is only used for credit card data tokenization (in case of payment with card details).
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>order_id</strong></td><td>Identifier of the booking made by the partner (identifier created at Emerging Travel Group).
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>partner_order_id</strong></td><td>The partner's unique booking identifier.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>upsell_data</strong></td><td>Order upsell information.
// Type: <code>List</code>
// cls_name: <i>HotelOrderBookingFormUpsellData</i></td>
// </tr>
// <tr>
// <td><strong>payment_types</strong></td><td>Order payment information.
// Type: <code>List</code>
// cls_name: <i>HotelOrderBookingFormPaymentType</i></td>
// </tr>
// </tbody>
// </table>
// <h6>HotelOrderBookingFormUpsellData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>charge_price</strong></td><td>Price data of the upsell.
// Type: <code>Ref</code>
// cls_name: <i>HotelOrderBookingFormUpsellPriceData</i></td>
// </tr>
// <tr>
// <td><strong>name</strong></td><td>Name of the upsell.
// Type: <code>String</code>
// choices: (<code>early_checkin</code>, <code>late_checkout</code>)</td>
// </tr>
// <tr>
// <td><strong>uid</strong></td><td>Identifier of the upsell.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>data</strong></td><td>Time of the upsell.
// Type: <code>String</code>
// cls_name: <i>HotelOrderBookingFormUpsellTimeData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>HotelOrderBookingFormUpsellPriceData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the upsell.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>ISO currency code.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>HotelOrderBookingFormUpsellTimeData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>checkin_time</strong></td><td>Early checkin upsell time.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>checkout_time</strong></td><td>Late checkout upsell time.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>HotelOrderBookingFormPaymentType</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount of the order.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>ISO currency code.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_need_credit_card_data</strong></td><td>Whether or not credit card information is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>is_need_cvc</strong></td><td>Whether or not a CVC code is needed.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Payment type option.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>timeout</strong></td><td>Error may be returned, for example, because of an internal <code>Emerging Travel Group</code> services' timeout. 
// In any case, for any further <code>/hotel/order/booking/form/</code> request, a new unique <code>partner_order_id</code> needs to be used.
// If such an error is returned more than 10 times in a row then the issue is probably due to automatically changed settings of your contract, and therefore you need to contact your account manager. Otherwise, the system is experiencing temporary technical issues.</td>
// </tr>
// <tr>
// <td><strong>contract_mismatch</strong></td><td>An attempt to make a booking with a rate found with a different contract.</td>
// </tr>
// <tr>
// <td><strong>double_booking_form</strong></td><td>An attempt to make a booking with a <code>partner_order_id</code> already used for the API key's contract that wasn't completed yet. In any case, for any further <code>/hotel/order/booking/form/</code> request, a new unique <code>partner_order_id</code> needs to be used.</td>
// </tr>
// <tr>
// <td><strong>duplicate_reservation</strong></td><td>An attempt to make a booking with a <code>partner_order_id</code> already used for API key's contract that was already completed or failed. In any case, for further <code>/hotel/order/booking/form/</code> request, a new unique <code>partner_order_id</code> needs to be used.</td>
// </tr>
// <tr>
// <td><strong>hotel_not_found</strong></td><td>In case there is no available hotel in the database.</td>
// </tr>
// <tr>
// <td><strong>insufficient_b2b_balance</strong></td><td>In case the credit limit is not sufficient for the reservation.
// To discuss changes to this limit please contact your account manager.</td>
// </tr>
// <tr>
// <td><strong>reservation_is_not_allowed</strong></td><td>Booking functionality is not activated on your API-key.</td>
// </tr>
// <tr>
// <td><strong>rate_not_found</strong></td><td>Rate wasn't found. Probably too much time has passed since the search request. Another search request is needed.</td>
// </tr>
// <tr>
// <td><strong>sandbox_restriction</strong></td><td>You cannot book a hotel other than <code>test_hotel</code> with a <code>sandbox</code> API-key.</td>
// </tr>
// </tbody>
// </table>

@name("Order Booking Form")
POST "https://api.worldota.net/api/b2b/v3/hotel/order/booking/form/"


// Creating a payment token for the order with <code>"is_need_credit_card_data": true</code> payment type.
// 
// Safe and secure credit card processing guaranteed by the PCI DSS standard.
// 
// <img src="https://i.ibb.co/pxXwk1L/pcidss.png">
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>object_id</td><td>String</td><td>Identifier of the booking order item made by the partner (identifier created at Emerging Travel Group).
// You can find this value (as <code>item_id</code>) in the response of the <a href="https://docs.emergingtravel.com/#18ad54c3-07dc-4515-9c02-4ff391ac6085">Order Booking Form</a> step.
// required: <code>True</code>
// min_lenght: 1
// max_lenght: 20
// </td>
// </tr>
// <tr>
// <td>pay_uuid</td><td>String</td><td><a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">Universally unique identifier (UUID4)</a> token of the booking payment check made by the partner.
// Must be unique for every single payment with credit card details, otherwise an error will be returned.
// required: <code>True</code>
// min_lenght: 36
// max_lenght: 36</td>
// </tr>
// <tr>
// <td>init_uuid</td><td>String</td><td><a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">Universally unique identifier (UUID4)</a> token of the booking payment operation made by the partner.
// Must be unique for every single payment with credit card details, otherwise an error will be returned.
// required: <code>True</code>
// min_lenght: 36
// max_lenght: 36</td>
// </tr>
// <tr>
// <td>user_first_name</td><td>String</td><td>Guest first name.
// required: <code>True</code>
// min_lenght: 1</td>
// </tr>
// <tr>
// <td>user_last_name</td><td>String</td><td>Guest last name.
// required: <code>True</code>
// min_lenght: 1</td>
// </tr>
// <tr>
// <td>cvc</td><td>String</td><td>CVC code.
// required: <code>False</code>
// min_lenght: 3
// max_lenght: 3
// </td>
// <tr>
// <td>is_cvc_required</td><td>Bool</td><td>Whether or not a CVC code is needed.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>credit_card_data_core</td><td>Ref</td><td>Credit card data information.
// required: <code>True</code>
// cls_name: <i>CreditCardDataCore</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>CreditCardDataCore</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>year</td><td>String</td><td>Valid thru year.
// required: <code>True</code>
// min_lenght: 2
// max_lenght: 2
// </td>
// </tr>
// <tr>
// <td>card_number</td><td>String</td><td>Credit card number (without spaces).
// required: <code>True</code>
// min_lenght: 13
// max_lenght: 19
// </td>
// </tr>
// <tr>
// <td>card_holder</td><td>String</td><td>Cardholder's name.
// required: <code>True</code>
// min_lenght: 1
// </td>
// </tr>
// <tr>
// <td>month</td><td>String</td><td>Valid thru month.
// required: <code>True</code>
// min_lenght: 2
// max_lenght: 2
// </td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>body_error</strong></td><td>Incorrect JSON body.</td>
// </tr>
// <tr>
// <td><strong>validation_error</strong></td><td>In case you did not provide all the obligatory information.</td>
// </tr>
// <tr>
// <td><strong>invalid_pay_uuid</strong></td><td>The value of the parameter should be consistent with Regex <code>^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$</code>.</td>
// </tr>
// <tr>
// <td><strong>invalid_init_uuid</strong></td><td>The value of the parameter should be consistent with Regex <code>^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$</code>.</td>
// </tr>
// <tr>
// <td><strong>invalid_month</strong></td><td>Incorrect month in valid thru.</td>
// </tr>
// <tr>
// <td><strong>invalid_year</strong></td><td>Incorrect year in valid thru.</td>
// </tr>
// <tr>
// <td><strong>invalid_cvc</strong></td><td>Incorrect CVC code.</td>
// </tr>
// <tr>
// <td><strong>invalid_card_number</strong></td><td>Incorrect credit card data.</td>
// </tr>
// <tr>
// <td><strong>invalid_card_holder</strong></td><td>Incorrect cardholder's name.</td>
// </tr>
// <tr>
// <td><strong>invalid_is_cvc_required</strong></td><td>Incorrect <code>is_cvc_required</code> parameter.</td>
// </tr>
// <tr>
// <td><strong>luhn_algorithm_error</strong></td><td>Credit card number did not pass the Luhn algorithm check.</td>
// </tr>
// </tbody>
// </table>

@name("Credit Card Data Tokenization")
POST "https://api.payota.net/api/public/v1/manage/init_partners"


// Process for completing the reservation.
// 
// The reservation is carried out asynchronously, which means that the partner launches the process via the API, and then repeatedly requests <a href="https://docs.emergingtravel.com/?version=latest#09e1f183-0fef-49af-8c76-c8a8fa3d9036">Order Booking Finish Status</a> (or you can receive the <a href="https://docs.emergingtravel.com/?version=latest#b2a21496-9c3b-46d9-b9db-f8d44881b125">Order Status Webhook</a> when the processing of the reservation is finished).
// 
// Please note the requirements for guests' names when making test reservations (they are mentioned in the description of the corresponding request parameter).
// 
// <strong>If an invalid user's data is used, all of that user's data from that reservation call may be added to the stop-list.</strong>
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>arrival_datetime</td><td>DateTime</td><td>Estimated arrival time at the hotel.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the reservation.
// required: <code>True</code>
// min_lenght: 2
// max_lenght: 2</td>
// </tr>
// <tr>
// <td>partner</td><td>Ref</td><td>Partner's information.
// required: <code>True</code>
// cls_name: <i>HotelOrderBookingFinishPartner</i></td>
// </tr>
// <tr>
// <td>payment_type</td><td>Ref</td><td>Order payment information.
// required: <code>True</code>
// cls_name: <i>HotelOrderBookingFinishPaymentType</i></td>
// </tr>
// <tr>
// <td>upsell_data</td><td>List</td><td>Order upsell information.
// required: <code>False</code>
// cls_name: <i>HotelOrderBookingFinishUpsellData</i></td>
// </tr>
// <tr>
// <td>return_path</td><td>String</td><td>URL at the partner side to which the user will be forwarded by the payment gateway after 3-D Secure verification. Such an URL may contain GET parameters. Transferring <code>return_path</code> is obligatory for rates with <code>payment_types.type:"now"</code>. If you don't send this parameter, and the bank requires 3-D Secure verification, when sending a booking status check request a response will be returned with array "pay_data3ds" having <code>null</code> value.
// In order to make the process of card data transfer safer, you are required to tell us the beginning of the URI or host itself (without protocol) for <code>return_path</code> (example: <code>api.worldota.net</code>). When sending a reserve request, a compatibility check will be performed in order to find out if the beginning (host) of the <code>return_path</code> URI is the same as the one specified before. In case of mismatch, the reservation process may currently result in a failed reservation attempt (the user may be forwarded to an Emerging Travel Group site).
// required: <code>False</code>
// min_lenght: 1
// max_lenght: 256</td>
// </tr>
// <tr>
// <td>rooms</td><td>List</td><td>Guest data for the rooms.
// required: <code>True</code>
// cls_name: <i>HotelOrderBookingFinishRoom</i></td>
// </tr>
// <tr>
// <td>user</td><td>Ref</td><td>Guest's additional information.
// required: <code>True</code>
// cls_name: <i>HotelOrderBookingFinishUser</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>HotelOrderBookingFinishPartner</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>partner_order_id</td><td>String</td><td>The partner's unique booking identifier.
// required: <code>True</code>
// min_lenght: 1
// max_lenght: 256</td>
// </tr>
// <tr>
// <td>comment</td><td>String</td><td>Partner's booking's internal comment.
// These comments are not sent to the hotel and are not processed by the Emerging Travel Group Support Team. They are visible only to the partner itself.
// required: <code>False</code>
// min_lenght: 1
// max_lenght: 256
// </td>
// </tr>
// <tr>
// <td>amount_sell_b2b2c</td><td>Decimal</td><td>Resell price for the client in the contract currency. The value of this parameter (the resell price) is accepted if transferred (even if automatic completion of the resale price value is activated) and is displayed in the confirmatory accounting documents for the partners.
// required: <code>False</code>
// min_value: 1</td>
// </tr>
// </tbody>
// </table>
// 
// <h6>HotelOrderBookingFinishPaymentType</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>type</td><td>String</td><td>Payment type option.
// required: <code>True</code>
// min_lenght: 1
// choices: (<code>now</code>, <code>hotel</code>, <code>deposit</code>)</td>
// </tr>
// <tr>
// <td>amount</td><td>Decimal</td><td>Amount of the order.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>currency_code</td><td>String</td><td>ISO currency code.
// required: <code>True</code>
// min_lenght: 3
// max_lenght: 3
// choices: (<code>BGN</code>, <code>EUR</code>, <code>GBP</code>, <code>PLN</code>, <code>RON</code>, <code>RUB</code>, <code>SGD</code>, <code>TRY</code>, <code>USD</code>, <code>ZAR</code>)</td>
// </tr>
// <tr>
// <td>init_uuid</td><td>String</td><td><a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">Universally unique identifier (UUID4)</a> token of the booking payment operation.
// It needs to be transferred in orders with <code>"is_need_credit_card_data": true</code> payment types and should be the same with the <a href="https://docs.emergingtravel.com/#307703a9-e5d2-49ed-9466-22c4d697a03e">Credit Card Data Tokenization</a> method.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>pay_uuid</td><td>String</td><td><a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">Universally unique identifier (UUID4)</a> token of the booking payment check.
// It needs to be transferred in orders with <code>"is_need_credit_card_data": true</code> payment types and should be the same with the <a href="https://docs.emergingtravel.com/#307703a9-e5d2-49ed-9466-22c4d697a03e">Credit Card Data Tokenization</a> method.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>HotelOrderBookingFinishUpsellData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>name</td><td>String</td><td>Name of the upsell.
// required: <code>False</code>
// min_lenght: 1
// choices: (<code>early_checkin</code>, <code>late_checkout</code>)</td>
// </tr>
// <tr>
// <td>uid</td><td>String</td><td>Identification of the upsell.
// You can find this value in the response of the <a href="https://docs.emergingtravel.com/#18ad54c3-07dc-4515-9c02-4ff391ac6085">Order Booking Form</a> step.
// required: <code>False</code>
// min_value: 1</td>
// </tr>
// </tbody>
// </table>
// 
// <h6>HotelOrderBookingFinishRoom</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>guests</td><td>List</td><td>Guests data.
// required: <code>True</code>
// cls_name: <i>HotelOrderBookingFinishGuest</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>HotelOrderBookingFinishGuest</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>first_name</td><td>String</td><td>Guest's first name.
// required: <code>False</code>
// min_length: 1
// max_length: 32</td>
// </tr>
// <tr>
// <td>last_name</td><td>String</td><td>Guest's last name (for test purposes <code>"Ostrovok"</code> is required).
// required: <code>False</code>
// min_length: 1
// max_length: 32</td>
// </tr>
// <tr>
// <td>is_child</td><td>Bool</td><td>Whether or not the guest is a child.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>age</td><td>Int</td><td>Child's age.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// Regular expression used for validation of <i>first_name</i> and <i>last_name</i> is:</br>
// <code>^([\p{L}\p{Bengali}\p{Hebrew}\p{Devanagari}])+([\p{L}\p{Bengali}\p{Hebrew}\p{Devanagari}'\-,.\s])*$</code>
// 
// If transferring a child's name, <code>is_child</code>+<code>age</code> is required.
// 
// <h6>HotelOrderBookingFinishUser</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>comment</td><td>String</td><td>Guest's comments sent to the hotel.
// required: <code>False</code>
// min_length: 1
// max_length: 256</td>
// </tr>
// <tr>
// <td>email</td><td>String</td><td>Email of the partner's manager for contact purposes & transactional emails. A valid email is required, otherwise an error will be returned.
// In order to view all orders in your account, you need a <code>Master</code> or <code>Supervisor</code> type of account. With <code>Manager</code> type the user will see only reservations with their own email address.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>phone</td><td>String</td><td>Phone number of the partner's manager for contact purposes. A valid phone number is required, otherwise an error will be returned.
// required: <code>True</code>
// min_length: 5
// max_length: 35</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>book_hash_not_found</strong></td><td>An internal error in case we could not recognize the <code>book_hash</code>.</td>
// </tr>
// <tr>
// <td><strong>booking_form</strong></td><td>An attempt to make a booking without the first <a href="https://docs.emergingtravel.com/#18ad54c3-07dc-4515-9c02-4ff391ac6085">Order Booking Form</a> step.
// </tr>
// <tr>
// <td><strong>booking_form_expired</strong></td><td>In case <a href="https://docs.emergingtravel.com/#18ad54c3-07dc-4515-9c02-4ff391ac6085">Order Booking Form</a> has beed expired.
// Please request a new <a href="https://docs.emergingtravel.com/#18ad54c3-07dc-4515-9c02-4ff391ac6085">Order Booking Form</a> with a different <code>partner_order_id</code>.
// </tr>
// <tr>
// <td><strong>credit_card_required</strong></td><td>A credit card is required to complete the booking.</td>
// </tr>
// <tr>
// <td><strong>double_booking_finish</strong></td><td>An attempt to complete the same booking for the second time (while the status of the first attempt is not an error).</td>
// </tr>
// <tr>
// <td><strong>email</strong></td><td>Not a valid email address.</td>
// </tr>
// <tr>
// <td><strong>exceed_limit</strong></td><td>In case the credit limit is not enough for the reservation.
// To discuss changes to this limit please contact your account manager.
// </td>
// </tr>
// <tr>
// <td><strong>incorrect_chosen_payment_type</strong></td><td>Incorrect payment type.</td>
// </tr>
// <tr>
// <td><strong>incorrect_guest_name</strong></td><td>Values of parameters <code>first_name</code> and <code>last_name</code> should be consistent with Regex.</td>
// </tr>
// <tr>
// <td><strong>incorrect_guests_number</strong></td><td>Number of guests (names) is more than the request was initially made for or there is no adult guest.</td>
// </tr>
// <tr>
// <td><strong>incorrect_children_data</strong></td><td>Number of children (names) is more than the request was initially made for or <code>age</code> is not provided correct.</td>
// </tr>
// <tr>
// <td><strong>incorrect_rooms_number</strong></td><td>Amount of rooms is more than the request was initially made for.</td>
// </tr>
// <tr>
// <td><strong>order_not_found</strong></td><td>No order found by <code>partner_order_id</code>.</td>
// </tr>
// <tr>
// <td><strong>rate_not_found</strong></td><td>The rate wasn't found. Probably too much time has passed since the search request. Another search request is needed.</td>
// </tr>
// <tr>
// <td><strong>return_path_required</strong></td><td>In case <code>return_path</code> is not transferred while trying to book a rate with <code>payment_types.type:"now"</code>.</td>
// </tr>
// <tr>
// <td><strong>timeout</strong></td><td>Error may be returned, for example, because of an internal <code>Emerging Travel Group</code> services' timeout. 
// If such an error was returned it doesn't mean that the reservation was not created.
// For an additional check of whether the reservation process was launched or not, an <a href="https://docs.emergingtravel.com/#09e1f183-0fef-49af-8c76-c8a8fa3d9036">Order Booking Finish Status</a> check request should be sent.
// If the booking status check request returns an <code>order_not_found</code> error, it means that no reservation process had been launched and that the reservation request should be sent again.</td>
// </tr>
// <tr>
// <td><strong>unauthorized_group_booking</strong></td><td>In case you are trying to make more than 6 reservations in the same hotel for the same dates.
// To make a group booking you should contact the Emerging Travel Group Support Team or fill in the group booking form on the site.</td>
// </tr>
// <tr>
// <td><strong>arrival_date_differs_from_checkin_date</strong></td><td>Estimated arrival date at the hotel should be equal to or the day after the arrival date.</td>
// </tr>
// <tr>
// <td><strong>not_enough_credit_card_data</strong></td><td>In case, when <code>init_uuid</code> or <code>pay_uuid</code> is not transferred while trying to book the rate with <code>"is_need_credit_card_data": true</code> payment type.</td>
// </tr>
// <tr>
// <td><strong>incorrect_init_uuid_format</strong></td><td>The value of the parameter should be consistent with Regex <code>^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$</code>.</td>
// </tr>
// <tr>
// <td><strong>incorrect_pay_uuid_format</strong></td><td>The value of the parameter should be consistent with Regex <code>^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$</code>.</td>
// </tr>
// <tr>
// <td><strong>unknown</strong></td><td>Errors with <code>http status code</code> 500 may be returned, for example, because of internal <code>Emerging Travel Group</code> services' timeout. If such error is returned more than 10 times in a row, than the issue is apparently connected with automatically changes settings of your contract, and therefore you need to contact your account manager. Otherwise, the system is experiencing temporary technical issues.
// If such error with <code>http status code</code> 500 was returned - it does not mean, that reservation was not created.
// For additional check of whether the reservation process was launched or not, <a href="https://docs.emergingtravel.com/#09e1f183-0fef-49af-8c76-c8a8fa3d9036">Order Booking Finish Status</a> request shall be sent.
// If <a href="https://docs.emergingtravel.com/#09e1f183-0fef-49af-8c76-c8a8fa3d9036">Order Booking Finish Status</a> method returns <code>order_not_found</code>, it will mean that no reservation process had been launched and that a reservation request shall be sent again.</td>
// </tr>
// </tbody>
// </table>

@name("Order Booking Finish")
POST "https://api.worldota.net/api/b2b/v3/hotel/order/booking/finish/"


// A status check for the orders completion process made in async (asynchronous) mode. The request is supposed to be used during the reservation process only.
// 
// <strong>Checking the booking status</strong>
// 
// If you get a response with <code>processing</code> status, you need to request the booking finish status at certain intervals (such as every 5 seconds) by sending a booking status check request.
// 
// <strong>Processing 3-D Secure Credit Cards (optional)</strong>
// 
// If the issuing bank supports 3-D Secure cards, one more step is required to complete the booking. 
// In such a case, when a correct status request is sent, a response with the <code>3ds</code> value of the <code>status</code> key and special data in <code>data_3ds</code> key is retrieved. You can send a corresponding request with data for a 3-D Secure check via a GET type of request or via a POST type of request. Below you can find an example with information for sending a POST-request.
// 
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">{
//   "data": {
//     "data_3ds": {
//       "action_url": "https://test.paymentgate.ru/acs/auth/start.do",
//       "data": {
//         "MD": "94cf25b2-aa6d-4204-83e4-acf036d263f6",
//         "PaReq": "eJxVkt1ygjAQhV/F4R7zIwI6azptqa2dAR0L0+s0RKAV0ADVvn0TC33833+zObs5G7g5l/vRp1RNUVcLi4yxNZKVqNOiyhZWEi9t37phEOdKyuBFik5JBqFsGp6JUZEurBl358xfpLbvSWw7U05sHzvU3hGyS92Z8DyfWww2t1t5ZNA3YrrPmAIaUCsqkfOqZcDF8W4VMYd6LsaAeoRSqlXACJ04U9fzAf0wVLyUTPFW5vz0AeiCIOquatUXc20JoAGgU3uWt+1hjtBwYSzqEpA5APQ3waYzUaOFzkXKwvfwHMXZaR08kHWQOGH8cIqC5BTGyQKQqYBUyzGKKcYOpiPszbEzx1NAlzzw0kzACJmYXE9wME1ur47+p0AbrfQehkcMBPJ8qCupK7R7vzGgv3nvn4yHotXuLPPZIY2ecbeLGlI8bulbkh2zzRZvXvfG2UuRUSy0P5Rg9yJpAJCRQf3SUL9vHV39g287E7qa",
//         "TermUrl": "https://test.paymentgate.ru/rebpayment/rest/finish3ds.do?ret_path=finish"
//       },
//       "method": "post"
//     },
//     "partner_order_id": "asd123",
//     "percent": 66
//   },
//   "debug": null,
//   "error": null,
//   "status": "3ds"
// }
// </code></pre>
// 
// <strong>Method POST</strong>
// 
// When such a response with a <code>post</code> value in <code>data.data_3ds.method</code> key is retrieved, a POST request must be sent on behalf of the user (in the customer's browser) to the URL from the <code>action_url</code> key's value and with <code>md</code>, <code>termurl</code>, and <code>pareq</code> parameters (<code>data_3ds</code> <strong>data needs to be used</strong>). These parameters' names shall be sent in the same case as received; the correct case is mentioned in the value of 2nd level key - <code>name</code>.
// 
// If the response example from above is used, the POST-request's parameters (that are sent to the URL from the key <code>action_url</code>) shall be the following:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"PaReq": "eJxVkt1ygjAQhV/F4R7zIwI6azptqa2dAR0L0+s0RKAV0ADVvn0TC33833+zObs5G7g5l/vRp1RNUVcLi4yxNZKVqNOiyhZWEi9t37phEOdKyuBFik5JBqFsGp6JUZEurBl358xfpLbvSWw7U05sHzvU3hGyS92Z8DyfWww2t1t5ZNA3YrrPmAIaUCsqkfOqZcDF8W4VMYd6LsaAeoRSqlXACJ04U9fzAf0wVLyUTPFW5vz0AeiCIOquatUXc20JoAGgU3uWt+1hjtBwYSzqEpA5APQ3waYzUaOFzkXKwvfwHMXZaR08kHWQOGH8cIqC5BTGyQKQqYBUyzGKKcYOpiPszbEzx1NAlzzw0kzACJmYXE9wME1ur47+p0AbrfQehkcMBPJ8qCupK7R7vzGgv3nvn4yHotXuLPPZIY2ecbeLGlI8bulbkh2zzRZvXvfG2UuRUSy0P5Rg9yJpAJCRQf3SUL9vHV39g287E7qa",
// "TermUrl": "https://test.paymentgate.ru/rebpayment/rest/finish3ds.do?ret_path=finish",
// "MD": "94cf25b2-aa6d-4204-83e4-acf036d263f6"
// </code></pre>
// 
// <strong>Important:</strong>
// 
// >The value of the <code>PaReq</code> parameter may contain line breaks, which must be retained at all times when this parameter is forwarded on in a request. Otherwise, the transaction will not be successfully completed.
// 
// Upon completion of the 3-D Secure check, the payment gateway will forward the customer back to the partner's website (the URL in the <code>return_path</code> parameter of the booking request).
// 
// It makes practical sense to enter a specific URL in the <code>return_path</code> parameter value. Following this URL should trigger a booking finish status request. In this case, you will be returned to the <code>pending</code> step and continue renewing the booking finish status with the corresponding request.
// 
// <strong>Method GET</strong>
// 
// If you obtain a response with "status": "3ds" and "method": "get", it is necessary to transfer the user with a GET-request to "action_url". All necessary parameters (e.g. <code>MD</code>, <code>pareq</code>, <code>termurl</code>) will be included in the "action_url".
// 
// Example:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"data3ds": {
//   "action_url": "https://test.paymentgate.ru/acs/auth/start.do?data={"PaReq":"eJxVkt1ygjAQhV/F4R7zIwI6azptqa2dAR0L0+s0RKAV0ADVvn0TC33833+zObs5G7g5l/vRp1RNUVcLi4yxNZKVqNOiyhZWEi9t37phEOdKyuBFik5JBqFsGp6JUZEurBl358xfpLbvSWw7U05sHzvU3hGyS92Z8DyfWww2t1t5ZNA3YrrPmAIaUCsqkfOqZcDF8W4VMYd6LsaAeoRSqlXACJ04U9fzAf0wVLyUTPFW5vz0AeiCIOquatUXc20JoAGgU3uWt+1hjtBwYSzqEpA5APQ3waYzUaOFzkXKwvfwHMXZaR08kHWQOGH8cIqC5BTGyQKQqYBUyzGKKcYOpiPszbEzx1NAlzzw0kzACJmYXE9wME1ur47+p0AbrfQehkcMBPJ8qCupK7R7vzGgv3nvn4yHotXuLPPZIY2ecbeLGlI8bulbkh2zzRZvXvfG2UuRUSy0P5Rg9yJpAJCRQf3SUL9vHV39g287E7qa","termurl":"https://test.paymentgate.ru/rebpayment/rest/finish3ds.do?ret_path=finish","MD":"94cf25b2-aa6d-4204-83e4-acf036d263f6}"
//   "method": "get"
// },
// </code></pre>
// 
// <strong>Completing the booking process</strong>
// 
// As soon as you request the booking finish status, it returns a <code>status</code> key with an <code>ok</code> value, meaning that the reservation is successfully completed.
// 
// <strong>Important:</strong>
// 
// >The booking is completed (successfully or not) only after a <code>status</code> key with an <code>ok</code> value or one of the below errors is returned.
// 
// Note that the reservation confirmation time usually doesn't exceed 2 minutes. Nevertheless, there are cases, when the reservation takes longer to be confirmed - in any case, you need to wait till an answer different to <code>"status":"processing"</code> is returned. A reservation cannot be considered successfully completed or not unless the respective information is returned in the booking status request's response.
// 
// If you have booking time limits we have <strong>cut-off logic</strong> for booking timeouts (only for refundable rates). During this maximum booking time, you can request the <a href="https://docs.emergingtravel.com/#09e1f183-0fef-49af-8c76-c8a8fa3d9036">Order Booking Finish Status</a> any time you like (but we highly recommend to do it once per 5sec). At the last second, you request the status for the last time and receive the reservation status "completed" or "failed" (even in the case when the reservation is not completed yet at Emerging Travel Group).
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>partner_order_id</td><td>String</td><td>Identifier of the booking (at the partner) made by the partner.
// required: <code>True</code>
// min_lenght: 1
// max_lenght: 256</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>data_3ds</strong></td><td>Additional 3-D secure cards check information.
// Type: <code>Ref</code>
// cls_name: <i>Data3DS<i></td>
// </tr>
// <tr>
// <td><strong>percent</strong></td><td>Percent of the order confirmation.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>partner_order_id</strong></td><td>Identifier of the booking (at the partner) made by the partner.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// <h6>Data3DS</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>action_url</strong></td><td>URL to which parameters should be sent.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>method</strong></td><td>Method of sending the information.
// Type: <code>String</code>
// choices: (<code>get</code>, <code>post</code>)</td>
// </tr>
// <tr>
// <td><strong>data</strong></td><td>Information that should be sent.
// Type: <code>RawMap</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>block</strong></td><td>Card authorization error.</td>
// </tr>
// <tr>
// <td><strong>charge</strong></td><td>Card authorization error.</td>
// </tr>
// <tr>
// <td><strong>3ds</strong></td><td>Invalid 3D-secure code.</td>
// </tr>
// <tr>
// <td><strong>soldout</strong></td><td>The rate was no longer available at the moment of reservation, as the rooms at this rate were sold out.</td>
// </tr>
// <tr>
// <td><strong>book_limit</strong></td><td>Failed booking status due to cut-off logic.</td>
// </tr>
// <tr>
// <td><strong>provider</strong></td><td>Technical error at the rate provider.</td>
// </tr>
// <tr>
// <td><strong>order_not_found</strong></td><td>No reservation with the following <code>partner_order_id</code> wasn found. Probably an incorrect reservation <code>partner_order_id</code> was inputted, or a reservation with the following <code>partner_order_id</code> hasn't been created yet.</td>
// </tr>
// <tr>
// <td><strong>booking_finish_did_not_succeed</strong></td><td>In case you are trying to request an <a href="https://docs.emergingtravel.com/#09e1f183-0fef-49af-8c76-c8a8fa3d9036">Order Booking Finish Status</a> without a successful <a href="https://docs.emergingtravel.com/#b79e9280-16da-4d51-b500-7f1c3bfd0f78">Order Booking Finish</a>.</td>
// </tr>
// <tr>
// <td><strong>unknown</strong></td><td>If such an error was returned it doesn't mean that the reservation wasn't completed successfully. A booking finish status check request will continue to be sent. Such an error may be returned because of, for example, an internal Emerging Travel Group services' timeout.</td>
// </tr>
// </tbody>
// </table>

@name("Order Booking Finish Status")
POST "https://api.worldota.net/api/b2b/v3/hotel/order/booking/finish/status/"



// Emerging Travel Group can make an HTTP POST to your URLs when the processing of the reservation is finished. If you would like Emerging Travel Group to POST the status of the order, you need to provide a callback URL to the API Support Team.
// 
// For Webhook POSTs, Emerging Travel Group listens for the following codes from your server and reacts accordingly:
// 
// <li>If Emerging Travel Group receives a <code>200</code> <code>(Success)</code> code it will determine the webhook POST is successful and not retry.</li>
// <li>If Emerging Travel Group receives a <code>500</code> <code>(Server Error)</code> code, Emerging Travel Group will retry POSTing according to the schedule below.</li>
// 
// If your application is unable to process the webhook request, Emerging Travel Group will retry for 7.5 minutes at the following intervals before stopping trying: 30 seconds, 60 seconds, 90 seconds, 120 seconds and 150 seconds.
// 
// <h4>Payload</h4>
// 
// When the reservation is finished (either <code>completed</code> or <code>failed</code>), your URL will be called with an application/json payload and with the following data:
// 
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined"> {
//   "data": {
//     "partner_order_id": "qwerty123",
//     "status": "completed"
//   },
//   "signature": {
//     "signature": "7865d225dbee1b54909er153d193e0b57b707ebe81ff5b2e1b71ebaf749bec23",
//     "timestamp": 1574146939,
//     "token": "d3395025-1ee7-49a2-bd86-e4bd6b9908b2"
//   }
// }
// </code></pre>
// 
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>partner_order_id</td><td>String</td><td>The partner's unique booking identifier.</td>
// </tr>
// <tr>
// <td>status</td><td>String</td><td>Status of the reservation.</td>
// </tr>
// </tbody>
// </table>
// 
// In case you want to determine the reason for the <code>failed</code> status use the <a href="https://docs.emergingtravel.com/?version=latest#09e1f183-0fef-49af-8c76-c8a8fa3d9036">Order Booking Finish Status</a> method.
// 
// <h4>Securing Webhooks</h4>
// 
// To ensure the authenticity of event requests, Emerging Travel Group signs them and posts the signature along with other webhook parameters:
// 
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>signature</td><td>String</td><td>String with hexadecimal digits generated by the HMAC algorithm.</td>
// </tr>
// <tr>
// <td>timestamp</td><td>Int</td><td>Number of seconds passed since January 1, 1970.</td>
// </tr>
// <tr>
// <td>token</td><td>String</td><td>Randomly generated string with length of 50.</td>
// </tr>
// </tbody>
// </table>
// 
// To verify the webhook originated from Emerging Travel Group you need to:
// 
// <li>Concatenate the timestamp and token values.</li>
// <li>Encode the resulting string with the HMAC algorithm (using your API Key token as a key and SHA256 digest mode).</li>
// <li>Compare the resulting hexdigest to the signature.</li>
// <li>Optionally, you can cache the token value locally and not honor any subsequent request with the same token. This will prevent replay attacks.</li>
// <li>Optionally, you can check if the timestamp is not too far from the current time.</li>
// 
// Below is a Python code sample used to verify the signature:
// 
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined"> import hashlib, hmac
// 
// def verify(api_key, token, timestamp, signature):
//     hmac_digest = hmac.new(key=api_key,
//                            msg='{}{}'.format(timestamp, token),
//                            digestmod=hashlib.sha256).hexdigest()
//     return hmac.compare_digest(unicode(signature), unicode(hmac_digest))
// </code></pre>
// 
// And here's a sample in Ruby:
// 
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined"> require 'openssl'
// 
// def verify(api_key, token, timestamp, signature)
//   digest = OpenSSL::Digest::SHA256.new
//   data = [timestamp, token].join
//   signature == OpenSSL::HMAC.hexdigest(digest, api_key, data)
// end
// </code></pre>
// 
// And here's a sample in PHP:
// 
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined"> function verify($apiKey, $token, $timestamp, $signature)
// {
//     // check if the timestamp is fresh
//     if (abs(time() - $timestamp) > 15) {
//         return false;
//     }
// 
//     // returns true if signature is valid
//     return hash_hmac('sha256', $timestamp . $token, $apiKey) === $signature;
// }
// </code></pre>
// 
// And here's a sample in Node.js:
// 
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined"> const crypto = require('crypto')
// 
// const verify = ({ apiKey, timestamp, token, signature }) => {
//     const encodedToken = crypto
//         .createHmac('sha256', apiKey)
//         .update(timestamp.concat(token))
//         .digest('hex')
// 
//     return (encodedToken === signature)
// }
// </code></pre>

@name("Order Status Webhook")
POST "https://{{host}}/"



// Retrieving a created order's information using the partner's booking identifier.
// This is relevant only for those reservations that were initially successfully created (order/status request returned a result.status key with an <code>"OK"</code> value).
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>ordering</td><td>Ref</td><td>Arrangement in a sequence.
// required: <code>True</code>
// cls_name: <i>HotelOrderingIn</i></td>
// </tr>
// <tr>
// <td>pagination</td><td>Ref</td><td>Dividing orders into discrete pages.
// required: <code>True</code>
// cls_name: <i>PAPIPaginationIn</i></td>
// </tr>
// <tr>
// <td>search</td><td>Ref</td><td>Searching for something.
// required: <code>False</code>
// cls_name: <i>B2bHotelSearchIn</i></td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the response.
// required: <code>False</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6>HotelOrderingIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>ordering_type</td><td>String</td><td>Ascending or descending ordering type.
// required: <code>True</code>
// choices: (<code>asc</code>, <code>desc</code>)</td>
// </tr>
// <tr>
// <td>ordering_by</td><td>String</td><td>Ordering parameter.
// required: <code>True</code>
// choices: (<code>cancelled_at</code>, <code>checkin_at</code>, <code>checkout_at</code>, <code>created_at</code>, <code>free_cancellation_before</code>, <code>payment_due</code>, <code>payment_pending</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h6>PAPIPaginationIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>page_size</td><td>Int</td><td>Number of orders per page.
// required: <code>True</code>
// min_value: 1
// max_value: 50</td>
// </tr>
// <tr>
// <td>page_number</td><td>Int</td><td>Orders page number.
// required: <code>True</code>
// min_value: 1</td>
// </tr>
// </tbody>
// </table>
// 
// <h6>B2bHotelSearchIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>cancelled_at</td><td>Ref</td><td>Date and time of booking cancellation.
// required: <code>False</code>
// cls_name: <i>PAPIDateTimeRange</i></td>
// </tr>
// <tr>
// <td>checkin_at</td><td>Ref</td><td>Date of check-in at the hotel.
// required: <code>False</code>
// cls_name: <i>PAPIDateRange</i></td>
// </tr>
// <tr>
// <td>checkout_at</td><td>Ref</td><td>Date of check-out from the hotel.
// required: <code>False</code>
// cls_name: <i>PAPIDateRange</i></td>
// </tr>
// <tr>
// <td>created_at</td><td>Ref</td><td>Date and time of booking completion.
// required: <code>False</code>
// cls_name: <i>PAPIDateTimeRange</i></td>
// </tr>
// <tr>
// <td>free_cancellation_before</td><td>Ref</td><td>Date and time before which you could cancell the reservation free of charge.
// required: <code>False</code>
// cls_name: <i>PAPIDateTimeRange</i></td>
// </tr>
// <tr>
// <td>modified_at</td><td>Ref</td><td>Date and time of booking last modification.
// required: <code>False</code>
// cls_name: <i>PAPIDateTimeRange</i></td>
// </tr>
// <tr>
// <td>order_ids</td><td>List</td><td>Identifiers of the bookings made by the partner (identifier created at Emerging Travel Group).
// required: <code>False</code>
// cls_name: <code>Int</code></td>
// </tr>
// <tr>
// <td>paid_at</td><td>Ref</td><td>Date of payment for the reservation.
// required: <code>False</code>
// cls_name: <i>PAPIDateRange</i></td>
// </tr>
// <tr>
// <td>partner_order_ids</td><td>List</td><td>The partner's unique booking identifier.
// required: <code>False</code>
// cls_name: <code>String</code></td>
// </tr>
// <tr>
// <td>payment_due</td><td>Ref</td><td>Date after which the reservation payment becomes overdue (if it has not been received yet).
// required: <code>False</code>
// cls_name: <i>PAPIDateRange</i></td>
// </tr>
// <tr>
// <td>payment_pending</td><td>Ref</td><td>Date from which Emerging Travel Group begins to wait for the payment and notify the partner about it.
// required: <code>False</code>
// cls_name: <i>PAPIDateRange</i></td>
// </tr>
// <tr>
// <td>source</td><td>String</td><td>Source from which a booking has been made.
// required: <code>False</code>
// choices: (<code>b2b-card</code>, <code>b2b-site</code>, <code>b2b-api</code>, <code>b2b-handmade</code>)</td>
// </tr>
// <tr>
// <td>status</td><td>String</td><td>Status of the reservation.
// required: <code>False</code>
// choices: (<code>cancelled</code>, <code>completed</code>, <code>failed</code>, <code>noshow</code>, <code>rejected</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h8>PAPIDateTimeRange</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>from_date</td><td>DateTime</td><td>Search bookings with date and time greater than or equal to this value.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>to_date</td><td>DateTime</td><td>Search bookings with date and time less than or equal to this value.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>PAPIDateRange</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>from_date</td><td>Date</td><td>Search bookings with date greater than or equal to this value.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>to_date</td><td>Date</td><td>Search bookings with date less than or equal to this value.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>current_page_number</strong></td><td>Number of the current page.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>orders</strong></td><td>Orders information.
// Type: <code>List</code>
// cls_name: <i>B2bHotelOrderData</i></td>
// </tr>
// <tr>
// <td><strong>total_orders</strong></td><td>Total number of all your orders.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>total_pages</strong></td><td>Total number of pages (using the current pagination request).
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>B2bHotelOrderData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>agreement_number</strong></td><td>Contract's agreement number.
// Type: <code>String</code></td>
// </tr>
// <tr><td><strong>amount_payable</strong></td><td>Amount of the order in case it has been completed. 
// Amount of the cancellation fee in case the order has been cancelled (not free of charge).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_payable_vat</strong></td><td>Amount of VAT of the order in case it has been completed. 
// Amount of VAT of the cancellation fee in case it has been cancelled (not free of charge).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_payable_with_upsells</strong></td><td>Amount of the order with all upsells in case it has been completed. 
// Amount of the cancellation fee in case it has been cancelled (not free of charge).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_refunded</strong></td><td>Refunded amount (if the order is cancelled).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_sell</strong></td><td>Amount of the order.
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_sell_b2b2c</strong></td><td>Resale price for the client.
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>api_auth_key_id</strong></td><td>API key id.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>cancellation_info</strong></td><td>Cancellation information of the reservation.
// Type: <code>Ref</code>
// cls_name: <i>CancellationInfoData</i></td>
// </tr>
// <tr>
// <td><strong>cancelled_at</strong></td><td>Date and time of the booking cancellation.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>checkin_at</strong></td><td>Date of check-in at the hotel.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>checkout_at</strong></td><td>Date of check-out from the hotel.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>contract_slug</strong></td><td>Contract slug in the Emerging Travel Group system.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>created_at</strong></td><td>Date and time of the booking's completion.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>has_tickets</strong></td><td>Whether or not the reservation has tickets (additional requests). 
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>hotel_data</strong></td><td>Information about the hotel booked.
// Type: <code>Ref</code>
// cls_name: <i>HotelData</i></td>
// </tr>
// <tr>
// <td><strong>invoice_id</strong></td><td>Identifier of the order group.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_checked</strong></td><td>Whether or not the reservation is additionally checked with the hotel by the Support Team.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>meta_data</strong></td><td>Additional data about the reservation.
// Type: <code>Ref</code>
// cls_name: <i>HotelOrderMetaData</i></td>
// </tr>
// <tr>
// <td><strong>modified_at</strong></td><td>Date and time of the booking's last modification.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>nights</strong></td><td>Number of nights of stay.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>order_id</strong></td><td>Identifier of the booking made by the partner (identifier created at Emerging Travel Group).
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>order_type</strong></td><td>Type of order.
// Type: <code>String</code>
// choices: (<code>avia</code>, <code>hotel</code>, <code>car</code>, <code>upsell</code>)</td>
// </tr>
// <tr>
// <td><strong>partner_data</strong></td><td>Partner's unique booking identifier and booking comment.
// Type: <code>Ref</code>
// cls_name: <i>PartnerData</i></td>
// </tr>
// <tr>
// <td><strong>payment_data</strong></td><td>Order payment information.
// Type: <code>Ref</code>
// cls_name: <i>PaymentData</i></td>
// </tr>
// <tr>
// <td><strong>roomnights</strong></td><td>Total number of nights of stay for all rooms.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>rooms_data</strong></td><td>Information about the room and the guests.
// Type: <code>List</code>
// cls_name: <i>RoomData</i></td>
// </tr>
// <tr>
// <td><strong>source</strong></td><td>Source from which the booking was made.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>status</strong></td><td>Status of the reservation.
// Type: <code>String</code>
// choices: (<code>cancelled</code>, <code>completed</code>, <code>failed</code>, <code>noshow</code>, <code>rejected</code>)</td>
// </tr>
// <tr>
// <td><strong>supplier_data</strong></td><td>Supplier's booking information.
// Type: <code>Ref</code>
// cls_name: <i>SupplierData</i></td>
// </tr>
// <tr>
// <td><strong>taxes</strong></td><td>Information about the taxes.
// Type: <code>List</code>
// cls_name: <i>TaxData</i></td>
// </tr>
// <tr>
// <td><strong>upsells</strong></td><td>Order upsells information.
// Type: <code>Ref</code>
// cls_name: <i>HotelOrderUpsellData</i></td>
// </tr>
// <tr>
// <td><strong>user_data</strong></td><td>User's booking information.
// Type: <code>Ref</code>
// cls_name: <i>UserData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>PAPIAmountOfMoney</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>ISO currency code.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>CancellationInfoData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>free_cancellation_before</strong></td><td>Date and time before which you could cancell the reservation free of charge.
// Timezone is UTC+0.
// May return <code>null</code> - no free cancellation.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>policies</strong></td><td>Cancellation policies' breakdown by time periods.
// Type: <code>List</code>
// cls_name: <i>CancellationPolicyData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>CancellationPolicyData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>end_at</strong></td><td>Date when this particular cancellation policy expires.
// Timezone is UTC+0.
// <code>null</code> means all the time from <code>start_at</code> till check-in. 
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>start_at</strong></td><td>Date when this particular cancellation policy takes effect.
// Timezone is UTC+0.
// <code>null</code> means that it is in effect till <code>end_at</code>.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>penalty</strong></td><td>Penalty information.
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// </tbody>
// </table></br>
// If <code>start_at</code> = <code>end_at</code> = <code>null</code> it means that this particular cancellation policy has no time restrictions / is in effect all the time.</br></br>
// 
// <h8>HotelData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>id</strong></td><td>Hotel's identifier.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>order_id</strong></td><td>Hotel's internal order confirmation.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>HotelOrderMetaData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>voucher_order_comment</strong></td><td>Comment of the Support Team, added upon the partner's request.
// E.g., information about early check-in / late check-out and other additional services.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>PartnerData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>order_comment</strong></td><td>Partner's booking comment.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>order_id</strong></td><td>Partner's unique booking identifier.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>PaymentData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>invoice_id</strong></td><td>Identifier of the order group.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>paid_at</strong></td><td>Date of payment for the reservation.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>payment_by</strong></td><td>Information about the person who pays for the reservation.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>payment_due</strong></td><td>Date after which the reservation payment becomes overdue (if it has not been received yet).
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>payment_pending</strong></td><td>Date from which Emerging Travel Group begins to wait for the payment and notify the partner about it.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>payment_type</strong></td><td>Order payment information.
// Type: <code>Date</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>RoomData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>bedding_name</strong></td><td>Bed type.
// Type: <code>List</code>
// cls_name: <code>String</code></br>
// There is a request which returns all available beds and definitions (<code>bedding</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Doppelbett",
//     "en": "Double bed",
//     "es": "Cama doble",
//     "fr": "Double bed",
//     "it": "Double bed",
//     "pl": "Double bed",
//     "pt": "Double bed",
//     "ru": "Двуспальная кровать"
//   },
//   "name": "double"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>guest_data</strong></td><td>Type (adult / child), number of guests and names.
// Type: <code>Ref</code>
// cls_name: <i>RoomGuestData</i></td>
// </tr>
// <tr>
// <td><strong>meal_name</strong></td><td>Meal type.
// Type: <code>String</code></br>
// There is a request which returns all available meals and definitions (<code>meals</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Kontinentales Frühstück",
//     "en": "Continental Breakfast",
//     "es": "Desayuno continental",
//     "fr": "Continental Breakfast",
//     "it": "Continental Breakfast",
//     "pl": "Continental Breakfast",
//     "pt": "Continental Breakfast",
//     "ru": "Континентальный завтрак"
//   },
//   "name": "continental-breakfast"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>room_idx</strong></td><td>Room identifier.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>room_name</strong></td><td>Room name.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h10>RoomGuestData</h10>
// <table>
// <tbody>
// <tr>
// <td><strong>adults_number</strong></td><td>Number of adults.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>children_number</strong></td><td>Number of children.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>guests</strong></td><td>Name of guests.
// Type: <code>List</code>
// cls_name: <i>GuestData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h12>GuestData</h12>
// <table>
// <tbody>
// <tr>
// <td><strong>first_name</strong></td><td>Guest's first name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>last_name</strong></td><td>Guest's last name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>is_child</strong></td><td>Whether or not the guest is a child.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>age</strong></td><td>Child's age.
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>SupplierData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>name</strong></td><td>Booking supplier's name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>order_id</strong></td><td>Supplier's unique booking identifier.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>TaxData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>name</strong></td><td>Name of the tax.
// Type: <code>String</code></br>
// There is a request which returns all available taxes and definitions (<code>taxes</code> key):
// <a href="https://api.worldota.net/api/b2b/v3/hotel/static/">https://api.worldota.net/api/b2b/v3/hotel/static/</a></br>
// Example of the array from this request's response:
// <pre class="click-to-expand-wrapper is-snippet-wrapper is-expandable language-undefined"><code class="is-highlighted language-undefined">"locale": {
//     "de": "Kurtaxe",
//     "en": "City Tax",
//     "es": "Impuesto municipal",
//     "fr": "Taxe municipale",
//     "it": "Imposta municipale",
//     "pl": "Podatek miejski",
//     "pt": "Imposto municipal",
//     "ru": "Городской налог"
//   },
//   "name": "AE;city_tax;city_tax"
// </code></pre></td>
// </tr>
// <tr>
// <td><strong>is_included</strong></td><td>Whether or not the tax is included by the supplier.
// Type: <code>Bool</code></td>
// </tr>
// <tr>
// <td><strong>amount_tax</strong></td><td>Amount of the tax.
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>HotelOrderUpsellData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>amount_payable</strong></td><td>Amount of the upsell in case it is completed. 
// Amount of the cancellation fee in case it is cancelled (not free of charge).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_payable_vat</strong></td><td>Amount of VAT of the upsell in case it is completed. 
// Amount of VAT of the cancellation fee in case it is cancelled (not free of charge).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_refunded</strong></td><td>Refunded amount (if the upsell is cancelled).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_sell</strong></td><td>Amount of the upsell.
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>amount_sell_b2b2c</strong></td><td>Resale price for the client.
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>cancelled_at</strong></td><td>Date and time of upsell cancellation.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>created_at</strong></td><td>Date and time of upsell completion.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>free_cancellation_before</strong></td><td>Date and time before which you could cancell the upsell free of charge.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>order_id</strong></td><td>Upsell identifier.
// Type: <code>Int</code>
// min_value: 1</td>
// </tr>
// <tr>
// <td><strong>order_type</strong></td><td>Type of the order.
// Type: <code>String</code>
// choices: (<code>upsell</code>)</td>
// </tr>
// <tr>
// <td><strong>payment_data</strong></td><td>Upsell payment information.
// Type: <code>Ref</code>
// cls_name: <i>PaymentData</i></td>
// </tr>
// <tr>
// <td><strong>status</strong></td><td>Status of the upsell.
// Type: <code>String</code>
// choices: (<code>awaiting_confirmation</code>, <code>cancelled</code>, <code>completed</code>, <code>noshow</code>)</td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Type of the upsell.
// Type: <code>String</code>
// choices: (<code>early_checkin</code>, <code>late_checkout</code>, <code>meal_upgrade</code>, <code>insurance</code>, <code>name_change</code>)</td>
// </tr>
// <tr>
// <td><strong>info</strong></td><td>Additional information of the upsell.
// Type: <code>RawMap</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>UserData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>email</strong></td><td>User's email.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>page_out_of_range</strong></td><td>In case you request a higher page than you have</td>
// </tr>
// </tr>
// </tbody>
// </table>

@name("Order Information")
POST "https://api.worldota.net/api/b2b/v3/hotel/order/info/"



// Booking cancellation by the partner's booking identifier. Is relevant for reservations with <code>"completed"</code> status. Allows the cancellation of non-refundable bookings with charges. 
// 
// <h4>Important</h4>
// 
// >Please note that booking hotels with "id" <code>test_hotel</code> and <code>test_hotel_do_not_book</code> will be a real booking with all of the financial responsibilities being the same as with real hotels, although the hotels themselves don't exist.</br>
// >In case of cancellation of a non-refundable reservation, penalties will be real.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>partner_order_id</td><td>String</td><td>Identifier of the booking (at the partner) made by the partner.
// required: <code>True</code>
// min_lenght: 1</td>
// </tr>
// </tbody>
// </table>
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>status</strong></td><td>Indicator of the request completion.
// Type: <code>String</code>
// choices: (<code>ok</code>, <code>error</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>order_not_found</strong></td><td>In case the booking order hasn't been created yet (didn't get <code>OK</code> status), or in case the order with such a "partner_order_id" doesn't exist</td>
// </tr>
// <tr>
// <td><strong>order_not_cancellable</strong></td><td>In case the stay period has already started or it is not permitted to cancel a non-refundable booking according to your contract's settings</td>
// </tr>
// </tr>
// </tbody>
// </table>

@name("Order Cancellation")
POST "https://api.worldota.net/api/b2b/v3/hotel/order/cancel/"



// Downloading the order voucher in <a class="reference external" href="https://en.wikipedia.org/wiki/PDF">PDF</a> format.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>partner_order_id</td><td>String</td><td>Identifier of the booking (at the partner) made by the partner.
// required: <code>True</code>
// min_lenght: 1</td>
// </tr>
// <tr>
// <td>language</td><td>String</td><td>Language of the downloading voucher.
// required: <code>True</code>
// choices: (<code>ar</code>, <code>bg</code>, <code>de</code>, <code>el</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>it</code>, <code>hu</code>, <code>pl</code>, <code>pt</code>, <code>ro</code>, <code>ru</code>, <code>sr</code>, <code>sq</code>, <code>tr</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>failed_to_generate_document</strong></td><td>In case the voucher could not be generated.
// Try to download the file later.</td>
// </tr>
// <tr>
// <td><strong>order_not_found</strong></td><td>No order found by <code>partner_order_id</code>.</td>
// </tr>
// <tr>
// <td><strong>pending</strong></td><td>Voucher is currently being generated.
// Try to download the file later.</td>
// </tr>
// <tr>
// <td><strong>voucher_is_not_downloadable</strong></td><td>In case the voucher could not be downloaded.
// Check the order status (should be completed) and amount payable.</td>
// </tr>
// </tbody>
// </table>

@name("Voucher Download")
GET "https://api.worldota.net/api/b2b/v3/hotel/order/document/voucher/download/"


// Downloading the info invoice of the order in <a class="reference external" href="https://en.wikipedia.org/wiki/PDF">PDF</a> format.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>partner_order_id</td><td>String</td><td>Identifier of the booking (at the partner) made by the partner.
// required: <code>True</code>
// min_lenght: 1</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>failed_to_generate_document</strong></td><td>In case the info invoice could not be generated.
// Try to download the file later.</td>
// </tr>
// <tr>
// <td><strong>order_not_found</strong></td><td>No order found by <code>partner_order_id</code>.</td>
// </tr>
// <tr>
// <td><strong>invoice_not_available</strong></td><td>Info invoice is not available for this <code>partner_order_id</code>. 
// Check the amount payable, contract kind, legal entity and contract data.</td>
// </tr>
// </tbody>
// </table>

@name("Info Invoice Download")
GET "https://api.worldota.net/api/b2b/v3/hotel/order/document/info_invoice/download/"


// Downloading the invoice of the order group in <a class="reference external" href="https://en.wikipedia.org/wiki/PDF">PDF</a> format.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>invoice_id</td><td>String</td><td>Identifier of the order group.
// required: <code>True</code>
// min_lenght: 1</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>failed_to_generate_document</strong></td><td>In case the invoice could not be generated.
// Try to download the file later.</td>
// </tr>
// <tr>
// <td><strong>invoice_not_found</strong></td><td>No order group found by <code>invoice_id</code>.</td>
// </tr>
// <tr>
// <td><strong>terminal_invoice</strong></td><td>In case an order from the group has <code>payment_options.payment_types.later</code> or is paid for by a terminal.</td>
// </tr>
// </tbody>
// </table>

@name("Invoice Download")
GET "https://api.worldota.net/api/b2b/v3/ordergroup/document/invoice/download/"


// Downloading the single order act in <a class="reference external" href="https://en.wikipedia.org/wiki/PDF">PDF</a> format.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>partner_order_id</td><td>String</td><td>Identifier of the booking (at the partner) made by the partner.
// required: <code>True</code>
// min_lenght: 1</td>
// </tr>
// <tr>
// <td>show_b2b2c_price</td><td>Bool</td><td>Whether or not the resale price needs to be shown (instead of <code>amount_sell</code>).
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>add_commission</td><td>Bool</td><td>Whether or not commission information is needed.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>seal</td><td>Bool</td><td>Whether or not a seal is needed.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>failed_to_generate_document</strong></td><td>In case the single act could not be generated.
// Try to download the file later.</td>
// </tr>
// <tr>
// <td><strong>order_not_found</strong></td><td>No order group found by <code>partner_order_id</code>.</td>
// </tr>
// <tr>
// <td><strong>order_not_assigned</strong></td><td>No contract data assigned to <code>partner_order_id</code>.</td>
// </tr>
// <tr>
// <td><strong>single_act_is_not_downloadable</strong></td><td>In case the single act could not be downloaded.
// Check the amount payable, contract kind, legal entity and checkout date (should not be in the future).</td>
// </tr>
// </tbody>
// </table>

@name("Single Act Download")
GET "https://api.worldota.net/api/b2b/v3/hotel/order/document/single_act/download/"


// Retrieving information on confirmatory accounting documents.
// 
// Should be useed to check the information on confirmatory accounting documents and receive a <code>package_id</code> for <a href="https://docs.emergingtravel.com/#02959660-0907-49bc-9ab2-211801a0537d">Closing Documents Download</a> method.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>order_ids</td><td>List</td><td>Identifier of the bookings (at Emerging Travel Group).
// required: <code>False</code>
// cls_name: <code>Int</code></td>
// </tr>
// <tr>
// <td>agreement_numbers</td><td>List</td><td>Contract's agreement numbers.
// required: <code>False</code>
// cls_name: <code>String</code></td>
// </tr>
// <tr>
// <td>issue_date</td><td>Date</td><td>Confirmatory accounting documents’ issue date.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table></br>
// Note that <code>agreement_numbers</code>+<code>issue_date</code> or <code>order_ids</code> is required.
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>packages</strong></td><td>Confirmatory accounting documents’ information.
// Type: <code>List</code>
// cls_name: <i>ClosingDocumentsData</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>ClosingDocumentsData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>agreement_number</strong></td><td>Contract's agreement number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>package_id</strong></td><td>Confirmatory accounting documents’ identifier (at Emerging Travel Group).
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>package_number</strong></td><td>Confirmatory accounting document number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>package_issue_date</strong></td><td>Confirmatory accounting document issue date.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>reporting_month</strong></td><td>Confirmatory accounting document reporting month.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>reporting_year</strong></td><td>Confirmatory accounting document reporting year.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>total_commission</strong></td><td>Agent remuneration (during the reporting month).
// Type: <code>Decimal</code></td>
// </tr><tr>
// <td><strong>total_sum</strong></td><td>Bookings total amount (during the reporting month).
// Type: <code>Decimal</code></td>
// </tr><tr>
// <td><strong>total_vat</strong></td><td>Bookings total VAT (during the reporting month).
// Type: <code>Decimal</code></td>
// </tr><tr>
// <td><strong>order_ids</strong></td><td>Identifier of the bookings (at Emerging Travel Group).
// Type: <code>List</code>
// cls_name: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>invalid_params</strong></td><td><code>order_ids</code> or <code>agreement_numbers</code> and <code>issue_date</code> should be requested.</td>
// </tr>
// <tr>
// <td><strong>invalid_params_issue_date_agreement_numbers</strong></td><td><code>agreement_numbers</code> and <code>issue_date</code> should be requested together.</td>
// </tr>
// <tr>
// <td><strong>orders_not_found</strong></td><td>No order found by <code>order_id</code>.</td>
// </tr>
// <tr>
// <td><strong>agreements_not_found</strong></td><td>No such agreement numbers found in the contract.</td>
// </tr>
// </tbody>
// </table>

@name("Closing Documents Information")
GET "https://api.worldota.net/api/b2b/v3/general/document/closing_documents/info/"


// Downloading the confirmatory accounting documents in <a class="reference external" href="https://en.wikipedia.org/wiki/PDF">PDF</a> format.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>package_id</td><td>Int</td><td>Identifier of the confirmatory accounting document.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>seal</td><td>Bool</td><td>Whether or not the seal is needed.
// required: <code>True</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>failed_to_generate_document</strong></td><td>In case the confirmatory accounting document could not be generated.
// Try to download the file later.</td>
// </tr>
// </tbody>
// </table>

@name("Closing Documents Download")
GET "https://api.worldota.net/api/b2b/v3/general/document/closing_documents/download/"


// Retrieving contract data information.
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>contract_datas</strong></td><td>List of partner's contract data.
// Type: <code>List</code>
// cls_name: <i>ContractDataInfoDetails</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>ContractDataInfoDetails</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>agreement_number</strong></td><td>Contract agreement number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>agreement_date</strong></td><td>Contract agreement date.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>active_from</strong></td><td>Сontract commencement date.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>kind</strong></td><td>Contract kind.
// Type: <code>String</code>
// choices: (<code>informational-services</code>, <code>agency</code>, <code>services</code>, <code>corp</code>)</td>
// </tr>
// <tr>
// <td><strong>terminated_at</strong></td><td>Contract termination date.
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>closing_documents_issuance_type</strong></td><td>Contract confirmatory accounting documents issuance type.
// Type: <code>String</code>
// choices: (<code>monthly</code>, <code>single_order</code>)</td>
// </tr>
// <tr>
// <td><strong>legal_entity</strong></td><td>Contract legal entity information.
// Type: <code>Ref</code>
// cls_name: <i>LegalEntity</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>LegalEntity</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>name</strong></td><td>Legal entity name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>taxpayer_id</strong></td><td>Taxpayer identification number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>address_legal</strong></td><td>Legal address (registered address).
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>address_actual</strong></td><td>Actual address.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>

@name("Contract Data Information")
GET "https://api.worldota.net/api/b2b/v3/general/contract/data/info/"


// Retrieving the contract's financial information.
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>contract_datas</strong></td><td>List of partner's contract data.
// Type: <code>List</code>
// cls_name: <i>ContractDatasDetails</i></td>
// </tr>
// <tr>
// <td><strong>contract</strong></td><td>Contract's general financial information.
// Type: <code>Ref</code>
// cls_name: <i>ContractDetails</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>ContractDatasDetails</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>agreement_number</strong></td><td>Contract data's agreement number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>overpay</strong></td><td>The amount of money that could be used for bookings.
// This amount consists of orders' refundable money, balances from previous transfers, and money deposited in advance on the contract.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>overdue_debt</strong></td><td>Contract data's overdue debt.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>unpaid_non_ref_orders_sum</strong></td><td>The amount of unpaid non-refundable orders.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>unpaid_ref_orders_sum</strong></td><td>The amount of unpaid refundable orders.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>unpaid_orders_sum</strong></td><td>The amount of all bookings that are not paid (including overdue payment).
// If the reservation is canceled, then the cost of its cancellation.
// Type: <code>Decimal</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>ContractDetails</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>credit_limit</strong></td><td>Contract's credit limit.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>deposit</strong></td><td>Contract's deposit amount.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>max_booking_price</strong></td><td>The limit for new bookings.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>overdue_debt</strong></td><td>Contract's overdue debt.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>unpaid_non_ref_orders_sum</strong></td><td>The amount of unpaid non-refundable orders.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>unpaid_ref_orders_sum</strong></td><td>The amount of unpaid refundable orders.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>unpaid_orders_sum</strong></td><td>The amount of all bookings that are not paid (including overdue payment).
// If the reservation is canceled, then the cost of its cancellation.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>contract_overpay</strong></td><td>The amount of money that could be used for bookings.
// This amount consists of orders' refundable money, balances from previous transfers, and money deposited in advance on the contract.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>reporting_currency</strong></td><td>Contract's reporting currency.
// Type: <code>String</code>
// choices: (<code>BGN</code>, <code>EUR</code>, <code>GBP</code>, <code>PLN</code>, <code>RON</code>, <code>RUB</code>, <code>SGD</code>, <code>TRY</code>, <code>USD</code>, <code>ZAR</code>)</td>
// </tr>
// </tbody>
// </table>

@name("Financial Information")
GET "https://api.worldota.net/api/b2b/v3/general/financial/info/"


// Creating a new order group.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>orders</td><td>List</td><td>Orders to be grouped.
// required: <code>True</code>
// cls_name: <i>PAPIOrderGroupOrdersIn</i></td>
// </tr>
// </tbody>
// </table>
// <h6>PAPIOrderGroupOrdersIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>order_id</td><td>Int</td><td>Identifier of the booking made by the partner (identifier created at Emerging Travel Group).
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>order_type</td><td>String</td><td>Type of the order.
// required: <code>True</code>
// choices: (<code>hotel</code>, <code>car</code>, <code>upsell</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>invoice_id</strong></td><td>Identifier of the order group.
// Type: <code>string</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>orders_not_found</strong></td><td>No order found by <code>order_id</code>.</td>
// </tr>
// <tr>
// <td><strong>orders_already_added</strong></td><td>Requested order is already added to this (or another) order group.</td>
// </tr>
// <tr>
// <td><strong>orders_are_blocked</strong></td><td>Requested order is being processed.</td>
// </tr>
// <tr>
// <td><strong>order_not_white_b2b_invoiceable</strong></td><td>Order group could not be created for the requested order.</td>
// </tr>
// <tr>
// <td><strong>different_contract_data</strong></td><td>Requested orders have different contract data.</td>
// </tr>
// </tbody>
// </table>

@name("OrderGroup Create")
GET "https://api.worldota.net/api/b2b/v3/ordergroup/create/"


// Adding the order to the existing order group.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>orders</td><td>List</td><td>Orders to be grouped.
// required: <code>True</code>
// cls_name: <i>PAPIOrderGroupOrdersIn</i></td>
// </tr>
// <tr>
// <td>invoice_id</td><td>String</td><td>Identifier of the order group.
// required: <code>True</code></td>
// </tr>
// </tbody>
// </table>
// <h6>PAPIOrderGroupOrdersIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>order_id</td><td>Int</td><td>Identifier of the booking made by the partner (identifier created at Emerging Travel Group).
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>order_type</td><td>String</td><td>Type of order.
// required: <code>True</code>
// choices: (<code>hotel</code>, <code>car</code>, <code>upsell</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>invoice_not_found</strong></td><td>No order group found by <code>invoice_id</code>.</td>
// </tr>
// <tr>
// <td><strong>orders_already_added</strong></td><td>Requested order is already added to this (or another) order group.</td>
// </tr>
// <tr>
// <td><strong>orders_are_blocked</strong></td><td>Requested order is being processed.</td>
// </tr>
// <tr>
// <td><strong>orders_not_found</strong></td><td>No order found by <code>order_id</code>.</td>
// </tr>
// <tr>
// <td><strong>order_not_white_b2b_invoiceable</strong></td><td>	Order group could not be created for the requested order.</td>
// </tr>
// <tr>
// <td><strong>different_contract_data</strong></td><td>Requested orders have different contract data.</td>
// </tr>
// </tbody>
// </table>

@name("OrderGroup Order Add")
GET "https://api.worldota.net/api/b2b/v3/ordergroup/order/add/"


// Removing the order from an existing order group.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>orders</td><td>List</td><td>Orders to be removed.
// required: <code>True</code>
// cls_name: <i>PAPIOrderGroupOrdersIn</i></td>
// </tr>
// <tr>
// <td>invoice_id</td><td>String</td><td>Identifier of the order group.
// required: <code>True</code></td>
// </tr>
// </tbody>
// </table>
// <h6>PAPIOrderGroupOrdersIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>order_id</td><td>Int</td><td>Identifier of the booking made by the partner (identifier created at Emerging Travel Group).
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>order_type</td><td>String</td><td>Type of order.
// required: <code>True</code>
// choices: (<code>hotel</code>, <code>car</code>, <code>upsell</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>invoice_not_found</strong></td><td>No order group found by <code>invoice_id</code>.</td>
// </tr>
// <tr>
// <td><strong>orders_are_blocked</strong></td><td>Requested order is being processed.</td>
// </tr>
// <tr>
// <td><strong>orders_not_found</strong></td><td>No order found by <code>order_id</code>.</td>
// </tr>
// </tbody>
// </table>

@name("OrderGroup Order Remove")
GET "https://api.worldota.net/api/b2b/v3/ordergroup/order/remove/"


// Disbanding the existing order group.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>invoice_id</td><td>String</td><td>Identifier of the order group.
// required: <code>True</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>invoice_not_disbandable</strong></td><td>Order group could not be disbanded as it has already been paid for.</td>
// </tr>
// <tr>
// <td><strong>invoice_not_found</strong></td><td>No order group found by <code>invoice_id</code>.</td>
// </tr>
// </tbody>
// </table>

@name("OrderGroup Disband")
GET "https://api.worldota.net/api/b2b/v3/ordergroup/disband/"


// Retrieving order group information.
// 
// This shiuld be used to check the order group information before applying the <a href="blalba.com">OrderGroup Pay (from Overpay)</a> method.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>pagination</td><td>Ref</td><td>Dividing order groups into discrete pages.
// required: <code>True</code>
// cls_name: <i>PAPIPaginationIn</i></td>
// </tr>
// <tr>
// <td>seach</td><td>Ref</td><td>Searching for something.
// required: <code>False</code>
// cls_name: <i>PAPIOrderGroupInfoSearchIn</i></td>
// </tr>
// <tr>
// <td>ordering</td><td>Ref</td><td>Arrangement in a sequence.
// required: <code>True</code>
// cls_name: <i>PAPIOrderGroupInfoOrderingIn</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>PAPIPaginationIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>page_size</td><td>Int</td><td>Number of orders per page.
// required: <code>True</code>
// min_value: 1
// max_value: 50</td>
// </tr>
// <tr>
// <td>page_number</td><td>Int</td><td>Orders page number.
// required: <code>True</code>
// min_value: 1</td>
// </tr>
// </tbody>
// </table>
// 
// <h6>PAPIOrderGroupInfoSearchIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>agreement_number</td><td>String</td><td>Contract's agreement number.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>invoice_id</td><td>String</td><td>Identifier of the order group.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>created_at</td><td>Ref</td><td>Date and time of the order group's creation.
// required: <code>False</code>
// cls_name: <i>PAPIDateTimeRange</i></td>
// </tr>
// <tr>
// <td>paid_at</td><td>Ref</td><td>Date of payment for the order group.
// required: <code>False</code>
// cls_name: <i>PAPIDateRange</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>PAPIDateTimeRange</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>from_date</td><td>DateTime</td><td>Search order groups with date and time greater than or equal to this value.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>to_date</td><td>DateTime</td><td>Search order groups with date and time less than or equal to this value.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>PAPIDateRange</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>from_date</td><td>Date</td><td>Search order groups with date greater than or equal to this value.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>to_date</td><td>Date</td><td>Search order groups with date less than or equal to this value.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>PAPIOrderGroupInfoOrderingIn</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>ordering_type</td><td>String</td><td>Ascending or descending ordering type.
// required: <code>True</code>
// choices: (<code>asc</code>, <code>desc</code>)</td>
// </tr>
// <tr>
// <td>ordering_by</td><td>String</td><td>Ordering parameter.
// required: <code>True</code>
// choices: (<code>invoice_id</code>, <code>paid_at</code>, <code>created_at</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>current_page_number</strong></td><td>Number of the current page.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>groups</strong></td><td>Order groups information.
// Type: <code>List</code>
// cls_name: <i>OrderGroupData</i></td>
// </tr>
// <tr>
// <td><strong>total_groups</strong></td><td>Total number of all your order groups.
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>total_pages</strong></td><td>Total number of pages (using the current pagination request).
// Type: <code>Int</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>OrderGroupData</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>agreement_number</strong></td><td>Contract's agreement number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>amount_payable</strong></td><td>Amount of the order group in case it is completed. 
// Amount of the cancellation fee in case it is cancelled (not free of charge).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>created_at</strong></td><td>Date and time of the order group's creation.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>invoice_id</strong></td><td>Identifier of the order group.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>orders</strong></td><td>List of orders inside the order group.
// Type: <code>List</code>
// cls_name: <i>OrderData</i></td>
// </tr>
// <tr>
// <td><strong>payment_due</strong></td><td>Date after which the order group payment becomes overdue (if it has not been received yet).
// Type: <code>Date</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>PAPIAmountOfMoney</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>amount</strong></td><td>Amount.
// Type: <code>Decimal</code></td>
// </tr>
// <tr>
// <td><strong>currency_code</strong></td><td>ISO currency code.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h8>OrderData</h8>
// <table>
// <tbody>
// <tr>
// <td><strong>amount_payable</strong></td><td>Amount of the order in case it is completed. 
// Amount of the cancellation fee in case it is cancelled (not free of charge).
// Type: <code>Ref</code>
// cls_name: <i>PAPIAmountOfMoney</i></td>
// </tr>
// <tr>
// <td><strong>created_at</strong></td><td>Date and time of the booking's completion.
// Type: <code>DateTime</code></td>
// </tr>
// <tr>
// <td><strong>payment_due</strong></td><td>Date after which the reservation payment becomes overdue (if it has not been received yet).
// Type: <code>Date</code></td>
// </tr>
// <tr>
// <td><strong>status</strong></td><td>Status of the reservation.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>order_id</strong></td><td>Identifier of the booking made by the partner (identifier created at Emerging Travel Group).
// Type: <code>Int</code></td>
// </tr>
// <tr>
// <td><strong>order_type</strong></td><td>Type of order.
// Type: <code>String</code>
// choices: (<code>hotel</code>, <code>car</code>, <code>upsell</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>page_out_of_range</strong></td><td>In case you request a higher page than you have.</td>
// </tr>
// </tbody>
// </table>

@name("OrderGroup Information")
POST "https://api.worldota.net/api/b2b/v3/ordergroup/info/"


// Payment for the existing order group from the overpay.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>amount</td><td>Decimal</td><td>Amount of the order group.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>invoice_id</td><td>String</td><td>Identifier of the order group.
// required: <code>True</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>invoice_already_paid</strong></td><td>Requested order group has been already paid.</td>
// </tr>
// <tr>
// <td><strong>overpay_not_enough</strong></td><td>Overpay amount is not enough to pay for the order group.</td>
// </tr>
// <tr>
// <td><strong>invoice_not_found</strong></td><td>No order group found by <code>invoice_id</code>.</td>
// </tr>
// <tr>
// <td><strong>payment_amount_discrepancy</strong></td><td>Requested amount differs from the payable amount of the order group.</td>
// </tr>
// </tbody>
// </table>

@name("OrderGroup Pay (from Overpay)")
GET "https://api.worldota.net/api/b2b/v3/ordergroup/pay/overpay/"


// Retrieving a contract's profiles list.
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>users</strong></td><td>List of partner's profiles data.
// Type: <code>List</code>
// cls_name: <i>ProfileInfo</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>ProfileInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>type</strong></td><td>Profile's type.
// Type: <code>String</code>
// choices: (<code>master</code>, <code>finance</code>, <code>manager</code>, <code>supervisor</code>, <code>employee</code>, <code>self-booker</code>)</td>
// </tr>
// <tr>
// <td><strong>email</strong></td><td>Profile's email.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>last_name</strong></td><td>Profile's last name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>first_name</strong></td><td>Profile's first name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>middle_name</strong></td><td>Profile's middle name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>phone</strong></td><td>Profile's phone number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>status</strong></td><td>Profile's status.
// Type: <code>String</code></td>
// </tr>
// </tbody>
// </table>

@name("Profiles list")
GET "https://api.worldota.net/api/b2b/v3/profiles/list/"


// Creating a contract's profiles.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>type</td><td>String</td><td>Profile's type.
// required: <code>True</code>
// choices: (<code>employee</code>, <code>finance</code>, <code>manager</code>, <code>master</code>, <code>self_booker</code>, <code>supervisor</code>, <code>travel_manager</code>)</td>
// </tr>
// <tr>
// <td>email</td><td>String</td><td>Profile's email.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>last_name</td><td>String</td><td>Profile's last name.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>first_name</td><td>String</td><td>Profile's first name.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>middle_name</td><td>String</td><td>Profile's middle name.
// required: <code>False</code></td>
// </tr>
// <tr>
// <td>phone</td><td>String</td><td>Profile's phone number.
// required: <code>False</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>user_already_exists</strong></td><td>In case the profile with such an <code>email</code> already exists.</td>
// </tr>
// </tbody>
// </table>

@name("Profiles create")
POST "https://api.worldota.net/api/b2b/v3/profiles/create/"


// Editing a contract's profiles.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>email</td><td>String</td><td>Profile's email.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>last_name</td><td>String</td><td>Profile's last name.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>first_name</td><td>String</td><td>Profile's first name.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>middle_name</td><td>String</td><td>Profile's middle name.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>phone</td><td>String</td><td>Profile's phone number.
// required: <code>True</code></td>
// </tr>
// <tr>
// <td>type</td><td>String</td><td>Profile's type.
// required: <code>True</code>
// choices: (<code>employee</code>, <code>finance</code>, <code>manager</code>, <code>master</code>, <code>self_booker</code>, <code>supervisor</code>, <code>travel_manager</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Response</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>user</strong></td><td>Partner's profiles data.
// Type: <code>Ref</code>
// cls_name: <i>ProfileInfo</i></td>
// </tr>
// </tbody>
// </table>
// 
// <h6>ProfileInfo</h6>
// <table>
// <tbody>
// <tr>
// <td><strong>email</strong></td><td>Profile's email.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>first_name</strong></td><td>Profile's first name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>last_name</strong></td><td>Profile's last name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>middle_name</strong></td><td>Profile's middle name.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>phone</strong></td><td>Profile's phone number.
// Type: <code>String</code></td>
// </tr>
// <tr>
// <td><strong>status</strong></td><td>Profile's status.
// Type: <code>String</code>
// choices: (<code>active</code>, <code>awaiting_confirmation</code>, <code>deleted</code>, <code>disabled</code>)
// </td>
// </tr>
// <tr>
// <td><strong>type</strong></td><td>Profile's type.
// Type: <code>String</code>
// choices: (<code>employee</code>, <code>finance</code>, <code>manager</code>, <code>master</code>, <code>self_booker</code>, <code>supervisor</code>, <code>travel_manager</code>)</td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>users_profile_not_found</strong></td><td>No user's profile with such an <code>email</code> was found in the contract.</td>
// </tr>
// </tbody>
// </table>

@name("Profiles edit")
POST "https://api.worldota.net/api/b2b/v3/profiles/edit/"


// Disabling a contract's profiles.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>email</td><td>String</td><td>Profile's email.
// required: <code>True</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>users_profile_not_found</strong></td><td>No user's profile with such an <code>email</code> was found in the contract.</td>
// </tr>
// <tr>
// <td><strong>profile_is_already_disabled</strong></td><td>User's profile with such an <code>email</code> is already disabled.</td>
// </tr>
// <tr>
// <td><strong>disable_users_profile_error</strong></td><td>There was an error while disabling the user's profile.
// Please contact the API Support team.</td>
// </tr>
// </tbody>
// </table>

@name("Profiles disable")
POST "https://api.worldota.net/api/b2b/v3/profiles/disable/"


// Restoring a contract's profiles.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>email</td><td>String</td><td>Profile's email.
// required: <code>True</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>users_profile_not_found</strong></td><td>No user's profile with such an <code>email</code> was found in the contract.</td>
// </tr>
// <tr>
// <td><strong>profile_is_already_restored</strong></td><td>User's profile with such an <code>email</code> is already restored.</td>
// </tr>
// <tr>
// <td><strong>restore_users_profile_error</strong></td><td>There was an error while restoring the user's profile.
// Please contact the API Support team.</td>
// </tr>
// </tbody>
// </table>

@name("Profiles restore")
POST "https://api.worldota.net/api/b2b/v3/profiles/restore/"


// Deleting a contract's profiles.
// 
// <h4>Parameters</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>field</strong></td><td><strong>type</strong></td><td><strong>properties</strong></td>
// </tr>
// <tr>
// <td>email</td><td>String</td><td>Profile's email.
// required: <code>True</code></td>
// </tr>
// </tbody>
// </table>
// 
// <h4>Errors' description</h4>
// <table>
// <tbody>
// <tr>
// <td><strong>users_profile_not_found</strong></td><td>No user's profile with such an <code>email</code> was found in the contract.</td>
// </tr>
// <tr>
// <td><strong>delete_users_profile_error</strong></td><td>There was an error while deleting the user's profile.
// Please contact the API Support team.</td>
// </tr>
// </tbody>
// </table>

@name("Profiles delete")
POST "https://api.worldota.net/api/b2b/v3/profiles/delete/"



