#!/usr/bin/env dothttp

// Save [examples](https://learning.postman.com/docs/publishing-your-api/authoring-your-documentation/#using-examples-in-your-docs) of requests and responses so users can understand the endpoint and troubleshoot issues more quickly. This is especially useful when a user is browsing the documentation and doesnâ€™t yet have their access credentials. Ensure that these examples contain readable, prototypical usage of your API endpoints. // // In Postman, you can add and reference these examples, saving actual server responses or mocking new ones from scratch. Then in the web-viewable documentation, you can reference these paired requests and responses. 
@name("Provide examples")
GET "https://api.coindesk.com/v1/bpi/historical/close.json"
? "start"= "2013-09-01"
? "end"= "2020-09-01"


// Good documentation is more than just API reference. It includes user scenarios to show what is possible with the API. Guide new users through the proper sequence of API calls to accomplish a specific workflow [using variables to pass along data](https://blog.postman.com/how-to-make-money-using-postman-chaining-requests/). These use cases can be grouped in folders or as a stand-alone collection.// // Once you receive a response from the API server, you can parse that information and store it as a variable to be used for later. Take a look under the **Tests** tab. Or check out this detailed example of [chaining requests](https://explore.postman.com/templates/1616/extract-data-to-chain-requests) from this [step-by-step tutorial](https://blog.getpostman.com/2018/03/19/how-to-make-money-using-postman-chaining-requests/).
@name("Demonstrate scenarios")
GET "https://api.coindesk.com/v1/bpi/currentprice.json"



