#!/usr/bin/env dothttp

// If you’re using an API specification format, such as OpenAPI, you can [import a spec file](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/#importing-api-specifications) into Postman to automatically generate a collection. Once you have a collection, you can automatically generate web-viewable Postman documentation.// // ### [OpenAPI examples](https://github.com/OAI/OpenAPI-Specification/tree/master/examples)// - [petstore.yaml](https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v3.0/petstore.yaml)// - [petstore.json](https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v3.0/petstore.json)
@name("Generate from an API specification")
GET "https://simplekart.postman.com/items"
? "list"= "10"


// It’s possible someone else has already done the heavy lifting of creating a collection. Check with your teammates to see if they have a collection that can provide a starting point for the full-fledged collection. Or, you may discover that community members are sharing unofficial collections documenting your public API.// // Here are examples of unofficial APIs documented in Postman.// // - [SpaceX](https://github.com/r-spacex/SpaceX-API/blob/master/docs/v4/README.md)// - [Nanoleaf](https://explore.postman.com/templates/1878/nanoleaf)
@name("Find a collection")
GET "https://api.spacexdata.com/v4/capsules"


// If you’re starting from scratch, you can import cURL as raw text for each API call. Or as a last resort, input every endpoint’s URL, method, etc. // // Try importing this cURL command. Go to **Import**, and tab over to **Raw Text**. Paste the following cURL command to generate a Postman request.// // ```// curl --location --request GET "https://postman-echo.com/get"// ```
@name("Start from scratch")
GET "https://postman-echo.com/get"



