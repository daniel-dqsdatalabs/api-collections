#!/usr/bin/env dothttp

// You can add JavaScript that executes before or after a request runs. These [pre-request and test scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) are useful for setting and getting variable values. Writing scripts is also good for debugging, like logging output to the console. If you find yourself re-using a lot of scripts, you can add them to entire collections or folders to run along with every request within that collection or folder.// // ### Twitter example// // Look under the **Pre-request Script** tab to see how Twitter authorizes each request for [their v2 API](https://documenter.getpostman.com/view/9956214/T1LMiT5U).// // > This pre-request script retrieves a Bearer token from the client credentials you provide in your environment file.// // The Twitter v2 collection includes a pre-configured environment setting. You will be needing to set up below variables in order to run each request:// // |Name|Description|// |---|---|// |`consumer_key`|Your OAuth consumer key|// |`consumer_secret`|Your OAuth consumer secret|// |`access_token`|Your OAuth access token|// |`token_secret`|Your OAuth access token secret|
@name("Add scripts")
GET "https://api.twitter.com/2/tweets/:id"


// Postman displays some information like views and imports of your documentation collection. There's also [API reporting on Business and Enterprise plans](https://learning.postman.com/docs/designing-and-developing-your-api/view-and-analyze-api-reports/) with insights about API activity within Postman.// // Some publishers will add a custom header to requests in their Postman collection for the purpose of inspecting traffic that comes from the Postman client. This gives them more traceability and insights into how users are interacting with their endpoints from Postman.// // If you don't have a Kloudless account set up, you may not be able to send this example request from [the Kloudless collection](https://documenter.getpostman.com/view/6486750/SzzrXDe3). Under the **Headers** tab, I've added an example of `x-special-header`, as an example of a custom header your server might accept to keep track of inbound traffic coming from the Postman client. Also take notice of the scripts under the **Pre-request Script** tab validating required variables and throwing errors to guide users in the right direction.
@name("Keep track of metrics")
GET "https://api.kloudless.com/v1/accounts/me/storage/folders/root/contents"
"x-special-header": "fromPostman"


// Publishers have developed clever ways to provide feedback to users who are learning their APIs. Some use helpful error messages returned from the server to guide users along their journey. Others rely on Postman log statements or tests to interpret the client request or standard server response and prompt users to update their API call appropriately.// // If you don't have a Yodlee sandbox set up, you may not be able to send this example request from [the Yodlee collection](https://av.developer.yodlee.com/). However, take notice of the scripts under the **Tests** tab validating required variables and outputting feedback to the user in the non-traditional form of error messages displayed through tests.
@name("Helpful error messages")
POST "https://{{url}}/auth/token"
"Api-Version": "1.1"
"loginName": "{{userName}}"
data({
    "clientId": [
        "{{clientId}}"
    ],
    "secret": [
        "{{secret}}"
    ]
})


// Another way you can make each API request more informative is to use the [Postman Visualizer](https://learning.postman.com/docs/sending-requests/visualizer/) to visualize the response or provide more detail about what actions can be taken next by the API consumer. Providing built-in visualizations and responses can guide consumers through the APIâ€™s highlights making it more of a hands-on journey.// // Send this example request from [the MTNA collection](https://documenter.getpostman.com/view/2220438/SzYevv9u), and then check out the **Visualize** tab of the response body. Every API request in the MTNA collection has a visualization that guides you through how to use each individual API.// // ![[visualize covid data](https://postman-web-property-assets.s3.amazonaws.com/blogs/visualize-covid-data.png)](https://postman-web-property-assets.s3.amazonaws.com/blogs/visualize-covid-data.png)
@name("Visualize the API response")
GET "https://covid19.richdataservices.com/rds/api/query/int/jhu_country/select"
? "cols"= "date_stamp,cnt_confirmed,cnt_death,cnt_recovered"
? "where"= "(iso3166_1=US)"
? "format"= "amcharts"
? "limit"= "5000"



