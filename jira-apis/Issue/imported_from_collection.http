#!/usr/bin/env dothttp

# imported from http://localhost:8000/jira-reference.postman_collection.json

@name("Get Change Logs")
GET "https://{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/changelog"
? "startAt"= "0"
? "maxResults"= "100"


@name("Create Issue")
POST "https://{{baseUrl}}/rest/api/3/issue"
basicauth("{{atlassian_email}}", "{{atlassian_token}}")
"Content-Type": "application/json"
? "updateHistory"= "false"
data('{
    "transition": {
        "id": "<string>",
        "looped": "<boolean>"
    },
    "fields": "<object>",
    "update": "<object>",
    "historyMetadata": {
        "type": "<string>",
        "description": "<string>",
        "descriptionKey": "<string>",
        "activityDescription": "<string>",
        "activityDescriptionKey": "<string>",
        "emailDescription": "<string>",
        "emailDescriptionKey": "<string>",
        "actor": {
            "id": "<string>",
            "displayName": "<string>",
            "displayNameKey": "<string>",
            "type": "<string>",
            "avatarUrl": "<string>",
            "url": "<string>"
        },
        "generator": {
            "id": "<string>",
            "displayName": "<string>",
            "displayNameKey": "<string>",
            "type": "<string>",
            "avatarUrl": "<string>",
            "url": "<string>"
        },
        "cause": {
            "id": "<string>",
            "displayName": "<string>",
            "displayNameKey": "<string>",
            "type": "<string>",
            "avatarUrl": "<string>",
            "url": "<string>"
        },
        "extraData": "<object>"
    },
    "properties": [
        {
            "key": "<string>",
            "value": {}
        },
        {
            "key": "<string>",
            "value": {}
        }
    ]
}')


@name("Bulk Create Issue")
POST "{{baseUrl}}/rest/api/3/issue/bulk"
"Content-Type": "application/json"
data('{
    "issueUpdates": [
        {
            "transition": {
                "id": "<string>",
                "looped": "<boolean>"
            },
            "fields": "<object>",
            "update": "<object>",
            "historyMetadata": {
                "type": "<string>",
                "description": "<string>",
                "descriptionKey": "<string>",
                "activityDescription": "<string>",
                "activityDescriptionKey": "<string>",
                "emailDescription": "<string>",
                "emailDescriptionKey": "<string>",
                "actor": {
                    "id": "<string>",
                    "displayName": "<string>",
                    "displayNameKey": "<string>",
                    "type": "<string>",
                    "avatarUrl": "<string>",
                    "url": "<string>"
                },
                "generator": {
                    "id": "<string>",
                    "displayName": "<string>",
                    "displayNameKey": "<string>",
                    "type": "<string>",
                    "avatarUrl": "<string>",
                    "url": "<string>"
                },
                "cause": {
                    "id": "<string>",
                    "displayName": "<string>",
                    "displayNameKey": "<string>",
                    "type": "<string>",
                    "avatarUrl": "<string>",
                    "url": "<string>"
                },
                "extraData": "<object>"
            },
            "properties": [
                {
                    "key": "<string>",
                    "value": {}
                },
                {
                    "key": "<string>",
                    "value": {}
                }
            ]
        },
        {
            "transition": {
                "id": "<string>",
                "looped": "<boolean>"
            },
            "fields": "<object>",
            "update": "<object>",
            "historyMetadata": {
                "type": "<string>",
                "description": "<string>",
                "descriptionKey": "<string>",
                "activityDescription": "<string>",
                "activityDescriptionKey": "<string>",
                "emailDescription": "<string>",
                "emailDescriptionKey": "<string>",
                "actor": {
                    "id": "<string>",
                    "displayName": "<string>",
                    "displayNameKey": "<string>",
                    "type": "<string>",
                    "avatarUrl": "<string>",
                    "url": "<string>"
                },
                "generator": {
                    "id": "<string>",
                    "displayName": "<string>",
                    "displayNameKey": "<string>",
                    "type": "<string>",
                    "avatarUrl": "<string>",
                    "url": "<string>"
                },
                "cause": {
                    "id": "<string>",
                    "displayName": "<string>",
                    "displayNameKey": "<string>",
                    "type": "<string>",
                    "avatarUrl": "<string>",
                    "url": "<string>"
                },
                "extraData": "<object>"
            },
            "properties": [
                {
                    "key": "<string>",
                    "value": {}
                },
                {
                    "key": "<string>",
                    "value": {}
                }
            ]
        }
    ]
}')


@name("Get Create Issue Metadata")
GET "https://{{baseUrl}}/rest/api/3/issue/createmeta"
? "projectIds"= "<string>"
? "projectKeys"= "<string>"
? "issuetypeIds"= "<string>"
? "issuetypeNames"= "<string>"
? "expand"= "<string>"


@name("Get Issue Picker Suggestions")
GET "https://{{baseUrl}}/rest/api/3/issue/picker"
? "query"= "<string>"
? "currentJQL"= "<string>"
? "currentIssueKey"= "<string>"
? "currentProjectId"= "<string>"
? "showSubTasks"= "<boolean>"
? "showSubTaskParent"= "<boolean>"


@name("Get Issue")
GET "https://{{baseUrl}}/rest/api/3/issue/:issueIdOrKey"
basicauth("{{atlassian_email}}", "{{atlassian_token}}")
? "fields"= "*all"
? "fieldsByKeys"= "false"
? "expand"= "<string>"
? "properties"= "null"
? "updateHistory"= "false"


@name("Edit Issue")
PUT "https://{{baseUrl}}/rest/api/3/issue/:issueIdOrKey"
"Content-Type": "application/json"
? "notifyUsers"= "true"
? "overrideScreenSecurity"= "false"
? "overrideEditableFlag"= "false"
data('{
    "transition": {
        "id": "<string>",
        "looped": "<boolean>"
    },
    "fields": "<object>",
    "update": "<object>",
    "historyMetadata": {
        "type": "<string>",
        "description": "<string>",
        "descriptionKey": "<string>",
        "activityDescription": "<string>",
        "activityDescriptionKey": "<string>",
        "emailDescription": "<string>",
        "emailDescriptionKey": "<string>",
        "actor": {
            "id": "<string>",
            "displayName": "<string>",
            "displayNameKey": "<string>",
            "type": "<string>",
            "avatarUrl": "<string>",
            "url": "<string>"
        },
        "generator": {
            "id": "<string>",
            "displayName": "<string>",
            "displayNameKey": "<string>",
            "type": "<string>",
            "avatarUrl": "<string>",
            "url": "<string>"
        },
        "cause": {
            "id": "<string>",
            "displayName": "<string>",
            "displayNameKey": "<string>",
            "type": "<string>",
            "avatarUrl": "<string>",
            "url": "<string>"
        },
        "extraData": "<object>"
    },
    "properties": [
        {
            "key": "<string>",
            "value": {}
        },
        {
            "key": "<string>",
            "value": {}
        }
    ]
}')


@name("Delete Issue")
DELETE "https://{{baseUrl}}/rest/api/3/issue/:issueIdOrKey"
? "deleteSubtasks"= "false"


@name("Assign Issue")
PUT "https://{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/assignee"
"Content-Type": "application/json"
data('{
    "key": "<string>",
    "accountId": "<string>",
    "name": "<string>"
}')


@name("Add Attachment")
POST "https://{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/attachments"
"Content-Type": "multipart/form-data"
files(
	("0", "<"),
	("1", "b"),
	("2", "i"),
	("3", "n"),
	("4", "a"),
	("5", "r"),
	("6", "y"),
	("7", ">")
)


@name("Get Edit Issue Metadata")
GET "https://{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/editmeta"
? "overrideScreenSecurity"= "false"
? "overrideEditableFlag"= "false"


@name("Send Notification For Issue")
POST "https://{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/notify"
"Content-Type": "application/json"
data('{
    "subject": "<string>",
    "textBody": "<string>",
    "htmlBody": "<string>",
    "to": {
        "reporter": "<boolean>",
        "assignee": "<boolean>",
        "watchers": "<boolean>",
        "voters": "<boolean>",
        "users": [
            {
                "self": "dolor dolore",
                "name": "quis officia et ullamco",
                "key": "pariatur",
                "accountId": "s",
                "emailAddress": "commodo reprehenderit dolore nisi officia",
                "avatarUrls": {
                    "16x16": {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    "24x24": {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    "32x32": {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    "48x48": {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                },
                "displayName": "veniam dolor id Excepteur",
                "active": false,
                "timeZone": "dolor cillum amet",
                "accountType": "sint ut"
            },
            {
                "self": "nostrud cillum labore",
                "name": "minim dolor Duis",
                "key": "ad aliquip deserunt Excepteur cupidatat",
                "accountId": "qu",
                "emailAddress": "ipsum nisi",
                "avatarUrls": {
                    "16x16": {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    "24x24": {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    "32x32": {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    },
                    "48x48": {
                        "value": "<Error: Too many levels of nesting to fake this schema>"
                    }
                },
                "displayName": "nostrud dolore",
                "active": true,
                "timeZone": "proident",
                "accountType": "veniam occaecat ex aliqua"
            }
        ],
        "groups": [
            {
                "name": "<string>"
            },
            {
                "name": "<string>"
            }
        ]
    },
    "restrict": {
        "groups": [
            {
                "name": "<string>"
            },
            {
                "name": "<string>"
            }
        ],
        "permissions": [
            {
                "id": "<string>",
                "key": "<string>"
            },
            {
                "id": "<string>",
                "key": "<string>"
            }
        ]
    }
}')



