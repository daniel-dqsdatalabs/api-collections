#!/usr/bin/env dothttp

// [properties/add](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-properties-add)
// 
// scope: `files.metadata.write`
// 
// Add property groups to a Dropbox file. See `templates/add_for_user` or `templates/add_for_team` to create new templates.

@name("properties/add")
POST "https://api.dropboxapi.com/2/file_properties/properties/add"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "path": "/my_awesome/word.docx",
    "property_groups": [
        {
            "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
            "fields": [
                {
                    "name": "Security Policy",
                    "value": "Confidential"
                }
            ]
        }
    ]
})


// [properties/overwrite](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-properties-overwrite)
// 
// scope: `files.metadata.write`
// 
// Overwrite property groups associated with a file. This endpoint should be used instead of `properties/update` when property groups are being updated via a "snapshot" instead of via a "delta". In other words, this endpoint will delete all omitted fields from a property group, whereas `properties/update` will only delete fields that are explicitly marked for deletion.

@name("properties/overwrite")
POST "https://api.dropboxapi.com/2/file_properties/properties/overwrite"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "path": "/my_awesome/word.docx",
    "property_groups": [
        {
            "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
            "fields": [
                {
                    "name": "Security Policy",
                    "value": "Confidential"
                }
            ]
        }
    ]
})


// [properties/remove](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-properties-remove)
// 
// scope: `files.metadata.write`
// 
// Permanently removes the specified property group from the file. To remove specific property field key value pairs, see `properties/update`. To update a template, see `templates/update_for_user` or `templates/update_for_team`. To remove a template, see `templates/remove_for_user` or `templates/remove_for_team`.

@name("properties/remove")
POST "https://api.dropboxapi.com/2/file_properties/properties/remove"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "path": "/my_awesome/word.docx",
    "property_template_ids": [
        "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
    ]
})


// [properties/search](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-properties-search)
// 
// scope: `files.metadata.read`
// 
// Search across property templates for particular property field values.

@name("properties/search")
POST "https://api.dropboxapi.com/2/file_properties/properties/search"
"Content-Type": "application/json"
"Authorization": " Bearer IU571Pc9cGAAAAAAAAAAAQh57r-VTd7qBjZBUsVHLR6NRVTcd0FOThotVQmF9q9F"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "queries": [
        {
            "query": "Compliance Bot - Beta",
            "mode": {
                ".tag": "field_name",
                "field_name": "Security"
            },
            "logical_operator": "or_operator"
        }
    ],
    "template_filter": "filter_none"
})


// [properties/search/continue](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-properties-search-continue)
// 
// scope: `files.metadata.read`
// 
// Once a cursor has been retrieved from `properties/search`, use this to paginate through all search results.

@name("properties/search/continue")
POST "https://api.dropboxapi.com/2/file_properties/properties/search/continue"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
})


// [properties/update](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-properties-update)
// 
// scope: `files.metadata.write`
// 
// Add, update or remove properties associated with the supplied file and templates. This endpoint should be used instead of `properties/overwrite` when property groups are being updated via a "delta" instead of via a "snapshot" . In other words, this endpoint will not delete any omitted fields from a property group, whereas `properties/overwrite` will delete any fields that are omitted from a property group.

@name("properties/update")
POST "https://api.dropboxapi.com/2/file_properties/properties/update"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "path": "/my_awesome/word.docx",
    "update_property_groups": [
        {
            "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
            "add_or_update_fields": [
                {
                    "name": "Security Policy",
                    "value": "Confidential"
                }
            ],
            "remove_fields": []
        }
    ]
})


// [templates/add_for_team](https://www.dropbox.com/developers/documentation/http/teams#file_properties-templates-add_for_team)
// 
// scope: `files.team_metadata.write`
// 
// Add a template associated with a team. See `properties/add` to add properties to a file or folder.
// Note: this endpoint will create team-owned templates.

@name("templates/add_for_team")
POST "https://api.dropboxapi.com/2/file_properties/templates/add_for_team"
"Content-Type": "application/json"
json({
    "name": "Security",
    "description": "These properties describe how confidential this file or folder is.",
    "fields": [
        {
            "name": "Security Policy",
            "description": "This is the security policy of the file or folder described.
Policies can be Confidential, Public or Internal.",
            "type": "string"
        }
    ]
})


// [templates/add_for_user](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-templates-add_for_user)
// 
// scope: `files.metadata.write`
// 
// Add a template associated with a user. See `properties/add` to add properties to a file. This endpoint can't be called on a team member or admin's behalf.

@name("templates/add_for_user")
POST "https://api.dropboxapi.com/2/file_properties/templates/add_for_user"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "name": "Security",
    "description": "These properties describe how confidential this file or folder is.",
    "fields": [
        {
            "name": "Security Policy",
            "description": "This is the security policy of the file or folder described.
Policies can be Confidential, Public or Internal.",
            "type": "string"
        }
    ]
})


// [templates/get_for_team](https://www.dropbox.com/developers/documentation/http/teams#file_properties-templates-get_for_team)
// 
// scope: `files.team_metadata.write`
// 
// Get the schema for a specified template.

@name("templates/get_for_team")
POST "https://api.dropboxapi.com/2/file_properties/templates/get_for_team"
"Content-Type": "application/json"
json({
    "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
})


// [templates/get_for_user](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-templates-get_for_user)
// 
// scope: `files.metadata.read`
// 
// Get the schema for a specified template. This endpoint can't be called on a team member or admin's behalf.

@name("templates/get_for_user")
POST "https://api.dropboxapi.com/2/file_properties/templates/get_for_user"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
})


// [templates/list_for_team](https://www.dropbox.com/developers/documentation/http/teams#file_properties-templates-list_for_team)
// 
// scope: `files.team_metadata.write`
// 
// Get the template identifiers for a team. To get the schema of each template use `templates/get_for_team`.

@name("templates/list_for_team")
POST "https://api.dropboxapi.com/2/file_properties/templates/list_for_team"


// [templates/list_for_user](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-templates-list_for_user)
// 
// scope: `files.metadata.read`
// 
// Get the template identifiers for a team. To get the schema of each template use `templates/get_for_user`. This endpoint can't be called on a team member or admin's behalf.

@name("templates/list_for_user")
POST "https://api.dropboxapi.com/2/file_properties/templates/list_for_user"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"


// [templates/remove_for_team](https://www.dropbox.com/developers/documentation/http/teams#file_properties-templates-remove_for_team)
// 
// scope: `files.team_metadata.write`
// 
// Permanently removes the specified template created from `templates/add_for_user`. All properties associated with the template will also be removed. This action cannot be undone.

@name("templates/remove_for_team")
POST "https://api.dropboxapi.com/2/file_properties/templates/remove_for_team"
"Content-Type": "application/json"
json({
    "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
})


// [templates/remove_for_user](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-templates-remove_for_user)
// 
// scope: `files.metadata.write`
// 
// Permanently removes the specified template created from `templates/add_for_user`. All properties associated with the template will also be removed. This action cannot be undone.

@name("templates/remove_for_user")
POST "https://api.dropboxapi.com/2/file_properties/templates/remove_for_user"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
})


// [templates/update_for_team](https://www.dropbox.com/developers/documentation/http/teams#file_properties-templates-update_for_team)
// 
// scope: `files.team_metadata.write`
// 
// Update a template associated with a team. This route can update the template name, the template description and add optional properties to templates.

@name("templates/update_for_team")
POST "https://api.dropboxapi.com/2/file_properties/templates/update_for_team"
"Content-Type": "application/json"
json({
    "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
    "name": "New Security Template Name",
    "description": "These properties will describe how confidential this file or folder is.",
    "add_fields": [
        {
            "name": "Security Policy",
            "description": "This is the security policy of the file or folder described.
Policies can be Confidential, Public or Internal.",
            "type": "string"
        }
    ]
})


// [templates/update_for_user](https://www.dropbox.com/developers/documentation/http/documentation#file_properties-templates-update_for_user)
// 
// scope: `files.metadata.write`
// 
// Update a template associated with a user. This route can update the template name, the template description and add optional properties to templates. This endpoint can't be called on a team member or admin's behalf.

@name("templates/update_for_user")
POST "https://api.dropboxapi.com/2/file_properties/templates/update_for_user"
"Content-Type": "application/json"
"Dropbox-API-Path-Root": "{".tag": "namespace_id", "namespace_id": "2"}"
"Dropbox-API-Select-User": "dbmid:FDFSVF-DFSDF"
json({
    "template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
    "name": "New Security Template Name",
    "description": "These properties will describe how confidential this file or folder is.",
    "add_fields": [
        {
            "name": "Security Policy",
            "description": "This is the security policy of the file or folder described.
Policies can be Confidential, Public or Internal.",
            "type": "string"
        }
    ]
})



