#!/usr/bin/env dothttp

// https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/assetSimpleQuery.htm// // Get all assets.
@name("Simple Query - All Assets")
GET "https://{{et_subdomain}}.rest.marketingcloudapis.com/asset/v1/content/assets"


// https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm// // Gets an asset by ID.
@name("Simple Query - By ID")
GET "https://{{et_subdomain}}.rest.marketingcloudapis.com/asset/v1/content/assets/{{assetId}}"


// https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/assetSimpleQuery.htm// // Gets an asset collection by simple $filter parameters.
@name("Simple Query - With Filter")
GET "https://{{et_subdomain}}.rest.marketingcloudapis.com/asset/v1/content/assets"
? "$page"= "1"
? "$pagesize"= "10"
? "$orderBy"= "name asc"
? "$filter"= "assetType.name=png"
? "$fields"= "id,customerKey,fileProperties"


// https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm// // Gets the binary file for an asset
@name("Simple Query - Binary File")
GET "https://{{et_subdomain}}.rest.marketingcloudapis.com/asset/v1/content/assets/{{assetId}}/file"


// https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm// // Gets the default header and footer for an account.
@name("Simple Query - Salutations")
GET "https://{{et_subdomain}}.rest.marketingcloudapis.com/asset/v1/content/assets/salutations"


// https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm// // Gets the header and footer for an email.
@name("Simple Query - Salutations - By ID")
GET "https://{{et_subdomain}}.rest.marketingcloudapis.com/asset/v1/content/assets/{{emailId}}/salutations"


// https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/assetAdvancedQuery.htm// // A complex query is comprised of two or more simple queries joined with an AND or OR logical comparison operator. The simple queries are contained in a leftOperand JSON field and rightOperand JSON field. A third field, the logicalOperator, is used to compare the two operands. You can also embed queries inside other queries.
@name("Advanced Query")
POST "https://{{et_subdomain}}.rest.marketingcloudapis.com/asset/v1/content/assets/query"
json({
    "page": {
        "page": 1,
        "pageSize": 50
    },
    "query": {
        "leftOperand": {
            "property": "createdDate",
            "simpleOperator": "greaterThan",
            "value": "2019-07-18T13:35:27.327-06:00"
        },
        "logicalOperator": "AND",
        "rightOperand": {
            "property": "assetType.name",
            "simpleOperator": "equal",
            "value": "png"
        }
    },
    "sort": [
        {
            "property": "id",
            "direction": "ASC"
        }
    ],
    "fields": [
        "enterpriseId",
        "memberId",
        "thumbnail",
        "category",
        "content",
        "data"
    ]
})



