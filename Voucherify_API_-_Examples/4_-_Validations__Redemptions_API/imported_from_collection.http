#!/usr/bin/env dothttp

// Create discount voucher without code

@name("Create BusValRule for Order Amount > 999")
POST "https://{{url}}/validation-rules"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"
json({
    "name": "postman: Order Amount greater than 9.99$",
    "rules": {
        "1": {
            "name": "order.amount",
            "conditions": {
                "$more_than": [
                    999
                ]
            }
        },
        "logic": "1"
    }
})


// Create discount voucher without code

@name('Create "double" valid voucher')
POST "https://{{url}}/vouchers"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"
json({
    "type": "DISCOUNT_VOUCHER",
    "discount": {
        "percent_off": "10.0",
        "type": "PERCENT"
    },
    "redemption": {
        "quantity": "2"
    },
    "category": "postman",
    "validation_rules": [
        "{{validation-rule-id}}"
    ]
})


@name("Validate")
POST "https://{{url}}/vouchers/{{voucher-code}}/validate"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"
json({
    "order": {
        "amount": 1000000,
        "items": [
            {
                "quantity": 20,
                "amount": 10000,
                "source_id": "internal_crm_id_1498629107",
                "related_object": "product",
                "price": 230
            },
            {
                "quantity": 20,
                "amount": 10000,
                "source_id": "internal_crm_id_1498632066",
                "related_object": "product",
                "price": 9000
            }
        ]
    }
})


@name("Redeem")
POST "https://{{url}}/vouchers/{{voucher-code}}/redemption"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"
json({
    "customer": {
        "source_id": "tom+test@sikora.im",
        "metadata": {
            "a": 2
        }
    },
    "order": {
        "amount": 10000,
        "items": [
            {
                "quantity": 1,
                "amount": 10000
            }
        ]
    }
})


@name("--- delay ---")
GET "https://{{delayUrl}}/"



@name("Get order by ID")
GET "https://{{url}}/orders/{{order-id}}"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"



@name("Redeem - client side")
POST "https://{{clientUrl}}/redeem"
"X-Client-Application-Id": "{{X-Client-Application-Id}}"
"X-Client-Token": "{{X-Client-Token}}"
"Content-Type": "application/json"
"Origin": "origin"
? "code"= "{{voucher-code}}"
json({
    "customer": {
        "source_id": "{{test-customer-email}}",
        "email": "{{test-customer-email}}"
    },
    "order": {
        "amount": 10000
    }
})


@name("--- delay ---")
GET "https://{{delayUrl}}/"



@name("Get redemption by id")
GET "https://{{url}}/redemptions/{{redemption-id}}"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"



@name("Validate - quantity exceeded")
POST "https://{{url}}/vouchers/{{voucher-code}}/validate"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"
json({
    "order": {
        "amount": 10000
    }
})


// Should fail because the redemption limit is set to 2

@name("Third redeem")
POST "https://{{url}}/vouchers/{{voucher-code}}/redemption"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"
json({
    "order": {
        "source_id": "{{test-order-source-id}}",
        "amount": 10000
    }
})


@name("--- delay ---")
GET "https://{{delayUrl}}/"



@name("Get order by ID - expected CREATED status")
GET "https://{{url}}/orders/{{test-order-source-id}}"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"



@name("Get voucher  redemptions")
GET "https://{{url}}/vouchers/{{voucher-code}}/redemption"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"



@name("List success redemptions for customer")
GET "https://{{url}}/redemptions"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"
"X-Voucherify-API-Version": "v2017-04-20"
? "customer"= "{{customer-id}}"
? "result"= "SUCCESS"
? "page"= "1"
? "[created_at][after]"= "2017"
? "campaign"= "Test - 5"



@name("Validate - client side")
GET "https://{{clientUrl}}/validate"
"X-Client-Application-Id": "{{X-Client-Application-Id}}"
"X-Client-Token": "{{X-Client-Token}}"
"Content-Type": "application/json"
"Origin": "http://voucherify-swift"
? "code"= "{{voucher-code}}"
? "amount"= "1000"



@name("Delete voucher")
DELETE "https://{{url}}/vouchers/{{voucher-code}}"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"



@name("Delete validation rule")
DELETE "https://{{url}}/validation-rules/{{validation-rule-id}}"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"



@name("Delete customer")
DELETE "https://{{url}}/customers/{{customer-id}}"
"X-App-Id": "{{X-App-Id}}"
"X-App-Token": "{{X-App-Token}}"
"Content-Type": "application/json"
json({
    "name": "Jan Kowalski",
    "email": "jan{{$timestamp}}@kowalski.pl"
})



