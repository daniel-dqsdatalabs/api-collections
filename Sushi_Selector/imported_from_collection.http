#!/usr/bin/env dothttp

// The Google Maps Geocoding API is a service that provides geocoding and reverse geocoding of addresses.
// 
// Geocoding is the process of converting addresses (like a street address) into geographic coordinates (like latitude and longitude), which you can use to place markers on a map, or position the map.
// 
// Read more about the [Google Maps Geocoding API](https://developers.google.com/maps/documentation/geocoding/start).
// 
// **Get your Google Maps Geocoding API key [here](https://developers.google.com/maps/documentation/geocoding/start#get-a-key)**:
// 
// ![[Geocoding key](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-geocoding-key.png)](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-geocoding-key.png)

@name("Geocoding")
GET "https://maps.googleapis.com/maps/api/geocode/json"
? "key"= "{{googleMapsGeocodingApiKey}}"
? "address"= "{{address}}"



// The **Google Places API Web Service** allows you to query for place information on a variety of categories, such as: establishments, prominent points of interest, geographic locations, and more. You can search for places either by proximity or a text string. 
// 
// A Place Search returns a list of places along with summary information about each place.
// 
// Read more documentation about [the Google Places API](https://developers.google.com/places/web-service/search).
// 
// **Get your Google Places API key [here](https://developers.google.com/places/web-service/get-api-key):**
// 
// ![[Places key](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-places-key.png)](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-places-key.png)

@name("Place Search")
GET "https://maps.googleapis.com/maps/api/place/nearbysearch/json"
? "key"= "{{googlePlacesApiKey}}"
? "location"= "{{lat}},{{lng}}"
? "radius"= "500"
? "type"= "restaurant"
? "keyword"= "sushi"



// Retrieve your Twitter Owner ID using the Twitter API to get users. Make sure your Twitter handle is entered as an environment variable for `myTwitterHandle`. 
// 
// Authorization to make this request to the Twitter API should look something like this under the **Authorization** tab in Postman:
// 
// ![[oauth in postman](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/twitterAuthPostman.png)](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/twitterAuthPostman.png)
// 
// Read more about the [Twitter API](https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-show).
// 
// **Set up Twitter Oauth 1.0 in Postman:**
// 
// Create an application in Twitter.
// 
// ![[twitter oauth part 1](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-twitter-oauth1.png)](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-twitter-oauth1.png)
// 
// Generate an access token. You will need these credentials for the next step.
// 
// ![[twitter credentials on web](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-twitter-creds-web.png)](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-twitter-creds-web.png)
// 
// Enter these values into the [environment](https://www.getpostman.com/docs/v6/postman/environments_and_globals/manage_environments). **Important**: make sure there are no trailing spaces when you paste your credentials. 
// 
// ![[twitter credentials in Postman](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-twitter-credentials.png)](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/sushi-twitter-credentials.png)
// 
// If you look under the Authorization tabs for the two Twitter API requests, you can see that we've selected OAuth 1.0 as our means of authorization, and we are inputting our environment variables using the double curly braces syntax {{variable}}.
// 
// ![[oauth in postman](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/twitterAuthPostman.png)](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/twitterAuthPostman.png)

@name("Get Twitter Owner ID")
GET "https://api.twitter.com/1.1/users/show.json"
? "screen_name"= "{{myTwitterHandle}}"



// To send a new Direct Message use POST direct_messages/events/new (message_create). 
// 
// Authorization to make this request to the Twitter API should look something like this under the **Authorization** tab in Postman:
// 
// ![[oauth in postman](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/twitterAuthPostman.png)](https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/twitterAuthPostman.png)
// 
// In this example, we're sending a Direct Message to ourselves, but we could also send it to our followers as a tweet using a different endpoint. Keep in mind this API is rate-limited if you're doing a lot of testing during development.
// 
// Read more about the [Twitter API](https://developer.twitter.com/en/docs/direct-messages/sending-and-receiving/overview).
// 
// See the [previous request]() to set up Twitter Oauth 1.0 in Postman.

@name("Direct message to Twitter")
POST "https://api.twitter.com/1.1/direct_messages/events/new.json"
"Content-Type": "application/json"
json({
    "event": {
        "type": "message_create",
        "message_create": {
            "target": {
                "recipient_id": "{{myTwitterId}}"
            },
            "message_data": {
                "text": "{{recommendation}}"
            }
        }
    }
})



