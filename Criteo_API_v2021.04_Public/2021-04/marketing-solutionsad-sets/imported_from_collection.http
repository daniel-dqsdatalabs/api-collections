#!/usr/bin/env dothttp

// Patch a list of AdSets.

@name("Patch Ad Sets")
PATCH "https://{{baseUrl}}/2021-04/marketing-solutions/ad-sets"
"Content-Type": "application/json"
json({
    "data": [
        {
            "id": "et labore sint",
            "type": "PatchAdSet",
            "attributes": {
                "name": "in in",
                "scheduling": {
                    "startDate": {
                        "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    },
                    "endDate": {
                        "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    }
                },
                "bidding": {
                    "bidAmount": {
                        "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    }
                },
                "targeting": {
                    "deliveryLimitations": {
                        "environments": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "devices": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "operatingSystems": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    },
                    "geoLocation": {
                        "countries": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "subdivisions": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "zipCodes": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    },
                    "frequencyCapping": {
                        "frequency": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "maximumImpressions": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    }
                },
                "budget": {
                    "budgetStrategy": "uncapped",
                    "budgetRenewal": "monthly",
                    "budgetDeliverySmoothing": "standard",
                    "budgetDeliveryWeek": "sundayToSaturday",
                    "budgetAmount": {
                        "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    }
                }
            }
        },
        {
            "id": "in",
            "type": "PatchAdSet",
            "attributes": {
                "name": "laboris in amet",
                "scheduling": {
                    "startDate": {
                        "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    },
                    "endDate": {
                        "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    }
                },
                "bidding": {
                    "bidAmount": {
                        "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    }
                },
                "targeting": {
                    "deliveryLimitations": {
                        "environments": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "devices": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "operatingSystems": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    },
                    "geoLocation": {
                        "countries": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "subdivisions": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "zipCodes": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    },
                    "frequencyCapping": {
                        "frequency": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "maximumImpressions": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    }
                },
                "budget": {
                    "budgetStrategy": "uncapped",
                    "budgetRenewal": "undefined",
                    "budgetDeliverySmoothing": "standard",
                    "budgetDeliveryWeek": "sundayToSaturday",
                    "budgetAmount": {
                        "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                    }
                }
            }
        }
    ]
})


// Get the data for the specified ad set

@name("Get Ad Set")
GET "https://{{baseUrl}}/2021-04/marketing-solutions/ad-sets/:adSetId"


// Search for ad sets

@name("Search Ad Sets")
POST "https://{{baseUrl}}/2021-04/marketing-solutions/ad-sets/search"
"Content-Type": "application/json"
json({
    "filters": {
        "adSetIds": [
            "eiusmod aliqua exercitation",
            "eu Ut Excepteur ex"
        ],
        "advertiserIds": [
            "mollit do",
            "dolore tempor consequat"
        ],
        "campaignIds": [
            "cupidatat veniam ",
            "ut dolore ullamco"
        ]
    }
})


// Start the specified list of ad sets

@name("Start Ad Sets")
POST "https://{{baseUrl}}/2021-04/marketing-solutions/ad-sets/start"
"Content-Type": "application/json"
json({
    "data": [
        {
            "id": "consequat cupidatat nisi",
            "type": "AdSetId"
        },
        {
            "id": "quis commodo in",
            "type": "AdSetId"
        }
    ]
})


// Stop the specified list of ad sets

@name("Stop Ad Sets")
POST "https://{{baseUrl}}/2021-04/marketing-solutions/ad-sets/stop"
"Content-Type": "application/json"
json({
    "data": [
        {
            "id": "dolor reprehenderit",
            "type": "AdSetId"
        },
        {
            "id": "fugiat elit incididunt",
            "type": "AdSetId"
        }
    ]
})



