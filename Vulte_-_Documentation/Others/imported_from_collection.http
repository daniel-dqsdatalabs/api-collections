#!/usr/bin/env dothttp

// List branches of Polaris Bank

@name("List Branches")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
data('{
    "request_ref": "{{request-ref}}",
    "request_type": "list_branches",
    "auth": {
        "type": null,
        "secure": null,
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "234802343132",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": null
    }
}')


// With this service, the calling apps can get list of financial institutions with their corresponding codes.

@name("Get Banks")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
data('{
    "request_ref": "{{request-ref}}",
    "request_type": "get_banks",
    "auth": {
        "type": null,
        "secure": null,
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "234802343132",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": null
    }
}')


// With this service, the calling apps can open Polaris accounts on behalf of their customers.

@name("Open Account")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": "{{signature}}"
data('{
    "request_ref": "{{request-ref}}",
    "request_type": "open_account",
    "auth": {
        "type": "bvn",
        "secure": "R83dCymHAdz6WcD2dUPnAdZ6Vpp6Qyxv",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "2348033000989",
            "firstname": "John",
            "surname": "Doe",
            "email": "john@doe.com",
            "mobile_no": "2348033000989"
        },
        "meta": {},
        "details": {
            "name_on_account": "John J. Doe",
            "middlename": "Jane",
            "dob": "2005-05-13",
            "gender": "M",
            "title": "Mr",
            "address_line_1": "23, Okon street, Ikeja",
            "address_line_2": "Ikeja",
            "city": "Mushin",
            "state": "Lagos State",
            "country": "Nigeria"
        }
    }
}')


// With this service, the calling apps can open Polaris accounts on behalf of their customers.

@name("Open Account(Virtual)")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": "{{signature}}"
data('{
    "request_ref": "{{request-ref}}",
    "request_type": "open_account",
    "auth": {
        "type": null,
        "secure": null,
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 1000,
        "customer": {
            "customer_ref": "2348033000989",
            "firstname": "John",
            "surname": "Doe",
            "email": "john@doe.com",
            "mobile_no": "2348033000989"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": {
            "name_on_account": "John J. Doe",
            "middlename": "Jane",
            "dob": "2005-05-13",
            "gender": "M",
            "title": "Mr",
            "address_line_1": "23, Okon street, Ikeja",
            "address_line_2": "Ikeja",
            "city": "Mushin",
            "state": "Lagos State",
            "country": "Nigeria"
        }
    }
}')


// With this service, the calling apps can open Polaris wallets on behalf of their customers
// 
// * `auth.secure` should be the customer's BVN number
// * `transaction.meta.account_currency` can either be `USD` or `NGN`. It defaults to `NGN` is none is passed

@name("Open Wallet")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": "{{signature}}"
data('{
    "request_ref": "{{request-ref}}",
    "request_type": "open_wallet",
    "auth": {
        "type": "bvn",
        "secure": "R83dCymHAdz6WcD2dUPnAdZ6Vpp6Qyxv",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "2348033000989",
            "firstname": "John",
            "surname": "Doe",
            "email": "john@doe.com",
            "mobile_no": "2348033000989"
        },
        "meta": {
            "account_currency": "USD" // USD/NGN
        },
        "details": {
            "name_on_account": "John J. Doe",
            "middlename": "Jane",
            "dob": "2005-05-13",
            "gender": "M",
            "title": "Mr",
            "address_line_1": "23, Okon street, Ikeja",
            "address_line_2": "Ikeja",
            "city": "Mushin",
            "state": "Lagos State",
            "country": "Nigeria"
        }
    }
}')


// ## A use case
// 
// Notifications are useful for a new wave of payment approaches that businesses are starting to explore:
// 
// 1. Open an account and map it to a customer or specific transaction
// 2. Ask customers to transfer to that account
// 3. Get notified once a credit or debit hits that account
// 4. Process the service that the customer was supposed to pay for
// 5. Monies are "swept" from that account into yours after a while.
// 
// 
// With this, you'd expose a webhook url, that will receive a `POST` message upon a credit or debit activity on an account that you have access to. 
// 
// First, you have to setup your webhook url on the App console.
// 
// 
// Upon receiving the message, please respond with a `200 - OK`.
// 
// #### Request body elements
// Here is the explanation of the fields you would receive.
// 
// 
// | Element | Description |
// |-|-|
// | request_ref | A unique reference for this specific API call. It would have been uniquely generated by OnePipe for every single call |
// | request_type | In this case it would be set to '`transaction_notification`'. |
// | requester | This would be set to `{{Simple Payments}}` if coming from the Simple Payments product. And set to `{{GRB}}` if coming from the Grassroots Banking product. |
// | mock_mode | Here, you will receive `Live` for live transactions and `Inspect` for test transactions. |
// | details.amount | Amount in kobo |
// | details.transaction_type | This will come to you as `collect` since you are receiving an inflow. |
// | details.provider | This will contain `{{Provider Name}}` that was used to process the payment. |
// | details.transaction_ref | A unique reference for this specific transaction. |
// | details.customer_ref | A unique reference with which you identify this customer on your systems. |
// | details.customer_firstname | First name of the customer |
// | details.customer_surname | Surname of the customer |
// | details.customer_email | Email address of the customer |
// | details.customer_mobile_no | Mobile number of the customer |
// | data | A JSON object representing some of the details of the payment like invoice number and other miscellanous information. |
// | app_info.app_code | Your application identifier on OnePipe |
// 
// -------------------------------------

@name("Notification (payment completion)")
POST "https://{{host}}/"
"Content-Type": "application/json"
"Signature": " {{MD5Hash(request_ref;app_secret)}}"
data('{
    "request_ref": "{{request_ref}}",
    "request_type": "transaction_notification",
    "requester": "{{\'Simple Payments\' | \'GRB\' | \'Scheduler\'}}",
    "mock_mode": "live",
    "details": {
        "amount": 100000,
        "status": "Successful|Failed",
        "provider": "{{provider}}",
        "customer_ref": "2349870818",
        "customer_email": "roqak0@gmail.com",
        "transaction_ref": "{{transaction_ref}}",
        "customer_surname": "Adigun",
        "transaction_desc": "{{transaction_description}}",
        "transaction_type": "collect",
        "customer_firstname": "Jonah",
        "customer_mobile_no": "2349000870818",
        "data": {{{object containing raw data from the payment source}}}
    },
    "app_info": {
        "app_code": "{{your_app_code}}"
    }
}')



