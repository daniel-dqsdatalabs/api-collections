#!/usr/bin/env dothttp

// With this service, the calling apps can do KYC with the customer's bvn. This service will return maximum KYC information.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).
// 
// #### Possible status values
// * **Successful**: Success
// * **WaitingForOTP**: Requires OTP, use `/v2/transact/validate` as [follow up](#f1bdb553-68dd-4016-aeed-e4c3d1e27fe4) call to complete transaction
// * **[Anything else]**: Error. Read the errors object(s)

@name("Lookup BVN Max")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": "{{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "lookup_bvn_max",
    "auth": {
        "type": "bvn",
        "secure": "{{encrypted_bvn}}",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "234802343132",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": {
            "include_image": true
        }
    }
})


// With this service, the calling apps can do KYC with the customer's bvn. This service will return slightly above minimal KYC information.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).
// 
// #### Possible status values
// * **Successful**: Success
// * **WaitingForOTP**: Requires OTP, use `/v2/transact/validate` as [follow up](#f1bdb553-68dd-4016-aeed-e4c3d1e27fe4) call to complete transaction
// * **[Anything else]**: Error. Read the errors object(s)

@name("Lookup BVN Mid")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "lookup_bvn_mid",
    "auth": {
        "type": "bvn",
        "secure": "{{encrypted_bvn}}",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "234802343132",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": null
    }
})


// With this service, the calling apps can KYC a customer's bank verification number. This service will only return a True/False match of the supplied customer details if it matches what is saved against their BVN correctly.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).
// 
// #### Possible status values
// * **Successful**: Success
// * **WaitingForOTP**: Requires OTP, use `/v2/transact/validate` as [follow up](#f1bdb553-68dd-4016-aeed-e4c3d1e27fe4) call to complete transaction
// * **[Anything else]**: Error. Read the errors object(s)

@name("Lookup BVN Min (Match)")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "lookup_bvn_min",
    "auth": {
        "type": "bvn",
        "secure": "{{encrypted_bvn}}",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "2348099898444",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": {
            "dob": "1990-12-02"
        }
    }
})


// With this service, the calling apps can do KYC with the customer's account number. This service will return maximum KYC information.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).
// 
// #### Possible status values
// * **Successful**: Success
// * **WaitingForOTP**: Requires OTP, use `/v2/transact/validate` as [follow up](#f1bdb553-68dd-4016-aeed-e4c3d1e27fe4) call to complete transaction
// * **[Anything else]**: Error. Read the errors object(s)

@name("Lookup Account Max")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "lookup_account_max",
    "auth": {
        "type": "bank.account",
        "secure": "{{encrypted_account_number}}",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "234802343132",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": null
    }
})


// With this service, the calling apps can do KYC with the customer's account number. This service will return slightly above minimal KYC information.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).
// 
// #### Possible status values
// * **Successful**: Success
// * **WaitingForOTP**: Requires OTP, use `/v2/transact/validate` as [follow up](#f1bdb553-68dd-4016-aeed-e4c3d1e27fe4) call to complete transaction
// * **[Anything else]**: Error. Read the errors object(s)

@name("Lookup Account Mid")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "lookup_account_mid",
    "auth": {
        "type": "bank.account",
        "secure": "{{encrypted_account_number}}",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "234802343132",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "{{customer_id}}",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": {
            "otp_override": true
        }
    }
})


// With this service, the calling apps can KYC a customer's account number. This service will only return minimal KYC information.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).
// 
// #### Possible status values
// * **Successful**: Success
// * **WaitingForOTP**: Requires OTP, use `/v2/transact/validate` as [follow up](#f1bdb553-68dd-4016-aeed-e4c3d1e27fe4) call to complete transaction
// * **[Anything else]**: Error. Read the errors object(s)

@name("Lookup Account Min")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "lookup_account_min",
    "auth": {
        "type": "bank.account",
        "secure": "{{encrypted_account_number}}",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "234802343132",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": null
    }
})


// With this service, the calling apps can take customer ref and return a masked list of accounts linked to it. Apps will collect the customer ref they will like to obtain information on and forward to SureGate.
// 
// 
// The customer ref used here should be the phone number of the customer, and it should be placed in the `transaction.customer.customer_ref` field.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).
// 
// #### Possible status values
// * **Successful**: Success
// * **WaitingForOTP**: Requires OTP, use `/v2/transact/validate` as [follow up](#f1bdb553-68dd-4016-aeed-e4c3d1e27fe4) call to complete transaction
// * **[Anything else]**: Error. Read the errors object(s)

@name("Get Accounts Min")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "get_accounts_min",
    "auth": {
        "type": null,
        "secure": null,
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "{{customer_id}}",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": null
    }
})


// With this service, the calling apps can take customer ref and return an unmasked list of accounts linked to it. Apps will collect the customer ref they will like to obtain information on and forward to SureGate.
// 
// 
// The customer ref used here should be the phone number of the customer, and it should be placed in the `transaction.customer.customer_ref` field.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).
// 
// #### Possible status values
// * **Successful**: Success
// * **WaitingForOTP**: Requires OTP, use `/v2/transact/validate` as [follow up](#f1bdb553-68dd-4016-aeed-e4c3d1e27fe4) call to complete transaction
// * **[Anything else]**: Error. Read the errors object(s)

@name("Get Accounts Mid")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "get_accounts_mid",
    "auth": {
        "type": null,
        "secure": null,
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "{{customer_id}}",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": null
    }
})


// With this service, the calling apps can check corresponding banks matched to a customer's account number. In effect, take an account number and try to determine which bank it’s from.
// 
// 
// **NOTE**: Please see information on how to compute the `Signature` header [here](#authentication-headers).
// 
// For information on how to encrypt `auth.secure` value, see [here](#encryption-of-secure-element).

@name("Lookup NUBAN")
POST "https://{{url}}/v2/transact"
"Content-Type": "application/json"
"Authorization": "Bearer {{api-key}}"
"Signature": " {{signature}}"
json({
    "request_ref": "{{request-ref}}",
    "request_type": "lookup_nuban",
    "auth": {
        "type": "bank.account",
        "secure": "{{encrypted_account_number}}",
        "auth_provider": "Polaris",
        "route_mode": null
    },
    "transaction": {
        "mock_mode": "Live",
        "transaction_ref": "{{transaction-ref}}",
        "transaction_desc": "A random transaction",
        "transaction_ref_parent": null,
        "amount": 0,
        "customer": {
            "customer_ref": "234802343132",
            "firstname": "Uju",
            "surname": "Usmanu",
            "email": "ujuusmanu@gmail.com",
            "mobile_no": "234802343132"
        },
        "meta": {
            "a_key": "a_meta_value_1",
            "b_key": "a_meta_value_2"
        },
        "details": null
    }
})



