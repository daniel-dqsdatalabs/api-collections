#!/usr/bin/env dothttp

// This API is used to fetch the details of the post by means of post ID{postid} and post type.
// 
// Post ID{postid} and post type are passed as part of the header request to retrieve the post details.
// 
// Post type can be one of the following: finance_question, product_suggestion or saving_tips.
// 
// 
// Following is the list of attributes returned in response of this request:
// 
// 
// 
// | Field 	| Data type 	| Description 	|
// |------------------------	|-----------	|---------------------------------------------------------------------------	|
// | type 	| String 	| This field is static and is set to posts 	|
// | id 	| String 	| This field denotes the unique identifier of post 	|
// | reported_by_user 	| String 	| This field denotes the user who has reported the post. 	|
// | reported_at 	| String 	| This field denoted the reported date time of the post. 	|
// | unresolved_flags_count 	| String 	| This field denoted the count of unresolved flags against the post if any. 	|
// | title 	| String 	| This denotes the title of the post. 	|
// | body 	| String 	| This denotes the body of the post. 	|
// | giphy_url 	| String 	| This denotes the giphy url of the post if added. 	|
// | created_at 	| Datetime 	| This denotes the created date time of the post. 	|
// | updated_at 	| Datetime 	| This denotes the updated date time of the post. 	|
// | photo 	| String 	| This denotes the photo if uploaded against the post. 	|
// | photo_large 	| String 	| This denots the larger pixel of the photo if uploaded against the demo. 	|
// | giphy 	| String 	| This denotes the giphy of the post if uploaded. 	|
// | author 	| String 	| This denotes the author of the post. 	|
// | reporters 	| String 	| This post denotes the reporters of the post. 	|
// | ratings 	| String 	| This denotes the ratings of the post. 	|
// | comments 	| String 	| Ths denotes the comments of the post. 	|
// | cent_yous 	| String 	| This denotes the cents of the post. 	|

@name("Get Post Details")
GET "https://{{apip_url}}/posts/{{postid}}"
"Authorization": "Bearer {{authorization-token}}"
"Accept": "application/vnd.fidor.de"
"Content-Type": "application/vnd.api+json"
? "type"= "finance_question"


// This API is used to archive the posts in case it contains malicious content.
// 
// Post id{postid} and post type are passed as part of the header request to archive the post whenever applicable. 
// 
// Post type can be one of the following: finance_question, product_suggestion or saving_tips.

@name("Archive Post")
DELETE "https://{{apip_url}}/posts/{{postid}}"
"Authorization": "Bearer {{authorization-token}}"
"Accept": "application/vnd.fidor.de"
"Content-Type": ""
? "type"= "finance_question"


// This API can be used for 2 purposes
// 
// 1.This API un-flags the flag where a moderator can flag for 3rd party to review.
// 
// 2.The API can be used to archive the posts in case it contains malicious content.
// 
// Post id{postid} and post type are passed as part of the header request to archive the post whenever applicable. 
// 
// Post type can be one of the following: finance_question, product_suggestion or saving_tips.

@name("Unflag Post")
PUT "https://{{apip_url}}/posts/{{postid}}/unflag"
"Authorization": "Bearer {{authorization-token}}"
"Accept": "application/vnd.fidor.de"
"Content-Type": ""
? "type"= "finance_question"


// This API can be used for 2 purposes
// 
// 1.This API un-flags the flag where a moderator can flag for 3rd party to review.
// 
// 2.The API can be used to archive the posts in case it contains malicious content.
// 
// Post id{postid} and post type are passed as part of the header request to archive the post whenever applicable. 
// 
// Post type can be one of the following: finance_question, product_suggestion or saving_tips.

@name("Flag post")
PUT "https://{{apip_url}}/posts/{{postid}}/flag"
"Authorization": "Bearer {{authorization-token}}"
"Accept": "application/vnd.fidor.de"
"Content-Type": ""
? "type"= "finance_question"



